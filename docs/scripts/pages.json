[{"name":"class Log4kILoggerFactory : ILoggerFactory","description":"io.github.smyrgeorge.log4k.slf4j.Log4kILoggerFactory","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-i-logger-factory/index.html","searchKeys":["Log4kILoggerFactory","class Log4kILoggerFactory : ILoggerFactory","io.github.smyrgeorge.log4k.slf4j.Log4kILoggerFactory"]},{"name":"class Log4kLogger(log4k: Logger) : LegacyAbstractLogger","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/index.html","searchKeys":["Log4kLogger","class Log4kLogger(log4k: Logger) : LegacyAbstractLogger","io.github.smyrgeorge.log4k.slf4j.Log4kLogger"]},{"name":"class Log4kSLF4JServiceProvider : SLF4JServiceProvider","description":"io.github.smyrgeorge.log4k.slf4j.Log4kSLF4JServiceProvider","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-s-l-f4-j-service-provider/index.html","searchKeys":["Log4kSLF4JServiceProvider","class Log4kSLF4JServiceProvider : SLF4JServiceProvider","io.github.smyrgeorge.log4k.slf4j.Log4kSLF4JServiceProvider"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.slf4j.Log4kILoggerFactory.Log4kILoggerFactory","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-i-logger-factory/-log4k-i-logger-factory.html","searchKeys":["Log4kILoggerFactory","constructor()","io.github.smyrgeorge.log4k.slf4j.Log4kILoggerFactory.Log4kILoggerFactory"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.slf4j.Log4kSLF4JServiceProvider.Log4kSLF4JServiceProvider","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-s-l-f4-j-service-provider/-log4k-s-l-f4-j-service-provider.html","searchKeys":["Log4kSLF4JServiceProvider","constructor()","io.github.smyrgeorge.log4k.slf4j.Log4kSLF4JServiceProvider.Log4kSLF4JServiceProvider"]},{"name":"constructor(log4k: Logger)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.Log4kLogger","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/-log4k-logger.html","searchKeys":["Log4kLogger","constructor(log4k: Logger)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.Log4kLogger"]},{"name":"open override fun debug(format: String?, arg1: Any?, arg2: Any?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.debug","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/debug.html","searchKeys":["debug","open override fun debug(format: String?, arg1: Any?, arg2: Any?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.debug"]},{"name":"open override fun debug(format: String?, arg: Any?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.debug","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/debug.html","searchKeys":["debug","open override fun debug(format: String?, arg: Any?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.debug"]},{"name":"open override fun debug(format: String?, vararg arguments: Any?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.debug","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/debug.html","searchKeys":["debug","open override fun debug(format: String?, vararg arguments: Any?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.debug"]},{"name":"open override fun debug(msg: String?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.debug","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/debug.html","searchKeys":["debug","open override fun debug(msg: String?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.debug"]},{"name":"open override fun debug(msg: String?, t: Throwable?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.debug","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/debug.html","searchKeys":["debug","open override fun debug(msg: String?, t: Throwable?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.debug"]},{"name":"open override fun error(format: String?, arg1: Any?, arg2: Any?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.error","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/error.html","searchKeys":["error","open override fun error(format: String?, arg1: Any?, arg2: Any?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.error"]},{"name":"open override fun error(format: String?, arg: Any?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.error","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/error.html","searchKeys":["error","open override fun error(format: String?, arg: Any?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.error"]},{"name":"open override fun error(format: String?, vararg arguments: Any?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.error","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/error.html","searchKeys":["error","open override fun error(format: String?, vararg arguments: Any?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.error"]},{"name":"open override fun error(msg: String?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.error","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/error.html","searchKeys":["error","open override fun error(msg: String?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.error"]},{"name":"open override fun error(msg: String?, t: Throwable?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.error","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/error.html","searchKeys":["error","open override fun error(msg: String?, t: Throwable?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.error"]},{"name":"open override fun getLogger(name: String): Logger","description":"io.github.smyrgeorge.log4k.slf4j.Log4kILoggerFactory.getLogger","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-i-logger-factory/get-logger.html","searchKeys":["getLogger","open override fun getLogger(name: String): Logger","io.github.smyrgeorge.log4k.slf4j.Log4kILoggerFactory.getLogger"]},{"name":"open override fun getLoggerFactory(): ILoggerFactory","description":"io.github.smyrgeorge.log4k.slf4j.Log4kSLF4JServiceProvider.getLoggerFactory","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-s-l-f4-j-service-provider/get-logger-factory.html","searchKeys":["getLoggerFactory","open override fun getLoggerFactory(): ILoggerFactory","io.github.smyrgeorge.log4k.slf4j.Log4kSLF4JServiceProvider.getLoggerFactory"]},{"name":"open override fun getMDCAdapter(): MDCAdapter","description":"io.github.smyrgeorge.log4k.slf4j.Log4kSLF4JServiceProvider.getMDCAdapter","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-s-l-f4-j-service-provider/get-m-d-c-adapter.html","searchKeys":["getMDCAdapter","open override fun getMDCAdapter(): MDCAdapter","io.github.smyrgeorge.log4k.slf4j.Log4kSLF4JServiceProvider.getMDCAdapter"]},{"name":"open override fun getMarkerFactory(): IMarkerFactory","description":"io.github.smyrgeorge.log4k.slf4j.Log4kSLF4JServiceProvider.getMarkerFactory","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-s-l-f4-j-service-provider/get-marker-factory.html","searchKeys":["getMarkerFactory","open override fun getMarkerFactory(): IMarkerFactory","io.github.smyrgeorge.log4k.slf4j.Log4kSLF4JServiceProvider.getMarkerFactory"]},{"name":"open override fun getName(): String","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.getName","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/get-name.html","searchKeys":["getName","open override fun getName(): String","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.getName"]},{"name":"open override fun getRequestedApiVersion(): String","description":"io.github.smyrgeorge.log4k.slf4j.Log4kSLF4JServiceProvider.getRequestedApiVersion","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-s-l-f4-j-service-provider/get-requested-api-version.html","searchKeys":["getRequestedApiVersion","open override fun getRequestedApiVersion(): String","io.github.smyrgeorge.log4k.slf4j.Log4kSLF4JServiceProvider.getRequestedApiVersion"]},{"name":"open override fun info(format: String?, arg1: Any?, arg2: Any?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.info","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/info.html","searchKeys":["info","open override fun info(format: String?, arg1: Any?, arg2: Any?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.info"]},{"name":"open override fun info(format: String?, arg: Any?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.info","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/info.html","searchKeys":["info","open override fun info(format: String?, arg: Any?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.info"]},{"name":"open override fun info(format: String?, vararg arguments: Any?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.info","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/info.html","searchKeys":["info","open override fun info(format: String?, vararg arguments: Any?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.info"]},{"name":"open override fun info(msg: String?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.info","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/info.html","searchKeys":["info","open override fun info(msg: String?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.info"]},{"name":"open override fun info(msg: String?, t: Throwable?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.info","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/info.html","searchKeys":["info","open override fun info(msg: String?, t: Throwable?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.info"]},{"name":"open override fun initialize()","description":"io.github.smyrgeorge.log4k.slf4j.Log4kSLF4JServiceProvider.initialize","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-s-l-f4-j-service-provider/initialize.html","searchKeys":["initialize","open override fun initialize()","io.github.smyrgeorge.log4k.slf4j.Log4kSLF4JServiceProvider.initialize"]},{"name":"open override fun isDebugEnabled(): Boolean","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.isDebugEnabled","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/is-debug-enabled.html","searchKeys":["isDebugEnabled","open override fun isDebugEnabled(): Boolean","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.isDebugEnabled"]},{"name":"open override fun isErrorEnabled(): Boolean","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.isErrorEnabled","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/is-error-enabled.html","searchKeys":["isErrorEnabled","open override fun isErrorEnabled(): Boolean","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.isErrorEnabled"]},{"name":"open override fun isInfoEnabled(): Boolean","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.isInfoEnabled","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/is-info-enabled.html","searchKeys":["isInfoEnabled","open override fun isInfoEnabled(): Boolean","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.isInfoEnabled"]},{"name":"open override fun isTraceEnabled(): Boolean","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.isTraceEnabled","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/is-trace-enabled.html","searchKeys":["isTraceEnabled","open override fun isTraceEnabled(): Boolean","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.isTraceEnabled"]},{"name":"open override fun isWarnEnabled(): Boolean","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.isWarnEnabled","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/is-warn-enabled.html","searchKeys":["isWarnEnabled","open override fun isWarnEnabled(): Boolean","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.isWarnEnabled"]},{"name":"open override fun trace(format: String?, arg1: Any?, arg2: Any?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.trace","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/trace.html","searchKeys":["trace","open override fun trace(format: String?, arg1: Any?, arg2: Any?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.trace"]},{"name":"open override fun trace(format: String?, arg: Any?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.trace","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/trace.html","searchKeys":["trace","open override fun trace(format: String?, arg: Any?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.trace"]},{"name":"open override fun trace(format: String?, vararg arguments: Any?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.trace","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/trace.html","searchKeys":["trace","open override fun trace(format: String?, vararg arguments: Any?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.trace"]},{"name":"open override fun trace(msg: String?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.trace","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/trace.html","searchKeys":["trace","open override fun trace(msg: String?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.trace"]},{"name":"open override fun trace(msg: String?, t: Throwable?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.trace","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/trace.html","searchKeys":["trace","open override fun trace(msg: String?, t: Throwable?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.trace"]},{"name":"open override fun warn(format: String?, arg1: Any?, arg2: Any?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.warn","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/warn.html","searchKeys":["warn","open override fun warn(format: String?, arg1: Any?, arg2: Any?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.warn"]},{"name":"open override fun warn(format: String?, arg: Any?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.warn","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/warn.html","searchKeys":["warn","open override fun warn(format: String?, arg: Any?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.warn"]},{"name":"open override fun warn(format: String?, vararg arguments: Any?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.warn","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/warn.html","searchKeys":["warn","open override fun warn(format: String?, vararg arguments: Any?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.warn"]},{"name":"open override fun warn(msg: String?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.warn","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/warn.html","searchKeys":["warn","open override fun warn(msg: String?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.warn"]},{"name":"open override fun warn(msg: String?, t: Throwable?)","description":"io.github.smyrgeorge.log4k.slf4j.Log4kLogger.warn","location":"log4k-slf4j/io.github.smyrgeorge.log4k.slf4j/-log4k-logger/warn.html","searchKeys":["warn","open override fun warn(msg: String?, t: Throwable?)","io.github.smyrgeorge.log4k.slf4j.Log4kLogger.warn"]},{"name":"abstract class CoroutinesLoggerFactory","description":"io.github.smyrgeorge.log4k.coroutines.CoroutinesLoggerFactory","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-coroutines-logger-factory/index.html","searchKeys":["CoroutinesLoggerFactory","abstract class CoroutinesLoggerFactory","io.github.smyrgeorge.log4k.coroutines.CoroutinesLoggerFactory"]},{"name":"abstract class Logger(val name: String, var level: Level) : CollectorRegistry.Collector","description":"io.github.smyrgeorge.log4k.coroutines.Logger","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/index.html","searchKeys":["Logger","abstract class Logger(val name: String, var level: Level) : CollectorRegistry.Collector","io.github.smyrgeorge.log4k.coroutines.Logger"]},{"name":"abstract fun create(name: String): Logger","description":"io.github.smyrgeorge.log4k.coroutines.CoroutinesLoggerFactory.create","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-coroutines-logger-factory/create.html","searchKeys":["create","abstract fun create(name: String): Logger","io.github.smyrgeorge.log4k.coroutines.CoroutinesLoggerFactory.create"]},{"name":"abstract fun toLoggingEvent(level: Level, span: TracingEvent.Span?, message: String, arguments: Array<out Any?>, throwable: Throwable?): LoggingEvent","description":"io.github.smyrgeorge.log4k.coroutines.Logger.toLoggingEvent","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/to-logging-event.html","searchKeys":["toLoggingEvent","abstract fun toLoggingEvent(level: Level, span: TracingEvent.Span?, message: String, arguments: Array<out Any?>, throwable: Throwable?): LoggingEvent","io.github.smyrgeorge.log4k.coroutines.Logger.toLoggingEvent"]},{"name":"class Builder","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.Builder","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-builder/index.html","searchKeys":["Builder","class Builder","io.github.smyrgeorge.log4k.coroutines.LoggingContext.Builder"]},{"name":"class LoggingContext(val tags: Tags = emptyMap()) : CoroutineContext.Element","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/index.html","searchKeys":["LoggingContext","class LoggingContext(val tags: Tags = emptyMap()) : CoroutineContext.Element","io.github.smyrgeorge.log4k.coroutines.LoggingContext"]},{"name":"class SimpleCoroutinesLogger(val name: String, var level: Level) : Logger","description":"io.github.smyrgeorge.log4k.coroutines.impl.SimpleCoroutinesLogger","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines.impl/-simple-coroutines-logger/index.html","searchKeys":["SimpleCoroutinesLogger","class SimpleCoroutinesLogger(val name: String, var level: Level) : Logger","io.github.smyrgeorge.log4k.coroutines.impl.SimpleCoroutinesLogger"]},{"name":"class SimpleCoroutinesLoggerFactory : CoroutinesLoggerFactory","description":"io.github.smyrgeorge.log4k.coroutines.impl.SimpleCoroutinesLoggerFactory","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines.impl/-simple-coroutines-logger-factory/index.html","searchKeys":["SimpleCoroutinesLoggerFactory","class SimpleCoroutinesLoggerFactory : CoroutinesLoggerFactory","io.github.smyrgeorge.log4k.coroutines.impl.SimpleCoroutinesLoggerFactory"]},{"name":"class SpanStack","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-span-stack/index.html","searchKeys":["SpanStack","class SpanStack","io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.coroutines.CoroutinesLoggerFactory.CoroutinesLoggerFactory","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-coroutines-logger-factory/-coroutines-logger-factory.html","searchKeys":["CoroutinesLoggerFactory","constructor()","io.github.smyrgeorge.log4k.coroutines.CoroutinesLoggerFactory.CoroutinesLoggerFactory"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.Builder.Builder","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-builder/-builder.html","searchKeys":["Builder","constructor()","io.github.smyrgeorge.log4k.coroutines.LoggingContext.Builder.Builder"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.SpanStack","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-span-stack/-span-stack.html","searchKeys":["SpanStack","constructor()","io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.SpanStack"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.coroutines.impl.SimpleCoroutinesLoggerFactory.SimpleCoroutinesLoggerFactory","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines.impl/-simple-coroutines-logger-factory/-simple-coroutines-logger-factory.html","searchKeys":["SimpleCoroutinesLoggerFactory","constructor()","io.github.smyrgeorge.log4k.coroutines.impl.SimpleCoroutinesLoggerFactory.SimpleCoroutinesLoggerFactory"]},{"name":"constructor(name: String, level: Level)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.Logger","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/-logger.html","searchKeys":["Logger","constructor(name: String, level: Level)","io.github.smyrgeorge.log4k.coroutines.Logger.Logger"]},{"name":"constructor(name: String, level: Level)","description":"io.github.smyrgeorge.log4k.coroutines.impl.SimpleCoroutinesLogger.SimpleCoroutinesLogger","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines.impl/-simple-coroutines-logger/-simple-coroutines-logger.html","searchKeys":["SimpleCoroutinesLogger","constructor(name: String, level: Level)","io.github.smyrgeorge.log4k.coroutines.impl.SimpleCoroutinesLogger.SimpleCoroutinesLogger"]},{"name":"constructor(span: TracingEvent.Span)","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.LoggingContext","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-logging-context.html","searchKeys":["LoggingContext","constructor(span: TracingEvent.Span)","io.github.smyrgeorge.log4k.coroutines.LoggingContext.LoggingContext"]},{"name":"constructor(tags: Tags = emptyMap())","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.LoggingContext","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-logging-context.html","searchKeys":["LoggingContext","constructor(tags: Tags = emptyMap())","io.github.smyrgeorge.log4k.coroutines.LoggingContext.LoggingContext"]},{"name":"constructor(tags: Tags, span: TracingEvent.Span)","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.LoggingContext","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-logging-context.html","searchKeys":["LoggingContext","constructor(tags: Tags, span: TracingEvent.Span)","io.github.smyrgeorge.log4k.coroutines.LoggingContext.LoggingContext"]},{"name":"fun Level.shouldLog(): Boolean","description":"io.github.smyrgeorge.log4k.coroutines.Logger.shouldLog","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/should-log.html","searchKeys":["shouldLog","fun Level.shouldLog(): Boolean","io.github.smyrgeorge.log4k.coroutines.Logger.shouldLog"]},{"name":"fun build(): LoggingContext","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.Builder.build","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-builder/build.html","searchKeys":["build","fun build(): LoggingContext","io.github.smyrgeorge.log4k.coroutines.LoggingContext.Builder.build"]},{"name":"fun builder(): LoggingContext.Builder","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion.builder","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-companion/builder.html","searchKeys":["builder","fun builder(): LoggingContext.Builder","io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion.builder"]},{"name":"fun clear()","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.clear","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-span-stack/clear.html","searchKeys":["clear","fun clear()","io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.clear"]},{"name":"fun get(clazz: KClass<*>): Logger","description":"io.github.smyrgeorge.log4k.coroutines.CoroutinesLoggerFactory.get","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-coroutines-logger-factory/get.html","searchKeys":["get","fun get(clazz: KClass<*>): Logger","io.github.smyrgeorge.log4k.coroutines.CoroutinesLoggerFactory.get"]},{"name":"fun get(name: String): Logger","description":"io.github.smyrgeorge.log4k.coroutines.CoroutinesLoggerFactory.get","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-coroutines-logger-factory/get.html","searchKeys":["get","fun get(name: String): Logger","io.github.smyrgeorge.log4k.coroutines.CoroutinesLoggerFactory.get"]},{"name":"fun isEmpty(): Boolean","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.isEmpty","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-span-stack/is-empty.html","searchKeys":["isEmpty","fun isEmpty(): Boolean","io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.isEmpty"]},{"name":"fun isNotEmpty(): Boolean","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.isNotEmpty","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-span-stack/is-not-empty.html","searchKeys":["isNotEmpty","fun isNotEmpty(): Boolean","io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.isNotEmpty"]},{"name":"fun of(): LoggingContext","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion.of","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-companion/of.html","searchKeys":["of","fun of(): LoggingContext","io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion.of"]},{"name":"fun of(clazz: KClass<*>): Logger","description":"io.github.smyrgeorge.log4k.coroutines.Logger.Companion.of","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/-companion/of.html","searchKeys":["of","fun of(clazz: KClass<*>): Logger","io.github.smyrgeorge.log4k.coroutines.Logger.Companion.of"]},{"name":"fun of(name: String): Logger","description":"io.github.smyrgeorge.log4k.coroutines.Logger.Companion.of","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/-companion/of.html","searchKeys":["of","fun of(name: String): Logger","io.github.smyrgeorge.log4k.coroutines.Logger.Companion.of"]},{"name":"fun of(span: TracingEvent.Span): LoggingContext","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion.of","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-companion/of.html","searchKeys":["of","fun of(span: TracingEvent.Span): LoggingContext","io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion.of"]},{"name":"fun of(span: TracingEvent.Span, tags: Tags): LoggingContext","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion.of","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-companion/of.html","searchKeys":["of","fun of(span: TracingEvent.Span, tags: Tags): LoggingContext","io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion.of"]},{"name":"fun of(span: TracingEvent.Span, vararg tags: Tag): LoggingContext","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion.of","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-companion/of.html","searchKeys":["of","fun of(span: TracingEvent.Span, vararg tags: Tag): LoggingContext","io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion.of"]},{"name":"fun peek(): TracingEvent.Span?","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.peek","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-span-stack/peek.html","searchKeys":["peek","fun peek(): TracingEvent.Span?","io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.peek"]},{"name":"fun pop(): TracingEvent.Span?","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.pop","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-span-stack/pop.html","searchKeys":["pop","fun pop(): TracingEvent.Span?","io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.pop"]},{"name":"fun push(span: TracingEvent.Span): Boolean","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.push","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-span-stack/push.html","searchKeys":["push","fun push(span: TracingEvent.Span): Boolean","io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.push"]},{"name":"fun with(f: (MutableTags) -> Unit): LoggingContext.Builder","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.Builder.with","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-builder/with.html","searchKeys":["with","fun with(f: (MutableTags) -> Unit): LoggingContext.Builder","io.github.smyrgeorge.log4k.coroutines.LoggingContext.Builder.with"]},{"name":"fun with(span: TracingEvent.Span): LoggingContext.Builder","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.Builder.with","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-builder/with.html","searchKeys":["with","fun with(span: TracingEvent.Span): LoggingContext.Builder","io.github.smyrgeorge.log4k.coroutines.LoggingContext.Builder.with"]},{"name":"fun with(tags: Tags): LoggingContext.Builder","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.Builder.with","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-builder/with.html","searchKeys":["with","fun with(tags: Tags): LoggingContext.Builder","io.github.smyrgeorge.log4k.coroutines.LoggingContext.Builder.with"]},{"name":"fun with(vararg tags: Tag): LoggingContext.Builder","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.Builder.with","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-builder/with.html","searchKeys":["with","fun with(vararg tags: Tag): LoggingContext.Builder","io.github.smyrgeorge.log4k.coroutines.LoggingContext.Builder.with"]},{"name":"inline fun <T : Logger> ofType(clazz: KClass<*>): T","description":"io.github.smyrgeorge.log4k.coroutines.Logger.Companion.ofType","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/-companion/of-type.html","searchKeys":["ofType","inline fun <T : Logger> ofType(clazz: KClass<*>): T","io.github.smyrgeorge.log4k.coroutines.Logger.Companion.ofType"]},{"name":"inline fun <T : Logger> ofType(name: String): T","description":"io.github.smyrgeorge.log4k.coroutines.Logger.Companion.ofType","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/-companion/of-type.html","searchKeys":["ofType","inline fun <T : Logger> ofType(name: String): T","io.github.smyrgeorge.log4k.coroutines.Logger.Companion.ofType"]},{"name":"inline fun <T> span(name: String, f: TracingEvent.Span.Local.() -> T): T","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.span","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/span.html","searchKeys":["span","inline fun <T> span(name: String, f: TracingEvent.Span.Local.() -> T): T","io.github.smyrgeorge.log4k.coroutines.LoggingContext.span"]},{"name":"inline suspend fun debug(f: () -> String)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.debug","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/debug.html","searchKeys":["debug","inline suspend fun debug(f: () -> String)","io.github.smyrgeorge.log4k.coroutines.Logger.debug"]},{"name":"inline suspend fun debug(t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.debug","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/debug.html","searchKeys":["debug","inline suspend fun debug(t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.coroutines.Logger.debug"]},{"name":"inline suspend fun error(f: () -> String?)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.error","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/error.html","searchKeys":["error","inline suspend fun error(f: () -> String?)","io.github.smyrgeorge.log4k.coroutines.Logger.error"]},{"name":"inline suspend fun error(t: Throwable, f: () -> String?)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.error","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/error.html","searchKeys":["error","inline suspend fun error(t: Throwable, f: () -> String?)","io.github.smyrgeorge.log4k.coroutines.Logger.error"]},{"name":"inline suspend fun info(f: () -> String)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.info","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/info.html","searchKeys":["info","inline suspend fun info(f: () -> String)","io.github.smyrgeorge.log4k.coroutines.Logger.info"]},{"name":"inline suspend fun info(t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.info","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/info.html","searchKeys":["info","inline suspend fun info(t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.coroutines.Logger.info"]},{"name":"inline suspend fun trace(f: () -> String)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.trace","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/trace.html","searchKeys":["trace","inline suspend fun trace(f: () -> String)","io.github.smyrgeorge.log4k.coroutines.Logger.trace"]},{"name":"inline suspend fun trace(t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.trace","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/trace.html","searchKeys":["trace","inline suspend fun trace(t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.coroutines.Logger.trace"]},{"name":"inline suspend fun warn(f: () -> String)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.warn","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/warn.html","searchKeys":["warn","inline suspend fun warn(f: () -> String)","io.github.smyrgeorge.log4k.coroutines.Logger.warn"]},{"name":"inline suspend fun warn(t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.warn","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/warn.html","searchKeys":["warn","inline suspend fun warn(t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.coroutines.Logger.warn"]},{"name":"object Companion","description":"io.github.smyrgeorge.log4k.coroutines.Logger.Companion","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.log4k.coroutines.Logger.Companion"]},{"name":"object Companion : CoroutineContext.Key<LoggingContext> ","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-companion/index.html","searchKeys":["Companion","object Companion : CoroutineContext.Key<LoggingContext> ","io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion"]},{"name":"open override fun create(name: String): Logger","description":"io.github.smyrgeorge.log4k.coroutines.impl.SimpleCoroutinesLoggerFactory.create","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines.impl/-simple-coroutines-logger-factory/create.html","searchKeys":["create","open override fun create(name: String): Logger","io.github.smyrgeorge.log4k.coroutines.impl.SimpleCoroutinesLoggerFactory.create"]},{"name":"open override fun toLoggingEvent(level: Level, span: TracingEvent.Span?, message: String, arguments: Array<out Any?>, throwable: Throwable?): LoggingEvent","description":"io.github.smyrgeorge.log4k.coroutines.impl.SimpleCoroutinesLogger.toLoggingEvent","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines.impl/-simple-coroutines-logger/to-logging-event.html","searchKeys":["toLoggingEvent","open override fun toLoggingEvent(level: Level, span: TracingEvent.Span?, message: String, arguments: Array<out Any?>, throwable: Throwable?): LoggingEvent","io.github.smyrgeorge.log4k.coroutines.impl.SimpleCoroutinesLogger.toLoggingEvent"]},{"name":"open override fun toString(): String","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.toString","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-span-stack/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.smyrgeorge.log4k.coroutines.LoggingContext.SpanStack.toString"]},{"name":"open override fun toString(): String","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.toString","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.smyrgeorge.log4k.coroutines.LoggingContext.toString"]},{"name":"open override val key: CoroutineContext.Key<LoggingContext>","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.key","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/key.html","searchKeys":["key","open override val key: CoroutineContext.Key<LoggingContext>","io.github.smyrgeorge.log4k.coroutines.LoggingContext.key"]},{"name":"open override var levelBeforeMute: Level","description":"io.github.smyrgeorge.log4k.coroutines.Logger.levelBeforeMute","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/level-before-mute.html","searchKeys":["levelBeforeMute","open override var levelBeforeMute: Level","io.github.smyrgeorge.log4k.coroutines.Logger.levelBeforeMute"]},{"name":"override val name: String","description":"io.github.smyrgeorge.log4k.coroutines.Logger.name","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/name.html","searchKeys":["name","override val name: String","io.github.smyrgeorge.log4k.coroutines.Logger.name"]},{"name":"override var level: Level","description":"io.github.smyrgeorge.log4k.coroutines.Logger.level","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/level.html","searchKeys":["level","override var level: Level","io.github.smyrgeorge.log4k.coroutines.Logger.level"]},{"name":"suspend fun current(): LoggingContext","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion.current","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-companion/current.html","searchKeys":["current","suspend fun current(): LoggingContext","io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion.current"]},{"name":"suspend fun debug(msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.debug","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/debug.html","searchKeys":["debug","suspend fun debug(msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.coroutines.Logger.debug"]},{"name":"suspend fun debug(msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.debug","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/debug.html","searchKeys":["debug","suspend fun debug(msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.coroutines.Logger.debug"]},{"name":"suspend fun error(msg: String?, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.error","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/error.html","searchKeys":["error","suspend fun error(msg: String?, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.coroutines.Logger.error"]},{"name":"suspend fun error(msg: String?, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.error","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/error.html","searchKeys":["error","suspend fun error(msg: String?, vararg args: Any?)","io.github.smyrgeorge.log4k.coroutines.Logger.error"]},{"name":"suspend fun info(msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.info","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/info.html","searchKeys":["info","suspend fun info(msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.coroutines.Logger.info"]},{"name":"suspend fun info(msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.info","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/info.html","searchKeys":["info","suspend fun info(msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.coroutines.Logger.info"]},{"name":"suspend fun trace(msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.trace","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/trace.html","searchKeys":["trace","suspend fun trace(msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.coroutines.Logger.trace"]},{"name":"suspend fun trace(msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.trace","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/trace.html","searchKeys":["trace","suspend fun trace(msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.coroutines.Logger.trace"]},{"name":"suspend fun warn(msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.warn","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/warn.html","searchKeys":["warn","suspend fun warn(msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.coroutines.Logger.warn"]},{"name":"suspend fun warn(msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.coroutines.Logger.warn","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/warn.html","searchKeys":["warn","suspend fun warn(msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.coroutines.Logger.warn"]},{"name":"val EMPTY: LoggingContext","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion.EMPTY","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: LoggingContext","io.github.smyrgeorge.log4k.coroutines.LoggingContext.Companion.EMPTY"]},{"name":"val registry: CollectorRegistry<Logger>","description":"io.github.smyrgeorge.log4k.coroutines.Logger.Companion.registry","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/-companion/registry.html","searchKeys":["registry","val registry: CollectorRegistry<Logger>","io.github.smyrgeorge.log4k.coroutines.Logger.Companion.registry"]},{"name":"val spans: LoggingContext.SpanStack","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.spans","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/spans.html","searchKeys":["spans","val spans: LoggingContext.SpanStack","io.github.smyrgeorge.log4k.coroutines.LoggingContext.spans"]},{"name":"val tags: Tags","description":"io.github.smyrgeorge.log4k.coroutines.LoggingContext.tags","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logging-context/tags.html","searchKeys":["tags","val tags: Tags","io.github.smyrgeorge.log4k.coroutines.LoggingContext.tags"]},{"name":"var factory: CoroutinesLoggerFactory","description":"io.github.smyrgeorge.log4k.coroutines.Logger.Companion.factory","location":"log4k-coroutines/io.github.smyrgeorge.log4k.coroutines/-logger/-companion/factory.html","searchKeys":["factory","var factory: CoroutinesLoggerFactory","io.github.smyrgeorge.log4k.coroutines.Logger.Companion.factory"]},{"name":"Counter","description":"io.github.smyrgeorge.log4k.Meter.Instrument.Kind.Counter","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-kind/-counter/index.html","searchKeys":["Counter","Counter","io.github.smyrgeorge.log4k.Meter.Instrument.Kind.Counter"]},{"name":"DEBUG","description":"io.github.smyrgeorge.log4k.Level.DEBUG","location":"log4k/io.github.smyrgeorge.log4k/-level/-d-e-b-u-g/index.html","searchKeys":["DEBUG","DEBUG","io.github.smyrgeorge.log4k.Level.DEBUG"]},{"name":"ERROR","description":"io.github.smyrgeorge.log4k.Level.ERROR","location":"log4k/io.github.smyrgeorge.log4k/-level/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","io.github.smyrgeorge.log4k.Level.ERROR"]},{"name":"ERROR","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.ERROR","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-code/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.ERROR"]},{"name":"Gauge","description":"io.github.smyrgeorge.log4k.Meter.Instrument.Kind.Gauge","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-kind/-gauge/index.html","searchKeys":["Gauge","Gauge","io.github.smyrgeorge.log4k.Meter.Instrument.Kind.Gauge"]},{"name":"Histogram","description":"io.github.smyrgeorge.log4k.Meter.Instrument.Kind.Histogram","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-kind/-histogram/index.html","searchKeys":["Histogram","Histogram","io.github.smyrgeorge.log4k.Meter.Instrument.Kind.Histogram"]},{"name":"INFO","description":"io.github.smyrgeorge.log4k.Level.INFO","location":"log4k/io.github.smyrgeorge.log4k/-level/-i-n-f-o/index.html","searchKeys":["INFO","INFO","io.github.smyrgeorge.log4k.Level.INFO"]},{"name":"OFF","description":"io.github.smyrgeorge.log4k.Level.OFF","location":"log4k/io.github.smyrgeorge.log4k/-level/-o-f-f/index.html","searchKeys":["OFF","OFF","io.github.smyrgeorge.log4k.Level.OFF"]},{"name":"OK","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.OK","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-code/-o-k/index.html","searchKeys":["OK","OK","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.OK"]},{"name":"TRACE","description":"io.github.smyrgeorge.log4k.Level.TRACE","location":"log4k/io.github.smyrgeorge.log4k/-level/-t-r-a-c-e/index.html","searchKeys":["TRACE","TRACE","io.github.smyrgeorge.log4k.Level.TRACE"]},{"name":"UNSET","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.UNSET","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-code/-u-n-s-e-t/index.html","searchKeys":["UNSET","UNSET","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.UNSET"]},{"name":"UpDownCounter","description":"io.github.smyrgeorge.log4k.Meter.Instrument.Kind.UpDownCounter","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-kind/-up-down-counter/index.html","searchKeys":["UpDownCounter","UpDownCounter","io.github.smyrgeorge.log4k.Meter.Instrument.Kind.UpDownCounter"]},{"name":"WARN","description":"io.github.smyrgeorge.log4k.Level.WARN","location":"log4k/io.github.smyrgeorge.log4k/-level/-w-a-r-n/index.html","searchKeys":["WARN","WARN","io.github.smyrgeorge.log4k.Level.WARN"]},{"name":"abstract class AbstractCounter(val name: String, val tags: Tags?, val kind: Meter.Instrument.Kind, val unit: String?, val description: String?, var value: Number, var updatedAt: Instant? = null) : SimpleMeteringCollectorAppender.Instrument","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-counter/index.html","searchKeys":["AbstractCounter","abstract class AbstractCounter(val name: String, val tags: Tags?, val kind: Meter.Instrument.Kind, val unit: String?, val description: String?, var value: Number, var updatedAt: Instant? = null) : SimpleMeteringCollectorAppender.Instrument","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter"]},{"name":"abstract class AbstractRecorder(val name: String, val tags: Tags?, val kind: Meter.Instrument.Kind, val unit: String?, val description: String?, var value: Number, var updatedAt: Instant? = null) : SimpleMeteringCollectorAppender.Instrument","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-recorder/index.html","searchKeys":["AbstractRecorder","abstract class AbstractRecorder(val name: String, val tags: Tags?, val kind: Meter.Instrument.Kind, val unit: String?, val description: String?, var value: Number, var updatedAt: Instant? = null) : SimpleMeteringCollectorAppender.Instrument","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder"]},{"name":"abstract class BatchAppender<T>(size: Int) : FlowAppender<List<T>, T> ","description":"io.github.smyrgeorge.log4k.impl.appenders.BatchAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-batch-appender/index.html","searchKeys":["BatchAppender","abstract class BatchAppender<T>(size: Int) : FlowAppender<List<T>, T> ","io.github.smyrgeorge.log4k.impl.appenders.BatchAppender"]},{"name":"abstract class FlowAppender<T, E> : Appender<E> ","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-appender/index.html","searchKeys":["FlowAppender","abstract class FlowAppender<T, E> : Appender<E> ","io.github.smyrgeorge.log4k.impl.appenders.FlowAppender"]},{"name":"abstract class FlowBufferedAppender<T>(capacity: Int, onBufferOverflow: BufferOverflow = BufferOverflow.DROP_OLDEST) : FlowAppender<T, T> ","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowBufferedAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-buffered-appender/index.html","searchKeys":["FlowBufferedAppender","abstract class FlowBufferedAppender<T>(capacity: Int, onBufferOverflow: BufferOverflow = BufferOverflow.DROP_OLDEST) : FlowAppender<T, T> ","io.github.smyrgeorge.log4k.impl.appenders.FlowBufferedAppender"]},{"name":"abstract class FlowFloodProtectedAppender<T>(requestPerSecond: Int, burstDurationMillis: Int, burstResetPeriodMillis: Int = 5000) : FlowAppender<T, T> ","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowFloodProtectedAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-flood-protected-appender/index.html","searchKeys":["FlowFloodProtectedAppender","abstract class FlowFloodProtectedAppender<T>(requestPerSecond: Int, burstDurationMillis: Int, burstResetPeriodMillis: Int = 5000) : FlowAppender<T, T> ","io.github.smyrgeorge.log4k.impl.appenders.FlowFloodProtectedAppender"]},{"name":"abstract class Logger(val name: String, var level: Level) : CollectorRegistry.Collector","description":"io.github.smyrgeorge.log4k.Logger","location":"log4k/io.github.smyrgeorge.log4k/-logger/index.html","searchKeys":["Logger","abstract class Logger(val name: String, var level: Level) : CollectorRegistry.Collector","io.github.smyrgeorge.log4k.Logger"]},{"name":"abstract class LoggerFactory","description":"io.github.smyrgeorge.log4k.LoggerFactory","location":"log4k/io.github.smyrgeorge.log4k/-logger-factory/index.html","searchKeys":["LoggerFactory","abstract class LoggerFactory","io.github.smyrgeorge.log4k.LoggerFactory"]},{"name":"abstract class Meter(val name: String, var level: Level) : CollectorRegistry.Collector","description":"io.github.smyrgeorge.log4k.Meter","location":"log4k/io.github.smyrgeorge.log4k/-meter/index.html","searchKeys":["Meter","abstract class Meter(val name: String, var level: Level) : CollectorRegistry.Collector","io.github.smyrgeorge.log4k.Meter"]},{"name":"abstract class MeterFactory","description":"io.github.smyrgeorge.log4k.MeterFactory","location":"log4k/io.github.smyrgeorge.log4k/-meter-factory/index.html","searchKeys":["MeterFactory","abstract class MeterFactory","io.github.smyrgeorge.log4k.MeterFactory"]},{"name":"abstract class Span(val name: String, val level: Level, val context: TracingEvent.Span.Context, val parent: TracingEvent.Span?, var startAt: Instant?, var endAt: Instant?, val tags: MutableTags, val events: MutableList<TracingEvent.Span.Event>, var status: TracingEvent.Span.Status) : TracingEvent","description":"io.github.smyrgeorge.log4k.TracingEvent.Span","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/index.html","searchKeys":["Span","abstract class Span(val name: String, val level: Level, val context: TracingEvent.Span.Context, val parent: TracingEvent.Span?, var startAt: Instant?, var endAt: Instant?, val tags: MutableTags, val events: MutableList<TracingEvent.Span.Event>, var status: TracingEvent.Span.Status) : TracingEvent","io.github.smyrgeorge.log4k.TracingEvent.Span"]},{"name":"abstract class Tracer(val name: String, var level: Level) : CollectorRegistry.Collector","description":"io.github.smyrgeorge.log4k.Tracer","location":"log4k/io.github.smyrgeorge.log4k/-tracer/index.html","searchKeys":["Tracer","abstract class Tracer(val name: String, var level: Level) : CollectorRegistry.Collector","io.github.smyrgeorge.log4k.Tracer"]},{"name":"abstract class TracerFactory","description":"io.github.smyrgeorge.log4k.TracerFactory","location":"log4k/io.github.smyrgeorge.log4k/-tracer-factory/index.html","searchKeys":["TracerFactory","abstract class TracerFactory","io.github.smyrgeorge.log4k.TracerFactory"]},{"name":"abstract fun create(name: String): Logger","description":"io.github.smyrgeorge.log4k.LoggerFactory.create","location":"log4k/io.github.smyrgeorge.log4k/-logger-factory/create.html","searchKeys":["create","abstract fun create(name: String): Logger","io.github.smyrgeorge.log4k.LoggerFactory.create"]},{"name":"abstract fun create(name: String): Meter","description":"io.github.smyrgeorge.log4k.MeterFactory.create","location":"log4k/io.github.smyrgeorge.log4k/-meter-factory/create.html","searchKeys":["create","abstract fun create(name: String): Meter","io.github.smyrgeorge.log4k.MeterFactory.create"]},{"name":"abstract fun create(name: String): Tracer","description":"io.github.smyrgeorge.log4k.TracerFactory.create","location":"log4k/io.github.smyrgeorge.log4k/-tracer-factory/create.html","searchKeys":["create","abstract fun create(name: String): Tracer","io.github.smyrgeorge.log4k.TracerFactory.create"]},{"name":"abstract fun key(): Int","description":"io.github.smyrgeorge.log4k.MeteringEvent.key","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/key.html","searchKeys":["key","abstract fun key(): Int","io.github.smyrgeorge.log4k.MeteringEvent.key"]},{"name":"abstract fun setup(flow: Flow<E>): Flow<T>","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.setup","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-appender/setup.html","searchKeys":["setup","abstract fun setup(flow: Flow<E>): Flow<T>","io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.setup"]},{"name":"abstract fun toLoggingEvent(level: Level, span: TracingEvent.Span?, message: String, arguments: Array<out Any?>, throwable: Throwable?): LoggingEvent","description":"io.github.smyrgeorge.log4k.Logger.toLoggingEvent","location":"log4k/io.github.smyrgeorge.log4k/-logger/to-logging-event.html","searchKeys":["toLoggingEvent","abstract fun toLoggingEvent(level: Level, span: TracingEvent.Span?, message: String, arguments: Array<out Any?>, throwable: Throwable?): LoggingEvent","io.github.smyrgeorge.log4k.Logger.toLoggingEvent"]},{"name":"abstract suspend fun append(event: T)","description":"io.github.smyrgeorge.log4k.Appender.append","location":"log4k/io.github.smyrgeorge.log4k/-appender/append.html","searchKeys":["append","abstract suspend fun append(event: T)","io.github.smyrgeorge.log4k.Appender.append"]},{"name":"abstract suspend fun handle(event: T)","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.handle","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-appender/handle.html","searchKeys":["handle","abstract suspend fun handle(event: T)","io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.handle"]},{"name":"abstract val description: String?","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.description","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/description.html","searchKeys":["description","abstract val description: String?","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.description"]},{"name":"abstract val kind: Meter.Instrument.Kind","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.kind","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/kind.html","searchKeys":["kind","abstract val kind: Meter.Instrument.Kind","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.kind"]},{"name":"abstract val name: String","description":"io.github.smyrgeorge.log4k.Appender.name","location":"log4k/io.github.smyrgeorge.log4k/-appender/name.html","searchKeys":["name","abstract val name: String","io.github.smyrgeorge.log4k.Appender.name"]},{"name":"abstract val name: String","description":"io.github.smyrgeorge.log4k.MeteringEvent.name","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/name.html","searchKeys":["name","abstract val name: String","io.github.smyrgeorge.log4k.MeteringEvent.name"]},{"name":"abstract val name: String","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.name","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/name.html","searchKeys":["name","abstract val name: String","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.name"]},{"name":"abstract val name: String","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.Collector.name","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/-collector/name.html","searchKeys":["name","abstract val name: String","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.Collector.name"]},{"name":"abstract val tags: Tags","description":"io.github.smyrgeorge.log4k.MeteringEvent.ValueEvent.tags","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-value-event/tags.html","searchKeys":["tags","abstract val tags: Tags","io.github.smyrgeorge.log4k.MeteringEvent.ValueEvent.tags"]},{"name":"abstract val tags: Tags?","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.tags","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/tags.html","searchKeys":["tags","abstract val tags: Tags?","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.tags"]},{"name":"abstract val timestamp: Instant","description":"io.github.smyrgeorge.log4k.MeteringEvent.timestamp","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/timestamp.html","searchKeys":["timestamp","abstract val timestamp: Instant","io.github.smyrgeorge.log4k.MeteringEvent.timestamp"]},{"name":"abstract val unit: String?","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.unit","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/unit.html","searchKeys":["unit","abstract val unit: String?","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.unit"]},{"name":"abstract val value: Number","description":"io.github.smyrgeorge.log4k.MeteringEvent.ValueEvent.value","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-value-event/value.html","searchKeys":["value","abstract val value: Number","io.github.smyrgeorge.log4k.MeteringEvent.ValueEvent.value"]},{"name":"abstract var id: Long","description":"io.github.smyrgeorge.log4k.MeteringEvent.id","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/id.html","searchKeys":["id","abstract var id: Long","io.github.smyrgeorge.log4k.MeteringEvent.id"]},{"name":"abstract var level: Level","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.Collector.level","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/-collector/level.html","searchKeys":["level","abstract var level: Level","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.Collector.level"]},{"name":"abstract var levelBeforeMute: Level","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.Collector.levelBeforeMute","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/-collector/level-before-mute.html","searchKeys":["levelBeforeMute","abstract var levelBeforeMute: Level","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.Collector.levelBeforeMute"]},{"name":"abstract var updatedAt: Instant?","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.updatedAt","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/updated-at.html","searchKeys":["updatedAt","abstract var updatedAt: Instant?","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.updatedAt"]},{"name":"abstract var value: Number","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.value","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/value.html","searchKeys":["value","abstract var value: Number","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.value"]},{"name":"class AppenderRegistry<T>","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/index.html","searchKeys":["AppenderRegistry","class AppenderRegistry<T>","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry"]},{"name":"class CollectorRegistry<T : CollectorRegistry.Collector>","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/index.html","searchKeys":["CollectorRegistry","class CollectorRegistry<T : CollectorRegistry.Collector>","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry"]},{"name":"class Counter(val name: String, val tags: Tags?, val kind: Meter.Instrument.Kind, val unit: String?, val description: String?, var value: Number, var updatedAt: Instant? = null) : SimpleMeteringCollectorAppender.Instrument.AbstractCounter","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Counter","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-counter/index.html","searchKeys":["Counter","class Counter(val name: String, val tags: Tags?, val kind: Meter.Instrument.Kind, val unit: String?, val description: String?, var value: Number, var updatedAt: Instant? = null) : SimpleMeteringCollectorAppender.Instrument.AbstractCounter","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Counter"]},{"name":"class Counter<T : Number>(name: String, meter: Meter, unit: String?, description: String?) : Meter.Instrument.AbstractCounter<T> ","description":"io.github.smyrgeorge.log4k.Meter.Instrument.Counter","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-counter/index.html","searchKeys":["Counter","class Counter<T : Number>(name: String, meter: Meter, unit: String?, description: String?) : Meter.Instrument.AbstractCounter<T> ","io.github.smyrgeorge.log4k.Meter.Instrument.Counter"]},{"name":"class Gauge(val name: String, val tags: Tags?, val kind: Meter.Instrument.Kind, val unit: String?, val description: String?, var value: Number, var updatedAt: Instant? = null) : SimpleMeteringCollectorAppender.Instrument.AbstractRecorder","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Gauge","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-gauge/index.html","searchKeys":["Gauge","class Gauge(val name: String, val tags: Tags?, val kind: Meter.Instrument.Kind, val unit: String?, val description: String?, var value: Number, var updatedAt: Instant? = null) : SimpleMeteringCollectorAppender.Instrument.AbstractRecorder","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Gauge"]},{"name":"class Gauge<T : Number>(name: String, meter: Meter, unit: String? = null, description: String? = null) : Meter.Instrument.AbstractRecorder<T> ","description":"io.github.smyrgeorge.log4k.Meter.Instrument.Gauge","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-gauge/index.html","searchKeys":["Gauge","class Gauge<T : Number>(name: String, meter: Meter, unit: String? = null, description: String? = null) : Meter.Instrument.AbstractRecorder<T> ","io.github.smyrgeorge.log4k.Meter.Instrument.Gauge"]},{"name":"class Local(id: String, val name: String, val level: Level, tracer: Tracer, val parent: TracingEvent.Span? = null, traceId: String = parent?.context?.traceId ?: id) : TracingEvent.Span","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/index.html","searchKeys":["Local","class Local(id: String, val name: String, val level: Level, tracer: Tracer, val parent: TracingEvent.Span? = null, traceId: String = parent?.context?.traceId ?: id) : TracingEvent.Span","io.github.smyrgeorge.log4k.TracingEvent.Span.Local"]},{"name":"class LoggingEvent(var id: Long = 0, val level: Level, val span: TracingEvent.Span?, val timestamp: Instant, val logger: String, val message: String, val arguments: Array<out Any?>, val thread: String, val throwable: Throwable?)","description":"io.github.smyrgeorge.log4k.LoggingEvent","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/index.html","searchKeys":["LoggingEvent","class LoggingEvent(var id: Long = 0, val level: Level, val span: TracingEvent.Span?, val timestamp: Instant, val logger: String, val message: String, val arguments: Array<out Any?>, val thread: String, val throwable: Throwable?)","io.github.smyrgeorge.log4k.LoggingEvent"]},{"name":"class Remote(id: String, traceId: String, val name: String = \"remote-\", val level: Level, tracer: Tracer) : TracingEvent.Span","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Remote","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-remote/index.html","searchKeys":["Remote","class Remote(id: String, traceId: String, val name: String = \"remote-\", val level: Level, tracer: Tracer) : TracingEvent.Span","io.github.smyrgeorge.log4k.TracingEvent.Span.Remote"]},{"name":"class SimpleConsoleLoggingAppender : Appender<LoggingEvent> ","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-logging-appender/index.html","searchKeys":["SimpleConsoleLoggingAppender","class SimpleConsoleLoggingAppender : Appender<LoggingEvent> ","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender"]},{"name":"class SimpleConsoleMeteringAppender : Appender<MeteringEvent> ","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleMeteringAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-metering-appender/index.html","searchKeys":["SimpleConsoleMeteringAppender","class SimpleConsoleMeteringAppender : Appender<MeteringEvent> ","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleMeteringAppender"]},{"name":"class SimpleConsoleTracingAppender : Appender<TracingEvent> ","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-tracing-appender/index.html","searchKeys":["SimpleConsoleTracingAppender","class SimpleConsoleTracingAppender : Appender<TracingEvent> ","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender"]},{"name":"class SimpleJsonConsoleLoggingAppender : Appender<LoggingEvent> ","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleJsonConsoleLoggingAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-json-console-logging-appender/index.html","searchKeys":["SimpleJsonConsoleLoggingAppender","class SimpleJsonConsoleLoggingAppender : Appender<LoggingEvent> ","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleJsonConsoleLoggingAppender"]},{"name":"class SimpleLogger(val name: String, var level: Level) : Logger","description":"io.github.smyrgeorge.log4k.impl.SimpleLogger","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logger/index.html","searchKeys":["SimpleLogger","class SimpleLogger(val name: String, var level: Level) : Logger","io.github.smyrgeorge.log4k.impl.SimpleLogger"]},{"name":"class SimpleLoggerFactory : LoggerFactory","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggerFactory","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logger-factory/index.html","searchKeys":["SimpleLoggerFactory","class SimpleLoggerFactory : LoggerFactory","io.github.smyrgeorge.log4k.impl.SimpleLoggerFactory"]},{"name":"class SimpleMeter(val name: String, var level: Level) : Meter","description":"io.github.smyrgeorge.log4k.impl.SimpleMeter","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-meter/index.html","searchKeys":["SimpleMeter","class SimpleMeter(val name: String, var level: Level) : Meter","io.github.smyrgeorge.log4k.impl.SimpleMeter"]},{"name":"class SimpleMeterFactory : MeterFactory","description":"io.github.smyrgeorge.log4k.impl.SimpleMeterFactory","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-meter-factory/index.html","searchKeys":["SimpleMeterFactory","class SimpleMeterFactory : MeterFactory","io.github.smyrgeorge.log4k.impl.SimpleMeterFactory"]},{"name":"class SimpleMeteringCollectorAppender : Appender<MeteringEvent> ","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/index.html","searchKeys":["SimpleMeteringCollectorAppender","class SimpleMeteringCollectorAppender : Appender<MeteringEvent> ","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender"]},{"name":"class SimpleTracer(val name: String, var level: Level) : Tracer","description":"io.github.smyrgeorge.log4k.impl.SimpleTracer","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-tracer/index.html","searchKeys":["SimpleTracer","class SimpleTracer(val name: String, var level: Level) : Tracer","io.github.smyrgeorge.log4k.impl.SimpleTracer"]},{"name":"class SimpleTracerFactory : TracerFactory","description":"io.github.smyrgeorge.log4k.impl.SimpleTracerFactory","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-tracer-factory/index.html","searchKeys":["SimpleTracerFactory","class SimpleTracerFactory : TracerFactory","io.github.smyrgeorge.log4k.impl.SimpleTracerFactory"]},{"name":"class UpDownCounter(val name: String, val tags: Tags?, val kind: Meter.Instrument.Kind, val unit: String?, val description: String?, var value: Number, var updatedAt: Instant? = null) : SimpleMeteringCollectorAppender.Instrument.AbstractCounter","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.UpDownCounter","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-up-down-counter/index.html","searchKeys":["UpDownCounter","class UpDownCounter(val name: String, val tags: Tags?, val kind: Meter.Instrument.Kind, val unit: String?, val description: String?, var value: Number, var updatedAt: Instant? = null) : SimpleMeteringCollectorAppender.Instrument.AbstractCounter","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.UpDownCounter"]},{"name":"class UpDownCounter<T : Number>(name: String, meter: Meter, unit: String?, description: String?) : Meter.Instrument.AbstractCounter<T> ","description":"io.github.smyrgeorge.log4k.Meter.Instrument.UpDownCounter","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-up-down-counter/index.html","searchKeys":["UpDownCounter","class UpDownCounter<T : Number>(name: String, meter: Meter, unit: String?, description: String?) : Meter.Instrument.AbstractCounter<T> ","io.github.smyrgeorge.log4k.Meter.Instrument.UpDownCounter"]},{"name":"const val DB_CONNECTION_ID: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_CONNECTION_ID","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-c-o-n-n-e-c-t-i-o-n_-i-d.html","searchKeys":["DB_CONNECTION_ID","const val DB_CONNECTION_ID: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_CONNECTION_ID"]},{"name":"const val DB_CONNECTION_STRING: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_CONNECTION_STRING","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-c-o-n-n-e-c-t-i-o-n_-s-t-r-i-n-g.html","searchKeys":["DB_CONNECTION_STRING","const val DB_CONNECTION_STRING: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_CONNECTION_STRING"]},{"name":"const val DB_DRIVER_NAME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_DRIVER_NAME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-d-r-i-v-e-r_-n-a-m-e.html","searchKeys":["DB_DRIVER_NAME","const val DB_DRIVER_NAME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_DRIVER_NAME"]},{"name":"const val DB_DRIVER_VERSION: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_DRIVER_VERSION","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-d-r-i-v-e-r_-v-e-r-s-i-o-n.html","searchKeys":["DB_DRIVER_VERSION","const val DB_DRIVER_VERSION: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_DRIVER_VERSION"]},{"name":"const val DB_NAME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_NAME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-n-a-m-e.html","searchKeys":["DB_NAME","const val DB_NAME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_NAME"]},{"name":"const val DB_OPERATION: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_OPERATION","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-o-p-e-r-a-t-i-o-n.html","searchKeys":["DB_OPERATION","const val DB_OPERATION: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_OPERATION"]},{"name":"const val DB_SQL_ROW_COUNT: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_SQL_ROW_COUNT","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-s-q-l_-r-o-w_-c-o-u-n-t.html","searchKeys":["DB_SQL_ROW_COUNT","const val DB_SQL_ROW_COUNT: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_SQL_ROW_COUNT"]},{"name":"const val DB_SQL_TABLE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_SQL_TABLE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-s-q-l_-t-a-b-l-e.html","searchKeys":["DB_SQL_TABLE","const val DB_SQL_TABLE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_SQL_TABLE"]},{"name":"const val DB_STATEMENT: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_STATEMENT","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-s-t-a-t-e-m-e-n-t.html","searchKeys":["DB_STATEMENT","const val DB_STATEMENT: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_STATEMENT"]},{"name":"const val DB_STATEMENT_ERROR: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_STATEMENT_ERROR","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-s-t-a-t-e-m-e-n-t_-e-r-r-o-r.html","searchKeys":["DB_STATEMENT_ERROR","const val DB_STATEMENT_ERROR: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_STATEMENT_ERROR"]},{"name":"const val DB_SYSTEM: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_SYSTEM","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-s-y-s-t-e-m.html","searchKeys":["DB_SYSTEM","const val DB_SYSTEM: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_SYSTEM"]},{"name":"const val DB_USER: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_USER","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-u-s-e-r.html","searchKeys":["DB_USER","const val DB_USER: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_USER"]},{"name":"const val EXCEPTION: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n.html","searchKeys":["EXCEPTION","const val EXCEPTION: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION"]},{"name":"const val EXCEPTION_CAUGHT: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUGHT","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-c-a-u-g-h-t.html","searchKeys":["EXCEPTION_CAUGHT","const val EXCEPTION_CAUGHT: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUGHT"]},{"name":"const val EXCEPTION_CAUSE_MESSAGE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUSE_MESSAGE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-c-a-u-s-e_-m-e-s-s-a-g-e.html","searchKeys":["EXCEPTION_CAUSE_MESSAGE","const val EXCEPTION_CAUSE_MESSAGE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUSE_MESSAGE"]},{"name":"const val EXCEPTION_CAUSE_STACKTRACE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUSE_STACKTRACE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-c-a-u-s-e_-s-t-a-c-k-t-r-a-c-e.html","searchKeys":["EXCEPTION_CAUSE_STACKTRACE","const val EXCEPTION_CAUSE_STACKTRACE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUSE_STACKTRACE"]},{"name":"const val EXCEPTION_CAUSE_TYPE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUSE_TYPE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-c-a-u-s-e_-t-y-p-e.html","searchKeys":["EXCEPTION_CAUSE_TYPE","const val EXCEPTION_CAUSE_TYPE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUSE_TYPE"]},{"name":"const val EXCEPTION_ESCAPED: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_ESCAPED","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-e-s-c-a-p-e-d.html","searchKeys":["EXCEPTION_ESCAPED","const val EXCEPTION_ESCAPED: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_ESCAPED"]},{"name":"const val EXCEPTION_HANDLED_AT: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_HANDLED_AT","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-h-a-n-d-l-e-d_-a-t.html","searchKeys":["EXCEPTION_HANDLED_AT","const val EXCEPTION_HANDLED_AT: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_HANDLED_AT"]},{"name":"const val EXCEPTION_MESSAGE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_MESSAGE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-m-e-s-s-a-g-e.html","searchKeys":["EXCEPTION_MESSAGE","const val EXCEPTION_MESSAGE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_MESSAGE"]},{"name":"const val EXCEPTION_STACKTRACE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_STACKTRACE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-s-t-a-c-k-t-r-a-c-e.html","searchKeys":["EXCEPTION_STACKTRACE","const val EXCEPTION_STACKTRACE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_STACKTRACE"]},{"name":"const val EXCEPTION_TIMESTAMP: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_TIMESTAMP","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-t-i-m-e-s-t-a-m-p.html","searchKeys":["EXCEPTION_TIMESTAMP","const val EXCEPTION_TIMESTAMP: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_TIMESTAMP"]},{"name":"const val EXCEPTION_TYPE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_TYPE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-t-y-p-e.html","searchKeys":["EXCEPTION_TYPE","const val EXCEPTION_TYPE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_TYPE"]},{"name":"const val HTTP_CLIENT_IP: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_CLIENT_IP","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-c-l-i-e-n-t_-i-p.html","searchKeys":["HTTP_CLIENT_IP","const val HTTP_CLIENT_IP: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_CLIENT_IP"]},{"name":"const val HTTP_ERROR_MESSAGE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_ERROR_MESSAGE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-e-r-r-o-r_-m-e-s-s-a-g-e.html","searchKeys":["HTTP_ERROR_MESSAGE","const val HTTP_ERROR_MESSAGE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_ERROR_MESSAGE"]},{"name":"const val HTTP_FLAVOR: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_FLAVOR","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-f-l-a-v-o-r.html","searchKeys":["HTTP_FLAVOR","const val HTTP_FLAVOR: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_FLAVOR"]},{"name":"const val HTTP_HOST: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_HOST","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-h-o-s-t.html","searchKeys":["HTTP_HOST","const val HTTP_HOST: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_HOST"]},{"name":"const val HTTP_METHOD: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_METHOD","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-m-e-t-h-o-d.html","searchKeys":["HTTP_METHOD","const val HTTP_METHOD: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_METHOD"]},{"name":"const val HTTP_REQUEST_CONTENT_LENGTH: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_REQUEST_CONTENT_LENGTH","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-r-e-q-u-e-s-t_-c-o-n-t-e-n-t_-l-e-n-g-t-h.html","searchKeys":["HTTP_REQUEST_CONTENT_LENGTH","const val HTTP_REQUEST_CONTENT_LENGTH: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_REQUEST_CONTENT_LENGTH"]},{"name":"const val HTTP_RESPONSE_CONTENT_LENGTH: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_RESPONSE_CONTENT_LENGTH","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-r-e-s-p-o-n-s-e_-c-o-n-t-e-n-t_-l-e-n-g-t-h.html","searchKeys":["HTTP_RESPONSE_CONTENT_LENGTH","const val HTTP_RESPONSE_CONTENT_LENGTH: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_RESPONSE_CONTENT_LENGTH"]},{"name":"const val HTTP_ROUTE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_ROUTE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-r-o-u-t-e.html","searchKeys":["HTTP_ROUTE","const val HTTP_ROUTE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_ROUTE"]},{"name":"const val HTTP_SCHEME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_SCHEME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-s-c-h-e-m-e.html","searchKeys":["HTTP_SCHEME","const val HTTP_SCHEME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_SCHEME"]},{"name":"const val HTTP_SERVER_NAME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_SERVER_NAME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-s-e-r-v-e-r_-n-a-m-e.html","searchKeys":["HTTP_SERVER_NAME","const val HTTP_SERVER_NAME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_SERVER_NAME"]},{"name":"const val HTTP_STATUS_CODE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_STATUS_CODE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-s-t-a-t-u-s_-c-o-d-e.html","searchKeys":["HTTP_STATUS_CODE","const val HTTP_STATUS_CODE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_STATUS_CODE"]},{"name":"const val HTTP_TARGET: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_TARGET","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-t-a-r-g-e-t.html","searchKeys":["HTTP_TARGET","const val HTTP_TARGET: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_TARGET"]},{"name":"const val HTTP_URL: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_URL","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-u-r-l.html","searchKeys":["HTTP_URL","const val HTTP_URL: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_URL"]},{"name":"const val HTTP_USER_AGENT: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_USER_AGENT","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-u-s-e-r_-a-g-e-n-t.html","searchKeys":["HTTP_USER_AGENT","const val HTTP_USER_AGENT: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_USER_AGENT"]},{"name":"const val THREAD_BLOCKED_TIME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_BLOCKED_TIME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-t-h-r-e-a-d_-b-l-o-c-k-e-d_-t-i-m-e.html","searchKeys":["THREAD_BLOCKED_TIME","const val THREAD_BLOCKED_TIME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_BLOCKED_TIME"]},{"name":"const val THREAD_CPU_TIME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_CPU_TIME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-t-h-r-e-a-d_-c-p-u_-t-i-m-e.html","searchKeys":["THREAD_CPU_TIME","const val THREAD_CPU_TIME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_CPU_TIME"]},{"name":"const val THREAD_ID: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_ID","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-t-h-r-e-a-d_-i-d.html","searchKeys":["THREAD_ID","const val THREAD_ID: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_ID"]},{"name":"const val THREAD_NAME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_NAME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-t-h-r-e-a-d_-n-a-m-e.html","searchKeys":["THREAD_NAME","const val THREAD_NAME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_NAME"]},{"name":"const val THREAD_PRIORITY: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_PRIORITY","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-t-h-r-e-a-d_-p-r-i-o-r-i-t-y.html","searchKeys":["THREAD_PRIORITY","const val THREAD_PRIORITY: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_PRIORITY"]},{"name":"const val THREAD_STATE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_STATE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-t-h-r-e-a-d_-s-t-a-t-e.html","searchKeys":["THREAD_STATE","const val THREAD_STATE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_STATE"]},{"name":"const val THREAD_WAITING_TIME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_WAITING_TIME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-t-h-r-e-a-d_-w-a-i-t-i-n-g_-t-i-m-e.html","searchKeys":["THREAD_WAITING_TIME","const val THREAD_WAITING_TIME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_WAITING_TIME"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.LoggerFactory.LoggerFactory","location":"log4k/io.github.smyrgeorge.log4k/-logger-factory/-logger-factory.html","searchKeys":["LoggerFactory","constructor()","io.github.smyrgeorge.log4k.LoggerFactory.LoggerFactory"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.MeterFactory.MeterFactory","location":"log4k/io.github.smyrgeorge.log4k/-meter-factory/-meter-factory.html","searchKeys":["MeterFactory","constructor()","io.github.smyrgeorge.log4k.MeterFactory.MeterFactory"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.TracerFactory.TracerFactory","location":"log4k/io.github.smyrgeorge.log4k/-tracer-factory/-tracer-factory.html","searchKeys":["TracerFactory","constructor()","io.github.smyrgeorge.log4k.TracerFactory.TracerFactory"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggerFactory.SimpleLoggerFactory","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logger-factory/-simple-logger-factory.html","searchKeys":["SimpleLoggerFactory","constructor()","io.github.smyrgeorge.log4k.impl.SimpleLoggerFactory.SimpleLoggerFactory"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.SimpleMeterFactory.SimpleMeterFactory","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-meter-factory/-simple-meter-factory.html","searchKeys":["SimpleMeterFactory","constructor()","io.github.smyrgeorge.log4k.impl.SimpleMeterFactory.SimpleMeterFactory"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.SimpleTracerFactory.SimpleTracerFactory","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-tracer-factory/-simple-tracer-factory.html","searchKeys":["SimpleTracerFactory","constructor()","io.github.smyrgeorge.log4k.impl.SimpleTracerFactory.SimpleTracerFactory"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.FlowAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-appender/-flow-appender.html","searchKeys":["FlowAppender","constructor()","io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.FlowAppender"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.SimpleConsoleLoggingAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-logging-appender/-simple-console-logging-appender.html","searchKeys":["SimpleConsoleLoggingAppender","constructor()","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.SimpleConsoleLoggingAppender"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleMeteringAppender.SimpleConsoleMeteringAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-metering-appender/-simple-console-metering-appender.html","searchKeys":["SimpleConsoleMeteringAppender","constructor()","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleMeteringAppender.SimpleConsoleMeteringAppender"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender.SimpleConsoleTracingAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-tracing-appender/-simple-console-tracing-appender.html","searchKeys":["SimpleConsoleTracingAppender","constructor()","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender.SimpleConsoleTracingAppender"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleJsonConsoleLoggingAppender.SimpleJsonConsoleLoggingAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-json-console-logging-appender/-simple-json-console-logging-appender.html","searchKeys":["SimpleJsonConsoleLoggingAppender","constructor()","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleJsonConsoleLoggingAppender.SimpleJsonConsoleLoggingAppender"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.SimpleMeteringCollectorAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-simple-metering-collector-appender.html","searchKeys":["SimpleMeteringCollectorAppender","constructor()","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.SimpleMeteringCollectorAppender"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.AppenderRegistry","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/-appender-registry.html","searchKeys":["AppenderRegistry","constructor()","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.AppenderRegistry"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.CollectorRegistry","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/-collector-registry.html","searchKeys":["CollectorRegistry","constructor()","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.CollectorRegistry"]},{"name":"constructor(capacity: Int, onBufferOverflow: BufferOverflow = BufferOverflow.DROP_OLDEST)","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowBufferedAppender.FlowBufferedAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-buffered-appender/-flow-buffered-appender.html","searchKeys":["FlowBufferedAppender","constructor(capacity: Int, onBufferOverflow: BufferOverflow = BufferOverflow.DROP_OLDEST)","io.github.smyrgeorge.log4k.impl.appenders.FlowBufferedAppender.FlowBufferedAppender"]},{"name":"constructor(code: TracingEvent.Span.Status.Code = Code.UNSET, error: Throwable? = null, description: String? = null)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Status","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-status.html","searchKeys":["Status","constructor(code: TracingEvent.Span.Status.Code = Code.UNSET, error: Throwable? = null, description: String? = null)","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Status"]},{"name":"constructor(id: Long = 0, level: Level, span: TracingEvent.Span?, timestamp: Instant, logger: String, message: String, arguments: Array<out Any?>, thread: String, throwable: Throwable?)","description":"io.github.smyrgeorge.log4k.LoggingEvent.LoggingEvent","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/-logging-event.html","searchKeys":["LoggingEvent","constructor(id: Long = 0, level: Level, span: TracingEvent.Span?, timestamp: Instant, logger: String, message: String, arguments: Array<out Any?>, thread: String, throwable: Throwable?)","io.github.smyrgeorge.log4k.LoggingEvent.LoggingEvent"]},{"name":"constructor(id: Long = 0, name: String, kind: Meter.Instrument.Kind, unit: String?, description: String?, timestamp: Instant = Clock.System.now())","description":"io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.CreateInstrument","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-create-instrument/-create-instrument.html","searchKeys":["CreateInstrument","constructor(id: Long = 0, name: String, kind: Meter.Instrument.Kind, unit: String?, description: String?, timestamp: Instant = Clock.System.now())","io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.CreateInstrument"]},{"name":"constructor(id: Long = 0, name: String, tags: Tags, timestamp: Instant = Clock.System.now(), value: Number)","description":"io.github.smyrgeorge.log4k.MeteringEvent.Decrement.Decrement","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-decrement/-decrement.html","searchKeys":["Decrement","constructor(id: Long = 0, name: String, tags: Tags, timestamp: Instant = Clock.System.now(), value: Number)","io.github.smyrgeorge.log4k.MeteringEvent.Decrement.Decrement"]},{"name":"constructor(id: Long = 0, name: String, tags: Tags, timestamp: Instant = Clock.System.now(), value: Number)","description":"io.github.smyrgeorge.log4k.MeteringEvent.Increment.Increment","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-increment/-increment.html","searchKeys":["Increment","constructor(id: Long = 0, name: String, tags: Tags, timestamp: Instant = Clock.System.now(), value: Number)","io.github.smyrgeorge.log4k.MeteringEvent.Increment.Increment"]},{"name":"constructor(id: Long = 0, name: String, tags: Tags, timestamp: Instant = Clock.System.now(), value: Number)","description":"io.github.smyrgeorge.log4k.MeteringEvent.Record.Record","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-record/-record.html","searchKeys":["Record","constructor(id: Long = 0, name: String, tags: Tags, timestamp: Instant = Clock.System.now(), value: Number)","io.github.smyrgeorge.log4k.MeteringEvent.Record.Record"]},{"name":"constructor(id: Long = 0, name: String, tags: Tags, timestamp: Instant = Clock.System.now(), value: Number)","description":"io.github.smyrgeorge.log4k.MeteringEvent.Set.Set","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-set/-set.html","searchKeys":["Set","constructor(id: Long = 0, name: String, tags: Tags, timestamp: Instant = Clock.System.now(), value: Number)","io.github.smyrgeorge.log4k.MeteringEvent.Set.Set"]},{"name":"constructor(id: String, name: String, level: Level, tracer: Tracer, parent: TracingEvent.Span? = null, traceId: String = parent?.context?.traceId ?: id)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.Local","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/-local.html","searchKeys":["Local","constructor(id: String, name: String, level: Level, tracer: Tracer, parent: TracingEvent.Span? = null, traceId: String = parent?.context?.traceId ?: id)","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.Local"]},{"name":"constructor(id: String, name: String, level: Level, tracer: Tracer, parent: TracingEvent.Span?, traceId: String)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Span","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-span.html","searchKeys":["Span","constructor(id: String, name: String, level: Level, tracer: Tracer, parent: TracingEvent.Span?, traceId: String)","io.github.smyrgeorge.log4k.TracingEvent.Span.Span"]},{"name":"constructor(id: String, traceId: String, name: String = \"remote-\", level: Level, tracer: Tracer)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Remote.Remote","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-remote/-remote.html","searchKeys":["Remote","constructor(id: String, traceId: String, name: String = \"remote-\", level: Level, tracer: Tracer)","io.github.smyrgeorge.log4k.TracingEvent.Span.Remote.Remote"]},{"name":"constructor(id: String, traceId: String, name: String, level: Level, tracer: Tracer)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Span","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-span.html","searchKeys":["Span","constructor(id: String, traceId: String, name: String, level: Level, tracer: Tracer)","io.github.smyrgeorge.log4k.TracingEvent.Span.Span"]},{"name":"constructor(name: String, kind: Meter.Instrument.Kind, unit: String?, description: String?)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Info.Info","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-info/-info.html","searchKeys":["Info","constructor(name: String, kind: Meter.Instrument.Kind, unit: String?, description: String?)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Info.Info"]},{"name":"constructor(name: String, level: Level)","description":"io.github.smyrgeorge.log4k.Logger.Logger","location":"log4k/io.github.smyrgeorge.log4k/-logger/-logger.html","searchKeys":["Logger","constructor(name: String, level: Level)","io.github.smyrgeorge.log4k.Logger.Logger"]},{"name":"constructor(name: String, level: Level)","description":"io.github.smyrgeorge.log4k.Meter.Meter","location":"log4k/io.github.smyrgeorge.log4k/-meter/-meter.html","searchKeys":["Meter","constructor(name: String, level: Level)","io.github.smyrgeorge.log4k.Meter.Meter"]},{"name":"constructor(name: String, level: Level)","description":"io.github.smyrgeorge.log4k.Tracer.Tracer","location":"log4k/io.github.smyrgeorge.log4k/-tracer/-tracer.html","searchKeys":["Tracer","constructor(name: String, level: Level)","io.github.smyrgeorge.log4k.Tracer.Tracer"]},{"name":"constructor(name: String, level: Level)","description":"io.github.smyrgeorge.log4k.impl.SimpleLogger.SimpleLogger","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logger/-simple-logger.html","searchKeys":["SimpleLogger","constructor(name: String, level: Level)","io.github.smyrgeorge.log4k.impl.SimpleLogger.SimpleLogger"]},{"name":"constructor(name: String, level: Level)","description":"io.github.smyrgeorge.log4k.impl.SimpleMeter.SimpleMeter","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-meter/-simple-meter.html","searchKeys":["SimpleMeter","constructor(name: String, level: Level)","io.github.smyrgeorge.log4k.impl.SimpleMeter.SimpleMeter"]},{"name":"constructor(name: String, level: Level)","description":"io.github.smyrgeorge.log4k.impl.SimpleTracer.SimpleTracer","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-tracer/-simple-tracer.html","searchKeys":["SimpleTracer","constructor(name: String, level: Level)","io.github.smyrgeorge.log4k.impl.SimpleTracer.SimpleTracer"]},{"name":"constructor(name: String, level: Level, context: TracingEvent.Span.Context, parent: TracingEvent.Span?, startAt: Instant?, endAt: Instant?, tags: MutableTags, events: MutableList<TracingEvent.Span.Event>, status: TracingEvent.Span.Status)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Span","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-span.html","searchKeys":["Span","constructor(name: String, level: Level, context: TracingEvent.Span.Context, parent: TracingEvent.Span?, startAt: Instant?, endAt: Instant?, tags: MutableTags, events: MutableList<TracingEvent.Span.Event>, status: TracingEvent.Span.Status)","io.github.smyrgeorge.log4k.TracingEvent.Span.Span"]},{"name":"constructor(name: String, meter: Meter, unit: String? = null, description: String? = null)","description":"io.github.smyrgeorge.log4k.Meter.Instrument.Gauge.Gauge","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-gauge/-gauge.html","searchKeys":["Gauge","constructor(name: String, meter: Meter, unit: String? = null, description: String? = null)","io.github.smyrgeorge.log4k.Meter.Instrument.Gauge.Gauge"]},{"name":"constructor(name: String, meter: Meter, unit: String?, description: String?)","description":"io.github.smyrgeorge.log4k.Meter.Instrument.Counter.Counter","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-counter/-counter.html","searchKeys":["Counter","constructor(name: String, meter: Meter, unit: String?, description: String?)","io.github.smyrgeorge.log4k.Meter.Instrument.Counter.Counter"]},{"name":"constructor(name: String, meter: Meter, unit: String?, description: String?)","description":"io.github.smyrgeorge.log4k.Meter.Instrument.UpDownCounter.UpDownCounter","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-up-down-counter/-up-down-counter.html","searchKeys":["UpDownCounter","constructor(name: String, meter: Meter, unit: String?, description: String?)","io.github.smyrgeorge.log4k.Meter.Instrument.UpDownCounter.UpDownCounter"]},{"name":"constructor(name: String, tags: Tags?, kind: Meter.Instrument.Kind, unit: String?, description: String?, value: Number, updatedAt: Instant? = null)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.AbstractCounter","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-counter/-abstract-counter.html","searchKeys":["AbstractCounter","constructor(name: String, tags: Tags?, kind: Meter.Instrument.Kind, unit: String?, description: String?, value: Number, updatedAt: Instant? = null)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.AbstractCounter"]},{"name":"constructor(name: String, tags: Tags?, kind: Meter.Instrument.Kind, unit: String?, description: String?, value: Number, updatedAt: Instant? = null)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.AbstractRecorder","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-recorder/-abstract-recorder.html","searchKeys":["AbstractRecorder","constructor(name: String, tags: Tags?, kind: Meter.Instrument.Kind, unit: String?, description: String?, value: Number, updatedAt: Instant? = null)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.AbstractRecorder"]},{"name":"constructor(name: String, tags: Tags?, kind: Meter.Instrument.Kind, unit: String?, description: String?, value: Number, updatedAt: Instant? = null)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Counter.Counter","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-counter/-counter.html","searchKeys":["Counter","constructor(name: String, tags: Tags?, kind: Meter.Instrument.Kind, unit: String?, description: String?, value: Number, updatedAt: Instant? = null)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Counter.Counter"]},{"name":"constructor(name: String, tags: Tags?, kind: Meter.Instrument.Kind, unit: String?, description: String?, value: Number, updatedAt: Instant? = null)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Gauge.Gauge","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-gauge/-gauge.html","searchKeys":["Gauge","constructor(name: String, tags: Tags?, kind: Meter.Instrument.Kind, unit: String?, description: String?, value: Number, updatedAt: Instant? = null)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Gauge.Gauge"]},{"name":"constructor(name: String, tags: Tags?, kind: Meter.Instrument.Kind, unit: String?, description: String?, value: Number, updatedAt: Instant? = null)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.UpDownCounter.UpDownCounter","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-up-down-counter/-up-down-counter.html","searchKeys":["UpDownCounter","constructor(name: String, tags: Tags?, kind: Meter.Instrument.Kind, unit: String?, description: String?, value: Number, updatedAt: Instant? = null)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.UpDownCounter.UpDownCounter"]},{"name":"constructor(name: String, timestamp: Instant, tags: Tags)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Event.Event","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-event/-event.html","searchKeys":["Event","constructor(name: String, timestamp: Instant, tags: Tags)","io.github.smyrgeorge.log4k.TracingEvent.Span.Event.Event"]},{"name":"constructor(requestPerSecond: Int, burstDurationMillis: Int, burstResetPeriodMillis: Int = 5000)","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowFloodProtectedAppender.FlowFloodProtectedAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-flood-protected-appender/-flow-flood-protected-appender.html","searchKeys":["FlowFloodProtectedAppender","constructor(requestPerSecond: Int, burstDurationMillis: Int, burstResetPeriodMillis: Int = 5000)","io.github.smyrgeorge.log4k.impl.appenders.FlowFloodProtectedAppender.FlowFloodProtectedAppender"]},{"name":"constructor(size: Int)","description":"io.github.smyrgeorge.log4k.impl.appenders.BatchAppender.BatchAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-batch-appender/-batch-appender.html","searchKeys":["BatchAppender","constructor(size: Int)","io.github.smyrgeorge.log4k.impl.appenders.BatchAppender.BatchAppender"]},{"name":"constructor(traceId: String, spanId: String, isRemote: Boolean, tracer: Tracer)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context.Context","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/-context.html","searchKeys":["Context","constructor(traceId: String, spanId: String, isRemote: Boolean, tracer: Tracer)","io.github.smyrgeorge.log4k.TracingEvent.Span.Context.Context"]},{"name":"data class Context(val traceId: String, val spanId: String, val isRemote: Boolean, val tracer: Tracer)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/index.html","searchKeys":["Context","data class Context(val traceId: String, val spanId: String, val isRemote: Boolean, val tracer: Tracer)","io.github.smyrgeorge.log4k.TracingEvent.Span.Context"]},{"name":"data class CreateInstrument(var id: Long = 0, val name: String, val kind: Meter.Instrument.Kind, val unit: String?, val description: String?, val timestamp: Instant = Clock.System.now()) : MeteringEvent","description":"io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-create-instrument/index.html","searchKeys":["CreateInstrument","data class CreateInstrument(var id: Long = 0, val name: String, val kind: Meter.Instrument.Kind, val unit: String?, val description: String?, val timestamp: Instant = Clock.System.now()) : MeteringEvent","io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument"]},{"name":"data class Decrement(var id: Long = 0, val name: String, val tags: Tags, val timestamp: Instant = Clock.System.now(), val value: Number) : MeteringEvent.ValueEvent","description":"io.github.smyrgeorge.log4k.MeteringEvent.Decrement","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-decrement/index.html","searchKeys":["Decrement","data class Decrement(var id: Long = 0, val name: String, val tags: Tags, val timestamp: Instant = Clock.System.now(), val value: Number) : MeteringEvent.ValueEvent","io.github.smyrgeorge.log4k.MeteringEvent.Decrement"]},{"name":"data class Event(val name: String, val timestamp: Instant, val tags: Tags)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Event","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-event/index.html","searchKeys":["Event","data class Event(val name: String, val timestamp: Instant, val tags: Tags)","io.github.smyrgeorge.log4k.TracingEvent.Span.Event"]},{"name":"data class Increment(var id: Long = 0, val name: String, val tags: Tags, val timestamp: Instant = Clock.System.now(), val value: Number) : MeteringEvent.ValueEvent","description":"io.github.smyrgeorge.log4k.MeteringEvent.Increment","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-increment/index.html","searchKeys":["Increment","data class Increment(var id: Long = 0, val name: String, val tags: Tags, val timestamp: Instant = Clock.System.now(), val value: Number) : MeteringEvent.ValueEvent","io.github.smyrgeorge.log4k.MeteringEvent.Increment"]},{"name":"data class Info(val name: String, val kind: Meter.Instrument.Kind, val unit: String?, val description: String?)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Info","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-info/index.html","searchKeys":["Info","data class Info(val name: String, val kind: Meter.Instrument.Kind, val unit: String?, val description: String?)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Info"]},{"name":"data class Record(var id: Long = 0, val name: String, val tags: Tags, val timestamp: Instant = Clock.System.now(), val value: Number) : MeteringEvent.ValueEvent","description":"io.github.smyrgeorge.log4k.MeteringEvent.Record","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-record/index.html","searchKeys":["Record","data class Record(var id: Long = 0, val name: String, val tags: Tags, val timestamp: Instant = Clock.System.now(), val value: Number) : MeteringEvent.ValueEvent","io.github.smyrgeorge.log4k.MeteringEvent.Record"]},{"name":"data class Set(var id: Long = 0, val name: String, val tags: Tags, val timestamp: Instant = Clock.System.now(), val value: Number) : MeteringEvent.ValueEvent","description":"io.github.smyrgeorge.log4k.MeteringEvent.Set","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-set/index.html","searchKeys":["Set","data class Set(var id: Long = 0, val name: String, val tags: Tags, val timestamp: Instant = Clock.System.now(), val value: Number) : MeteringEvent.ValueEvent","io.github.smyrgeorge.log4k.MeteringEvent.Set"]},{"name":"data class Status(val code: TracingEvent.Span.Status.Code = Code.UNSET, val error: Throwable? = null, val description: String? = null)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/index.html","searchKeys":["Status","data class Status(val code: TracingEvent.Span.Status.Code = Code.UNSET, val error: Throwable? = null, val description: String? = null)","io.github.smyrgeorge.log4k.TracingEvent.Span.Status"]},{"name":"enum Code : Enum<TracingEvent.Span.Status.Code> ","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-code/index.html","searchKeys":["Code","enum Code : Enum<TracingEvent.Span.Status.Code> ","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code"]},{"name":"enum Kind : Enum<Meter.Instrument.Kind> ","description":"io.github.smyrgeorge.log4k.Meter.Instrument.Kind","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-kind/index.html","searchKeys":["Kind","enum Kind : Enum<Meter.Instrument.Kind> ","io.github.smyrgeorge.log4k.Meter.Instrument.Kind"]},{"name":"enum Level : Enum<Level> ","description":"io.github.smyrgeorge.log4k.Level","location":"log4k/io.github.smyrgeorge.log4k/-level/index.html","searchKeys":["Level","enum Level : Enum<Level> ","io.github.smyrgeorge.log4k.Level"]},{"name":"expect fun KClass<*>.toName(): String","description":"io.github.smyrgeorge.log4k.impl.extensions.toName","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/to-name.html","searchKeys":["toName","expect fun KClass<*>.toName(): String","io.github.smyrgeorge.log4k.impl.extensions.toName"]},{"name":"expect fun dispatcher(): CoroutineDispatcher","description":"io.github.smyrgeorge.log4k.impl.extensions.dispatcher","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/dispatcher.html","searchKeys":["dispatcher","expect fun dispatcher(): CoroutineDispatcher","io.github.smyrgeorge.log4k.impl.extensions.dispatcher"]},{"name":"expect fun platformPrintlnError(message: String)","description":"io.github.smyrgeorge.log4k.impl.extensions.platformPrintlnError","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/platform-println-error.html","searchKeys":["platformPrintlnError","expect fun platformPrintlnError(message: String)","io.github.smyrgeorge.log4k.impl.extensions.platformPrintlnError"]},{"name":"expect fun thread(): String","description":"io.github.smyrgeorge.log4k.impl.extensions.thread","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/thread.html","searchKeys":["thread","expect fun thread(): String","io.github.smyrgeorge.log4k.impl.extensions.thread"]},{"name":"expect fun threadId(): Int","description":"io.github.smyrgeorge.log4k.impl.extensions.threadId","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/thread-id.html","searchKeys":["threadId","expect fun threadId(): Int","io.github.smyrgeorge.log4k.impl.extensions.threadId"]},{"name":"fun <A : Appender<*>> get(clazz: KClass<A>): A","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.get","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/get.html","searchKeys":["get","fun <A : Appender<*>> get(clazz: KClass<A>): A","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.get"]},{"name":"fun <T : Number> counter(name: String, unit: String? = null, description: String? = null): Meter.Instrument.Counter<T>","description":"io.github.smyrgeorge.log4k.Meter.counter","location":"log4k/io.github.smyrgeorge.log4k/-meter/counter.html","searchKeys":["counter","fun <T : Number> counter(name: String, unit: String? = null, description: String? = null): Meter.Instrument.Counter<T>","io.github.smyrgeorge.log4k.Meter.counter"]},{"name":"fun <T : Number> gauge(name: String, unit: String? = null, description: String? = null): Meter.Instrument.Gauge<T>","description":"io.github.smyrgeorge.log4k.Meter.gauge","location":"log4k/io.github.smyrgeorge.log4k/-meter/gauge.html","searchKeys":["gauge","fun <T : Number> gauge(name: String, unit: String? = null, description: String? = null): Meter.Instrument.Gauge<T>","io.github.smyrgeorge.log4k.Meter.gauge"]},{"name":"fun <T : Number> upDownCounter(name: String, unit: String? = null, description: String? = null): Meter.Instrument.UpDownCounter<T>","description":"io.github.smyrgeorge.log4k.Meter.upDownCounter","location":"log4k/io.github.smyrgeorge.log4k/-meter/up-down-counter.html","searchKeys":["upDownCounter","fun <T : Number> upDownCounter(name: String, unit: String? = null, description: String? = null): Meter.Instrument.UpDownCounter<T>","io.github.smyrgeorge.log4k.Meter.upDownCounter"]},{"name":"fun Level.shouldLog(): Boolean","description":"io.github.smyrgeorge.log4k.Logger.shouldLog","location":"log4k/io.github.smyrgeorge.log4k/-logger/should-log.html","searchKeys":["shouldLog","fun Level.shouldLog(): Boolean","io.github.smyrgeorge.log4k.Logger.shouldLog"]},{"name":"fun List<*>.toJsonElement(): JsonElement","description":"io.github.smyrgeorge.log4k.impl.extensions.toJsonElement","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/to-json-element.html","searchKeys":["toJsonElement","fun List<*>.toJsonElement(): JsonElement","io.github.smyrgeorge.log4k.impl.extensions.toJsonElement"]},{"name":"fun LoggingEvent.print()","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.Companion.print","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-logging-appender/-companion/print.html","searchKeys":["print","fun LoggingEvent.print()","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.Companion.print"]},{"name":"fun LoggingEvent.printJson()","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleJsonConsoleLoggingAppender.Companion.printJson","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-json-console-logging-appender/-companion/print-json.html","searchKeys":["printJson","fun LoggingEvent.printJson()","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleJsonConsoleLoggingAppender.Companion.printJson"]},{"name":"fun Map<*, *>.toJsonElement(): JsonElement","description":"io.github.smyrgeorge.log4k.impl.extensions.toJsonElement","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/to-json-element.html","searchKeys":["toJsonElement","fun Map<*, *>.toJsonElement(): JsonElement","io.github.smyrgeorge.log4k.impl.extensions.toJsonElement"]},{"name":"fun String.format(args: Array<out Any?>): String","description":"io.github.smyrgeorge.log4k.impl.extensions.format","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/format.html","searchKeys":["format","fun String.format(args: Array<out Any?>): String","io.github.smyrgeorge.log4k.impl.extensions.format"]},{"name":"fun all(): List<Appender<T>>","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.all","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/all.html","searchKeys":["all","fun all(): List<Appender<T>>","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.all"]},{"name":"fun debug(msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","fun debug(msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"fun debug(msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","fun debug(msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"fun debug(name: String, tags: Tags = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.debug","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/debug.html","searchKeys":["debug","fun debug(name: String, tags: Tags = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.debug"]},{"name":"fun debug(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","fun debug(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"fun debug(span: TracingEvent.Span, msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","fun debug(span: TracingEvent.Span, msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"fun decrement(event: MeteringEvent.Decrement)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.UpDownCounter.decrement","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-up-down-counter/decrement.html","searchKeys":["decrement","fun decrement(event: MeteringEvent.Decrement)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.UpDownCounter.decrement"]},{"name":"fun decrement(value: T, vararg tags: Pair<String, Any>)","description":"io.github.smyrgeorge.log4k.Meter.Instrument.UpDownCounter.decrement","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-up-down-counter/decrement.html","searchKeys":["decrement","fun decrement(value: T, vararg tags: Pair<String, Any>)","io.github.smyrgeorge.log4k.Meter.Instrument.UpDownCounter.decrement"]},{"name":"fun end(error: Throwable? = null)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.end","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/end.html","searchKeys":["end","fun end(error: Throwable? = null)","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.end"]},{"name":"fun error(msg: String?, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","fun error(msg: String?, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"fun error(msg: String?, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","fun error(msg: String?, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"fun error(name: String, tags: Tags = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.error","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/error.html","searchKeys":["error","fun error(name: String, tags: Tags = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.error"]},{"name":"fun error(span: TracingEvent.Span, msg: String?, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","fun error(span: TracingEvent.Span, msg: String?, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"fun error(span: TracingEvent.Span, msg: String?, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","fun error(span: TracingEvent.Span, msg: String?, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"fun event(name: String, f: (MutableTags) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.event","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/event.html","searchKeys":["event","fun event(name: String, f: (MutableTags) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.event"]},{"name":"fun event(name: String, level: Level, tags: Tags = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.event","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/event.html","searchKeys":["event","fun event(name: String, level: Level, tags: Tags = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.event"]},{"name":"fun event(name: String, tags: Tags = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.event","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/event.html","searchKeys":["event","fun event(name: String, tags: Tags = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.event"]},{"name":"fun exception(error: Throwable, escaped: Boolean, f: (MutableTags) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.exception","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/exception.html","searchKeys":["exception","fun exception(error: Throwable, escaped: Boolean, f: (MutableTags) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.exception"]},{"name":"fun exception(error: Throwable, escaped: Boolean, tags: Tags = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.exception","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/exception.html","searchKeys":["exception","fun exception(error: Throwable, escaped: Boolean, tags: Tags = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.exception"]},{"name":"fun get(clazz: KClass<*>): Logger","description":"io.github.smyrgeorge.log4k.LoggerFactory.get","location":"log4k/io.github.smyrgeorge.log4k/-logger-factory/get.html","searchKeys":["get","fun get(clazz: KClass<*>): Logger","io.github.smyrgeorge.log4k.LoggerFactory.get"]},{"name":"fun get(clazz: KClass<*>): Meter","description":"io.github.smyrgeorge.log4k.MeterFactory.get","location":"log4k/io.github.smyrgeorge.log4k/-meter-factory/get.html","searchKeys":["get","fun get(clazz: KClass<*>): Meter","io.github.smyrgeorge.log4k.MeterFactory.get"]},{"name":"fun get(clazz: KClass<*>): T?","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.get","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/get.html","searchKeys":["get","fun get(clazz: KClass<*>): T?","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.get"]},{"name":"fun get(clazz: KClass<*>): Tracer","description":"io.github.smyrgeorge.log4k.TracerFactory.get","location":"log4k/io.github.smyrgeorge.log4k/-tracer-factory/get.html","searchKeys":["get","fun get(clazz: KClass<*>): Tracer","io.github.smyrgeorge.log4k.TracerFactory.get"]},{"name":"fun get(name: String): Appender<T>","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.get","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/get.html","searchKeys":["get","fun get(name: String): Appender<T>","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.get"]},{"name":"fun get(name: String): Logger","description":"io.github.smyrgeorge.log4k.LoggerFactory.get","location":"log4k/io.github.smyrgeorge.log4k/-logger-factory/get.html","searchKeys":["get","fun get(name: String): Logger","io.github.smyrgeorge.log4k.LoggerFactory.get"]},{"name":"fun get(name: String): Meter","description":"io.github.smyrgeorge.log4k.MeterFactory.get","location":"log4k/io.github.smyrgeorge.log4k/-meter-factory/get.html","searchKeys":["get","fun get(name: String): Meter","io.github.smyrgeorge.log4k.MeterFactory.get"]},{"name":"fun get(name: String): T?","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.get","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/get.html","searchKeys":["get","fun get(name: String): T?","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.get"]},{"name":"fun get(name: String): Tracer","description":"io.github.smyrgeorge.log4k.TracerFactory.get","location":"log4k/io.github.smyrgeorge.log4k/-tracer-factory/get.html","searchKeys":["get","fun get(name: String): Tracer","io.github.smyrgeorge.log4k.TracerFactory.get"]},{"name":"fun id(): Long","description":"io.github.smyrgeorge.log4k.RootLogger.Logging.id","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-logging/id.html","searchKeys":["id","fun id(): Long","io.github.smyrgeorge.log4k.RootLogger.Logging.id"]},{"name":"fun id(): Long","description":"io.github.smyrgeorge.log4k.RootLogger.Metering.id","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-metering/id.html","searchKeys":["id","fun id(): Long","io.github.smyrgeorge.log4k.RootLogger.Metering.id"]},{"name":"fun increment(event: MeteringEvent.Increment)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.increment","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-counter/increment.html","searchKeys":["increment","fun increment(event: MeteringEvent.Increment)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.increment"]},{"name":"fun increment(value: T, vararg tags: Pair<String, Any>)","description":"io.github.smyrgeorge.log4k.Meter.Instrument.AbstractCounter.increment","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-abstract-counter/increment.html","searchKeys":["increment","fun increment(value: T, vararg tags: Pair<String, Any>)","io.github.smyrgeorge.log4k.Meter.Instrument.AbstractCounter.increment"]},{"name":"fun info(msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","fun info(msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"fun info(msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","fun info(msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"fun info(name: String, tags: Tags = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.info","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/info.html","searchKeys":["info","fun info(name: String, tags: Tags = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.info"]},{"name":"fun info(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","fun info(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"fun info(span: TracingEvent.Span, msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","fun info(span: TracingEvent.Span, msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"fun isEnabled(level: Level): Boolean","description":"io.github.smyrgeorge.log4k.Logger.isEnabled","location":"log4k/io.github.smyrgeorge.log4k/-logger/is-enabled.html","searchKeys":["isEnabled","fun isEnabled(level: Level): Boolean","io.github.smyrgeorge.log4k.Logger.isEnabled"]},{"name":"fun isMuted(clazz: KClass<*>): Boolean","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.isMuted","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/is-muted.html","searchKeys":["isMuted","fun isMuted(clazz: KClass<*>): Boolean","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.isMuted"]},{"name":"fun isMuted(name: String): Boolean","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.isMuted","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/is-muted.html","searchKeys":["isMuted","fun isMuted(name: String): Boolean","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.isMuted"]},{"name":"fun log(event: LoggingEvent)","description":"io.github.smyrgeorge.log4k.RootLogger.log","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/log.html","searchKeys":["log","fun log(event: LoggingEvent)","io.github.smyrgeorge.log4k.RootLogger.log"]},{"name":"fun log(level: Level, span: TracingEvent.Span?, message: String, arguments: Array<out Any?>, throwable: Throwable?)","description":"io.github.smyrgeorge.log4k.Logger.log","location":"log4k/io.github.smyrgeorge.log4k/-logger/log.html","searchKeys":["log","fun log(level: Level, span: TracingEvent.Span?, message: String, arguments: Array<out Any?>, throwable: Throwable?)","io.github.smyrgeorge.log4k.Logger.log"]},{"name":"fun meter(event: MeteringEvent)","description":"io.github.smyrgeorge.log4k.RootLogger.meter","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/meter.html","searchKeys":["meter","fun meter(event: MeteringEvent)","io.github.smyrgeorge.log4k.RootLogger.meter"]},{"name":"fun mute(clazz: KClass<*>)","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.mute","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/mute.html","searchKeys":["mute","fun mute(clazz: KClass<*>)","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.mute"]},{"name":"fun mute(name: String)","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.mute","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/mute.html","searchKeys":["mute","fun mute(name: String)","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.mute"]},{"name":"fun of(clazz: KClass<*>): Logger","description":"io.github.smyrgeorge.log4k.Logger.Companion.of","location":"log4k/io.github.smyrgeorge.log4k/-logger/-companion/of.html","searchKeys":["of","fun of(clazz: KClass<*>): Logger","io.github.smyrgeorge.log4k.Logger.Companion.of"]},{"name":"fun of(clazz: KClass<*>): Meter","description":"io.github.smyrgeorge.log4k.Meter.Companion.of","location":"log4k/io.github.smyrgeorge.log4k/-meter/-companion/of.html","searchKeys":["of","fun of(clazz: KClass<*>): Meter","io.github.smyrgeorge.log4k.Meter.Companion.of"]},{"name":"fun of(clazz: KClass<*>): Tracer","description":"io.github.smyrgeorge.log4k.Tracer.Companion.of","location":"log4k/io.github.smyrgeorge.log4k/-tracer/-companion/of.html","searchKeys":["of","fun of(clazz: KClass<*>): Tracer","io.github.smyrgeorge.log4k.Tracer.Companion.of"]},{"name":"fun of(name: String): Logger","description":"io.github.smyrgeorge.log4k.Logger.Companion.of","location":"log4k/io.github.smyrgeorge.log4k/-logger/-companion/of.html","searchKeys":["of","fun of(name: String): Logger","io.github.smyrgeorge.log4k.Logger.Companion.of"]},{"name":"fun of(name: String): Meter","description":"io.github.smyrgeorge.log4k.Meter.Companion.of","location":"log4k/io.github.smyrgeorge.log4k/-meter/-companion/of.html","searchKeys":["of","fun of(name: String): Meter","io.github.smyrgeorge.log4k.Meter.Companion.of"]},{"name":"fun of(name: String): Tracer","description":"io.github.smyrgeorge.log4k.Tracer.Companion.of","location":"log4k/io.github.smyrgeorge.log4k/-tracer/-companion/of.html","searchKeys":["of","fun of(name: String): Tracer","io.github.smyrgeorge.log4k.Tracer.Companion.of"]},{"name":"fun poll(every: Duration, initial: Duration = 10.seconds, f: suspend Meter.Instrument.AbstractRecorder<T>.() -> Unit)","description":"io.github.smyrgeorge.log4k.Meter.Instrument.AbstractRecorder.poll","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-abstract-recorder/poll.html","searchKeys":["poll","fun poll(every: Duration, initial: Duration = 10.seconds, f: suspend Meter.Instrument.AbstractRecorder<T>.() -> Unit)","io.github.smyrgeorge.log4k.Meter.Instrument.AbstractRecorder.poll"]},{"name":"fun primitive(value: Any): JsonPrimitive","description":"io.github.smyrgeorge.log4k.impl.extensions.primitive","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/primitive.html","searchKeys":["primitive","fun primitive(value: Any): JsonPrimitive","io.github.smyrgeorge.log4k.impl.extensions.primitive"]},{"name":"fun record(event: MeteringEvent.Record)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.record","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-recorder/record.html","searchKeys":["record","fun record(event: MeteringEvent.Record)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.record"]},{"name":"fun record(value: T, vararg tags: Pair<String, Any>)","description":"io.github.smyrgeorge.log4k.Meter.Instrument.AbstractRecorder.record","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-abstract-recorder/record.html","searchKeys":["record","fun record(value: T, vararg tags: Pair<String, Any>)","io.github.smyrgeorge.log4k.Meter.Instrument.AbstractRecorder.record"]},{"name":"fun register(appender: Appender<T>): Boolean","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.register","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/register.html","searchKeys":["register","fun register(appender: Appender<T>): Boolean","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.register"]},{"name":"fun register(logger: T)","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.register","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/register.html","searchKeys":["register","fun register(logger: T)","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.register"]},{"name":"fun set(event: MeteringEvent.Set)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.set","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-counter/set.html","searchKeys":["set","fun set(event: MeteringEvent.Set)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.set"]},{"name":"fun set(value: T, vararg tags: Pair<String, Any>)","description":"io.github.smyrgeorge.log4k.Meter.Instrument.AbstractCounter.set","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-abstract-counter/set.html","searchKeys":["set","fun set(value: T, vararg tags: Pair<String, Any>)","io.github.smyrgeorge.log4k.Meter.Instrument.AbstractCounter.set"]},{"name":"fun setLevel(clazz: KClass<*>, level: Level)","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.setLevel","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/set-level.html","searchKeys":["setLevel","fun setLevel(clazz: KClass<*>, level: Level)","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.setLevel"]},{"name":"fun setLevel(name: String, level: Level)","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.setLevel","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/set-level.html","searchKeys":["setLevel","fun setLevel(name: String, level: Level)","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.setLevel"]},{"name":"fun span(id: String, traceId: String, name: String = \"remote-\"): TracingEvent.Span.Remote","description":"io.github.smyrgeorge.log4k.Tracer.span","location":"log4k/io.github.smyrgeorge.log4k/-tracer/span.html","searchKeys":["span","fun span(id: String, traceId: String, name: String = \"remote-\"): TracingEvent.Span.Remote","io.github.smyrgeorge.log4k.Tracer.span"]},{"name":"fun span(name: String): TracingEvent.Span.Local","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.span","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/span.html","searchKeys":["span","fun span(name: String): TracingEvent.Span.Local","io.github.smyrgeorge.log4k.TracingEvent.Span.span"]},{"name":"fun span(name: String, parent: TracingEvent.Span? = null): TracingEvent.Span.Local","description":"io.github.smyrgeorge.log4k.Tracer.span","location":"log4k/io.github.smyrgeorge.log4k/-tracer/span.html","searchKeys":["span","fun span(name: String, parent: TracingEvent.Span? = null): TracingEvent.Span.Local","io.github.smyrgeorge.log4k.Tracer.span"]},{"name":"fun start(): TracingEvent.Span.Local","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.start","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/start.html","searchKeys":["start","fun start(): TracingEvent.Span.Local","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.start"]},{"name":"fun toOpenMetricsLineFormatString(): String","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.toOpenMetricsLineFormatString","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/to-open-metrics-line-format-string.html","searchKeys":["toOpenMetricsLineFormatString","fun toOpenMetricsLineFormatString(): String","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.toOpenMetricsLineFormatString"]},{"name":"fun trace(event: TracingEvent)","description":"io.github.smyrgeorge.log4k.RootLogger.trace","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/trace.html","searchKeys":["trace","fun trace(event: TracingEvent)","io.github.smyrgeorge.log4k.RootLogger.trace"]},{"name":"fun trace(msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","fun trace(msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"fun trace(msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","fun trace(msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"fun trace(name: String, tags: Tags = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.trace","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/trace.html","searchKeys":["trace","fun trace(name: String, tags: Tags = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.trace"]},{"name":"fun trace(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","fun trace(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"fun trace(span: TracingEvent.Span, msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","fun trace(span: TracingEvent.Span, msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"fun unmute(clazz: KClass<*>)","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.unmute","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/unmute.html","searchKeys":["unmute","fun unmute(clazz: KClass<*>)","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.unmute"]},{"name":"fun unmute(name: String)","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.unmute","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/unmute.html","searchKeys":["unmute","fun unmute(name: String)","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.unmute"]},{"name":"fun unregister(appender: Appender<*>): Boolean","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregister","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/unregister.html","searchKeys":["unregister","fun unregister(appender: Appender<*>): Boolean","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregister"]},{"name":"fun unregister(clazz: KClass<*>): Boolean","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregister","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/unregister.html","searchKeys":["unregister","fun unregister(clazz: KClass<*>): Boolean","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregister"]},{"name":"fun unregister(name: String): Boolean","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregister","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/unregister.html","searchKeys":["unregister","fun unregister(name: String): Boolean","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregister"]},{"name":"fun unregisterAll()","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregisterAll","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/unregister-all.html","searchKeys":["unregisterAll","fun unregisterAll()","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregisterAll"]},{"name":"fun valueOf(value: String): Level","description":"io.github.smyrgeorge.log4k.Level.valueOf","location":"log4k/io.github.smyrgeorge.log4k/-level/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Level","io.github.smyrgeorge.log4k.Level.valueOf"]},{"name":"fun valueOf(value: String): Meter.Instrument.Kind","description":"io.github.smyrgeorge.log4k.Meter.Instrument.Kind.valueOf","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-kind/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Meter.Instrument.Kind","io.github.smyrgeorge.log4k.Meter.Instrument.Kind.valueOf"]},{"name":"fun valueOf(value: String): TracingEvent.Span.Status.Code","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.valueOf","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-code/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TracingEvent.Span.Status.Code","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.valueOf"]},{"name":"fun values(): Array<Level>","description":"io.github.smyrgeorge.log4k.Level.values","location":"log4k/io.github.smyrgeorge.log4k/-level/values.html","searchKeys":["values","fun values(): Array<Level>","io.github.smyrgeorge.log4k.Level.values"]},{"name":"fun values(): Array<Meter.Instrument.Kind>","description":"io.github.smyrgeorge.log4k.Meter.Instrument.Kind.values","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-kind/values.html","searchKeys":["values","fun values(): Array<Meter.Instrument.Kind>","io.github.smyrgeorge.log4k.Meter.Instrument.Kind.values"]},{"name":"fun values(): Array<TracingEvent.Span.Status.Code>","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.values","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-code/values.html","searchKeys":["values","fun values(): Array<TracingEvent.Span.Status.Code>","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.values"]},{"name":"fun warn(msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","fun warn(msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"fun warn(msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","fun warn(msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"fun warn(name: String, tags: Tags = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.warn","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/warn.html","searchKeys":["warn","fun warn(name: String, tags: Tags = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.warn"]},{"name":"fun warn(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","fun warn(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"fun warn(span: TracingEvent.Span, msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","fun warn(span: TracingEvent.Span, msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"inline fun <T : Logger> ofType(clazz: KClass<*>): T","description":"io.github.smyrgeorge.log4k.Logger.Companion.ofType","location":"log4k/io.github.smyrgeorge.log4k/-logger/-companion/of-type.html","searchKeys":["ofType","inline fun <T : Logger> ofType(clazz: KClass<*>): T","io.github.smyrgeorge.log4k.Logger.Companion.ofType"]},{"name":"inline fun <T : Logger> ofType(name: String): T","description":"io.github.smyrgeorge.log4k.Logger.Companion.ofType","location":"log4k/io.github.smyrgeorge.log4k/-logger/-companion/of-type.html","searchKeys":["ofType","inline fun <T : Logger> ofType(name: String): T","io.github.smyrgeorge.log4k.Logger.Companion.ofType"]},{"name":"inline fun <T : Meter> ofType(clazz: KClass<*>): T","description":"io.github.smyrgeorge.log4k.Meter.Companion.ofType","location":"log4k/io.github.smyrgeorge.log4k/-meter/-companion/of-type.html","searchKeys":["ofType","inline fun <T : Meter> ofType(clazz: KClass<*>): T","io.github.smyrgeorge.log4k.Meter.Companion.ofType"]},{"name":"inline fun <T : Meter> ofType(name: String): T","description":"io.github.smyrgeorge.log4k.Meter.Companion.ofType","location":"log4k/io.github.smyrgeorge.log4k/-meter/-companion/of-type.html","searchKeys":["ofType","inline fun <T : Meter> ofType(name: String): T","io.github.smyrgeorge.log4k.Meter.Companion.ofType"]},{"name":"inline fun <T : Tracer> ofType(clazz: KClass<*>): T","description":"io.github.smyrgeorge.log4k.Tracer.Companion.ofType","location":"log4k/io.github.smyrgeorge.log4k/-tracer/-companion/of-type.html","searchKeys":["ofType","inline fun <T : Tracer> ofType(clazz: KClass<*>): T","io.github.smyrgeorge.log4k.Tracer.Companion.ofType"]},{"name":"inline fun <T : Tracer> ofType(name: String): T","description":"io.github.smyrgeorge.log4k.Tracer.Companion.ofType","location":"log4k/io.github.smyrgeorge.log4k/-tracer/-companion/of-type.html","searchKeys":["ofType","inline fun <T : Tracer> ofType(name: String): T","io.github.smyrgeorge.log4k.Tracer.Companion.ofType"]},{"name":"inline fun <T> Flow<T>.preventFloodingWithBurst(requestsPerSecond: Int, burstDurationMillis: Int, burstResetPeriodMillis: Int, crossinline onDropMessages: (dropped: Int, totalDropped: Long) -> Unit = { dropped, totalDropped -> println(\"Dropped $dropped log messages due to flooding (total: $totalDropped).\") }): Flow<T>","description":"io.github.smyrgeorge.log4k.impl.extensions.preventFloodingWithBurst","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/prevent-flooding-with-burst.html","searchKeys":["preventFloodingWithBurst","inline fun <T> Flow<T>.preventFloodingWithBurst(requestsPerSecond: Int, burstDurationMillis: Int, burstResetPeriodMillis: Int, crossinline onDropMessages: (dropped: Int, totalDropped: Long) -> Unit = { dropped, totalDropped -> println(\"Dropped $dropped log messages due to flooding (total: $totalDropped).\") }): Flow<T>","io.github.smyrgeorge.log4k.impl.extensions.preventFloodingWithBurst"]},{"name":"inline fun <T> span(name: String, f: TracingEvent.Span.Local.() -> T): T","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.span","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/span.html","searchKeys":["span","inline fun <T> span(name: String, f: TracingEvent.Span.Local.() -> T): T","io.github.smyrgeorge.log4k.TracingEvent.Span.span"]},{"name":"inline fun <T> span(name: String, parent: TracingEvent.Span? = null, f: TracingEvent.Span.Local.() -> T): T","description":"io.github.smyrgeorge.log4k.Tracer.span","location":"log4k/io.github.smyrgeorge.log4k/-tracer/span.html","searchKeys":["span","inline fun <T> span(name: String, parent: TracingEvent.Span? = null, f: TracingEvent.Span.Local.() -> T): T","io.github.smyrgeorge.log4k.Tracer.span"]},{"name":"inline fun debug(f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","inline fun debug(f: () -> String)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"inline fun debug(name: String, f: (Tags) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.debug","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/debug.html","searchKeys":["debug","inline fun debug(name: String, f: (Tags) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.debug"]},{"name":"inline fun debug(span: TracingEvent.Span, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","inline fun debug(span: TracingEvent.Span, f: () -> String)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"inline fun debug(span: TracingEvent.Span, t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","inline fun debug(span: TracingEvent.Span, t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"inline fun debug(t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","inline fun debug(t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"inline fun error(f: () -> String?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","inline fun error(f: () -> String?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"inline fun error(name: String, f: (Tags) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.error","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/error.html","searchKeys":["error","inline fun error(name: String, f: (Tags) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.error"]},{"name":"inline fun error(span: TracingEvent.Span, f: () -> String?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","inline fun error(span: TracingEvent.Span, f: () -> String?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"inline fun error(span: TracingEvent.Span, t: Throwable, f: () -> String?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","inline fun error(span: TracingEvent.Span, t: Throwable, f: () -> String?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"inline fun error(t: Throwable, f: () -> String?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","inline fun error(t: Throwable, f: () -> String?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"inline fun event(name: String, level: Level, f: (MutableTags) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.event","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/event.html","searchKeys":["event","inline fun event(name: String, level: Level, f: (MutableTags) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.event"]},{"name":"inline fun info(f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","inline fun info(f: () -> String)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"inline fun info(name: String, f: (Tags) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.info","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/info.html","searchKeys":["info","inline fun info(name: String, f: (Tags) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.info"]},{"name":"inline fun info(span: TracingEvent.Span, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","inline fun info(span: TracingEvent.Span, f: () -> String)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"inline fun info(span: TracingEvent.Span, t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","inline fun info(span: TracingEvent.Span, t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"inline fun info(t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","inline fun info(t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"inline fun trace(f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","inline fun trace(f: () -> String)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"inline fun trace(name: String, f: (Tags) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.trace","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/trace.html","searchKeys":["trace","inline fun trace(name: String, f: (Tags) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.trace"]},{"name":"inline fun trace(span: TracingEvent.Span, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","inline fun trace(span: TracingEvent.Span, f: () -> String)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"inline fun trace(span: TracingEvent.Span, t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","inline fun trace(span: TracingEvent.Span, t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"inline fun trace(t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","inline fun trace(t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"inline fun warn(f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","inline fun warn(f: () -> String)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"inline fun warn(name: String, f: (Tags) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.warn","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/warn.html","searchKeys":["warn","inline fun warn(name: String, f: (Tags) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.warn"]},{"name":"inline fun warn(span: TracingEvent.Span, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","inline fun warn(span: TracingEvent.Span, f: () -> String)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"inline fun warn(span: TracingEvent.Span, t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","inline fun warn(span: TracingEvent.Span, t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"inline fun warn(t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","inline fun warn(t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"interface Appender<T>","description":"io.github.smyrgeorge.log4k.Appender","location":"log4k/io.github.smyrgeorge.log4k/-appender/index.html","searchKeys":["Appender","interface Appender<T>","io.github.smyrgeorge.log4k.Appender"]},{"name":"interface Collector","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.Collector","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/-collector/index.html","searchKeys":["Collector","interface Collector","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.Collector"]},{"name":"object Companion","description":"io.github.smyrgeorge.log4k.Logger.Companion","location":"log4k/io.github.smyrgeorge.log4k/-logger/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.log4k.Logger.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.log4k.Meter.Companion","location":"log4k/io.github.smyrgeorge.log4k/-meter/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.log4k.Meter.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.log4k.Meter.Instrument.AbstractRecorder.Companion","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-abstract-recorder/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.log4k.Meter.Instrument.AbstractRecorder.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.log4k.Tracer.Companion","location":"log4k/io.github.smyrgeorge.log4k/-tracer/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.log4k.Tracer.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.Companion","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-logging-appender/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleJsonConsoleLoggingAppender.Companion","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-json-console-logging-appender/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleJsonConsoleLoggingAppender.Companion"]},{"name":"object Logging","description":"io.github.smyrgeorge.log4k.RootLogger.Logging","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-logging/index.html","searchKeys":["Logging","object Logging","io.github.smyrgeorge.log4k.RootLogger.Logging"]},{"name":"object Metering","description":"io.github.smyrgeorge.log4k.RootLogger.Metering","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-metering/index.html","searchKeys":["Metering","object Metering","io.github.smyrgeorge.log4k.RootLogger.Metering"]},{"name":"object OpenTelemetry","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/index.html","searchKeys":["OpenTelemetry","object OpenTelemetry","io.github.smyrgeorge.log4k.impl.OpenTelemetry"]},{"name":"object RootLogger","description":"io.github.smyrgeorge.log4k.RootLogger","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/index.html","searchKeys":["RootLogger","object RootLogger","io.github.smyrgeorge.log4k.RootLogger"]},{"name":"object Tracing","description":"io.github.smyrgeorge.log4k.RootLogger.Tracing","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-tracing/index.html","searchKeys":["Tracing","object Tracing","io.github.smyrgeorge.log4k.RootLogger.Tracing"]},{"name":"open fun Tags.format(): String","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.format","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/format.html","searchKeys":["format","open fun Tags.format(): String","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.format"]},{"name":"open fun isMuted(): Boolean","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.Collector.isMuted","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/-collector/is-muted.html","searchKeys":["isMuted","open fun isMuted(): Boolean","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.Collector.isMuted"]},{"name":"open fun mute()","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.Collector.mute","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/-collector/mute.html","searchKeys":["mute","open fun mute()","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.Collector.mute"]},{"name":"open fun openMetricsHeaderString(): String","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.openMetricsHeaderString","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/open-metrics-header-string.html","searchKeys":["openMetricsHeaderString","open fun openMetricsHeaderString(): String","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.openMetricsHeaderString"]},{"name":"open fun openMetricsValueString(): String","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.openMetricsValueString","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/open-metrics-value-string.html","searchKeys":["openMetricsValueString","open fun openMetricsValueString(): String","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.openMetricsValueString"]},{"name":"open fun sortKey(): Int","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.sortKey","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/sort-key.html","searchKeys":["sortKey","open fun sortKey(): Int","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.sortKey"]},{"name":"open fun unmute()","description":"io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.Collector.unmute","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-collector-registry/-collector/unmute.html","searchKeys":["unmute","open fun unmute()","io.github.smyrgeorge.log4k.impl.registry.CollectorRegistry.Collector.unmute"]},{"name":"open override fun create(name: String): Logger","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggerFactory.create","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logger-factory/create.html","searchKeys":["create","open override fun create(name: String): Logger","io.github.smyrgeorge.log4k.impl.SimpleLoggerFactory.create"]},{"name":"open override fun create(name: String): Meter","description":"io.github.smyrgeorge.log4k.impl.SimpleMeterFactory.create","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-meter-factory/create.html","searchKeys":["create","open override fun create(name: String): Meter","io.github.smyrgeorge.log4k.impl.SimpleMeterFactory.create"]},{"name":"open override fun create(name: String): Tracer","description":"io.github.smyrgeorge.log4k.impl.SimpleTracerFactory.create","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-tracer-factory/create.html","searchKeys":["create","open override fun create(name: String): Tracer","io.github.smyrgeorge.log4k.impl.SimpleTracerFactory.create"]},{"name":"open override fun key(): Int","description":"io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.key","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-create-instrument/key.html","searchKeys":["key","open override fun key(): Int","io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.key"]},{"name":"open override fun key(): Int","description":"io.github.smyrgeorge.log4k.MeteringEvent.ValueEvent.key","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-value-event/key.html","searchKeys":["key","open override fun key(): Int","io.github.smyrgeorge.log4k.MeteringEvent.ValueEvent.key"]},{"name":"open override fun setup(flow: Flow<T>): Flow<List<T>>","description":"io.github.smyrgeorge.log4k.impl.appenders.BatchAppender.setup","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-batch-appender/setup.html","searchKeys":["setup","open override fun setup(flow: Flow<T>): Flow<List<T>>","io.github.smyrgeorge.log4k.impl.appenders.BatchAppender.setup"]},{"name":"open override fun setup(flow: Flow<T>): Flow<T>","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowBufferedAppender.setup","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-buffered-appender/setup.html","searchKeys":["setup","open override fun setup(flow: Flow<T>): Flow<T>","io.github.smyrgeorge.log4k.impl.appenders.FlowBufferedAppender.setup"]},{"name":"open override fun setup(flow: Flow<T>): Flow<T>","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowFloodProtectedAppender.setup","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-flood-protected-appender/setup.html","searchKeys":["setup","open override fun setup(flow: Flow<T>): Flow<T>","io.github.smyrgeorge.log4k.impl.appenders.FlowFloodProtectedAppender.setup"]},{"name":"open override fun toLoggingEvent(level: Level, span: TracingEvent.Span?, message: String, arguments: Array<out Any?>, throwable: Throwable?): LoggingEvent","description":"io.github.smyrgeorge.log4k.impl.SimpleLogger.toLoggingEvent","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logger/to-logging-event.html","searchKeys":["toLoggingEvent","open override fun toLoggingEvent(level: Level, span: TracingEvent.Span?, message: String, arguments: Array<out Any?>, throwable: Throwable?): LoggingEvent","io.github.smyrgeorge.log4k.impl.SimpleLogger.toLoggingEvent"]},{"name":"open override fun toString(): String","description":"io.github.smyrgeorge.log4k.Tracer.toString","location":"log4k/io.github.smyrgeorge.log4k/-tracer/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.smyrgeorge.log4k.Tracer.toString"]},{"name":"open override fun toString(): String","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.toString","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.toString"]},{"name":"open override fun toString(): String","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Remote.toString","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-remote/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.smyrgeorge.log4k.TracingEvent.Span.Remote.toString"]},{"name":"open override fun toString(): String","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.toString","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.smyrgeorge.log4k.TracingEvent.Span.toString"]},{"name":"open override val description: String?","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.description","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-counter/description.html","searchKeys":["description","open override val description: String?","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.description"]},{"name":"open override val description: String?","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.description","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-recorder/description.html","searchKeys":["description","open override val description: String?","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.description"]},{"name":"open override val kind: Meter.Instrument.Kind","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.kind","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-counter/kind.html","searchKeys":["kind","open override val kind: Meter.Instrument.Kind","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.kind"]},{"name":"open override val kind: Meter.Instrument.Kind","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.kind","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-recorder/kind.html","searchKeys":["kind","open override val kind: Meter.Instrument.Kind","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.kind"]},{"name":"open override val level: Level","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.level","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/level.html","searchKeys":["level","open override val level: Level","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.level"]},{"name":"open override val level: Level","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Remote.level","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-remote/level.html","searchKeys":["level","open override val level: Level","io.github.smyrgeorge.log4k.TracingEvent.Span.Remote.level"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.name","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-create-instrument/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.name"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.MeteringEvent.Decrement.name","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-decrement/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.MeteringEvent.Decrement.name"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.MeteringEvent.Increment.name","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-increment/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.MeteringEvent.Increment.name"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.MeteringEvent.Record.name","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-record/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.MeteringEvent.Record.name"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.MeteringEvent.Set.name","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-set/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.MeteringEvent.Set.name"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.name","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.name"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Remote.name","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-remote/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.TracingEvent.Span.Remote.name"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.name","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-logging-appender/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.name"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleMeteringAppender.name","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-metering-appender/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleMeteringAppender.name"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender.name","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-tracing-appender/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender.name"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleJsonConsoleLoggingAppender.name","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-json-console-logging-appender/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleJsonConsoleLoggingAppender.name"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.name","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-counter/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.name"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.name","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-recorder/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.name"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.name","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.name"]},{"name":"open override val parent: TracingEvent.Span? = null","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Local.parent","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-local/parent.html","searchKeys":["parent","open override val parent: TracingEvent.Span? = null","io.github.smyrgeorge.log4k.TracingEvent.Span.Local.parent"]},{"name":"open override val tags: Tags","description":"io.github.smyrgeorge.log4k.MeteringEvent.Decrement.tags","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-decrement/tags.html","searchKeys":["tags","open override val tags: Tags","io.github.smyrgeorge.log4k.MeteringEvent.Decrement.tags"]},{"name":"open override val tags: Tags","description":"io.github.smyrgeorge.log4k.MeteringEvent.Increment.tags","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-increment/tags.html","searchKeys":["tags","open override val tags: Tags","io.github.smyrgeorge.log4k.MeteringEvent.Increment.tags"]},{"name":"open override val tags: Tags","description":"io.github.smyrgeorge.log4k.MeteringEvent.Record.tags","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-record/tags.html","searchKeys":["tags","open override val tags: Tags","io.github.smyrgeorge.log4k.MeteringEvent.Record.tags"]},{"name":"open override val tags: Tags","description":"io.github.smyrgeorge.log4k.MeteringEvent.Set.tags","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-set/tags.html","searchKeys":["tags","open override val tags: Tags","io.github.smyrgeorge.log4k.MeteringEvent.Set.tags"]},{"name":"open override val tags: Tags?","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.tags","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-counter/tags.html","searchKeys":["tags","open override val tags: Tags?","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.tags"]},{"name":"open override val tags: Tags?","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.tags","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-recorder/tags.html","searchKeys":["tags","open override val tags: Tags?","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.tags"]},{"name":"open override val timestamp: Instant","description":"io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.timestamp","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-create-instrument/timestamp.html","searchKeys":["timestamp","open override val timestamp: Instant","io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.timestamp"]},{"name":"open override val timestamp: Instant","description":"io.github.smyrgeorge.log4k.MeteringEvent.Decrement.timestamp","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-decrement/timestamp.html","searchKeys":["timestamp","open override val timestamp: Instant","io.github.smyrgeorge.log4k.MeteringEvent.Decrement.timestamp"]},{"name":"open override val timestamp: Instant","description":"io.github.smyrgeorge.log4k.MeteringEvent.Increment.timestamp","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-increment/timestamp.html","searchKeys":["timestamp","open override val timestamp: Instant","io.github.smyrgeorge.log4k.MeteringEvent.Increment.timestamp"]},{"name":"open override val timestamp: Instant","description":"io.github.smyrgeorge.log4k.MeteringEvent.Record.timestamp","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-record/timestamp.html","searchKeys":["timestamp","open override val timestamp: Instant","io.github.smyrgeorge.log4k.MeteringEvent.Record.timestamp"]},{"name":"open override val timestamp: Instant","description":"io.github.smyrgeorge.log4k.MeteringEvent.Set.timestamp","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-set/timestamp.html","searchKeys":["timestamp","open override val timestamp: Instant","io.github.smyrgeorge.log4k.MeteringEvent.Set.timestamp"]},{"name":"open override val unit: String?","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.unit","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-counter/unit.html","searchKeys":["unit","open override val unit: String?","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.unit"]},{"name":"open override val unit: String?","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.unit","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-recorder/unit.html","searchKeys":["unit","open override val unit: String?","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.unit"]},{"name":"open override val value: Number","description":"io.github.smyrgeorge.log4k.MeteringEvent.Decrement.value","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-decrement/value.html","searchKeys":["value","open override val value: Number","io.github.smyrgeorge.log4k.MeteringEvent.Decrement.value"]},{"name":"open override val value: Number","description":"io.github.smyrgeorge.log4k.MeteringEvent.Increment.value","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-increment/value.html","searchKeys":["value","open override val value: Number","io.github.smyrgeorge.log4k.MeteringEvent.Increment.value"]},{"name":"open override val value: Number","description":"io.github.smyrgeorge.log4k.MeteringEvent.Record.value","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-record/value.html","searchKeys":["value","open override val value: Number","io.github.smyrgeorge.log4k.MeteringEvent.Record.value"]},{"name":"open override val value: Number","description":"io.github.smyrgeorge.log4k.MeteringEvent.Set.value","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-set/value.html","searchKeys":["value","open override val value: Number","io.github.smyrgeorge.log4k.MeteringEvent.Set.value"]},{"name":"open override var id: Long","description":"io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.id","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-create-instrument/id.html","searchKeys":["id","open override var id: Long","io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.id"]},{"name":"open override var id: Long","description":"io.github.smyrgeorge.log4k.MeteringEvent.Decrement.id","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-decrement/id.html","searchKeys":["id","open override var id: Long","io.github.smyrgeorge.log4k.MeteringEvent.Decrement.id"]},{"name":"open override var id: Long","description":"io.github.smyrgeorge.log4k.MeteringEvent.Increment.id","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-increment/id.html","searchKeys":["id","open override var id: Long","io.github.smyrgeorge.log4k.MeteringEvent.Increment.id"]},{"name":"open override var id: Long","description":"io.github.smyrgeorge.log4k.MeteringEvent.Record.id","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-record/id.html","searchKeys":["id","open override var id: Long","io.github.smyrgeorge.log4k.MeteringEvent.Record.id"]},{"name":"open override var id: Long","description":"io.github.smyrgeorge.log4k.MeteringEvent.Set.id","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-set/id.html","searchKeys":["id","open override var id: Long","io.github.smyrgeorge.log4k.MeteringEvent.Set.id"]},{"name":"open override var levelBeforeMute: Level","description":"io.github.smyrgeorge.log4k.Logger.levelBeforeMute","location":"log4k/io.github.smyrgeorge.log4k/-logger/level-before-mute.html","searchKeys":["levelBeforeMute","open override var levelBeforeMute: Level","io.github.smyrgeorge.log4k.Logger.levelBeforeMute"]},{"name":"open override var levelBeforeMute: Level","description":"io.github.smyrgeorge.log4k.Meter.levelBeforeMute","location":"log4k/io.github.smyrgeorge.log4k/-meter/level-before-mute.html","searchKeys":["levelBeforeMute","open override var levelBeforeMute: Level","io.github.smyrgeorge.log4k.Meter.levelBeforeMute"]},{"name":"open override var levelBeforeMute: Level","description":"io.github.smyrgeorge.log4k.Tracer.levelBeforeMute","location":"log4k/io.github.smyrgeorge.log4k/-tracer/level-before-mute.html","searchKeys":["levelBeforeMute","open override var levelBeforeMute: Level","io.github.smyrgeorge.log4k.Tracer.levelBeforeMute"]},{"name":"open override var updatedAt: Instant?","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.updatedAt","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-counter/updated-at.html","searchKeys":["updatedAt","open override var updatedAt: Instant?","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.updatedAt"]},{"name":"open override var updatedAt: Instant?","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.updatedAt","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-recorder/updated-at.html","searchKeys":["updatedAt","open override var updatedAt: Instant?","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.updatedAt"]},{"name":"open override var value: Number","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.value","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-counter/value.html","searchKeys":["value","open override var value: Number","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractCounter.value"]},{"name":"open override var value: Number","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.value","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-abstract-recorder/value.html","searchKeys":["value","open override var value: Number","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.AbstractRecorder.value"]},{"name":"open suspend override fun append(event: LoggingEvent)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.append","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-logging-appender/append.html","searchKeys":["append","open suspend override fun append(event: LoggingEvent)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.append"]},{"name":"open suspend override fun append(event: LoggingEvent)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleJsonConsoleLoggingAppender.append","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-json-console-logging-appender/append.html","searchKeys":["append","open suspend override fun append(event: LoggingEvent)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleJsonConsoleLoggingAppender.append"]},{"name":"open suspend override fun append(event: MeteringEvent)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleMeteringAppender.append","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-metering-appender/append.html","searchKeys":["append","open suspend override fun append(event: MeteringEvent)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleMeteringAppender.append"]},{"name":"open suspend override fun append(event: MeteringEvent)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.append","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/append.html","searchKeys":["append","open suspend override fun append(event: MeteringEvent)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.append"]},{"name":"open suspend override fun append(event: TracingEvent)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender.append","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-tracing-appender/append.html","searchKeys":["append","open suspend override fun append(event: TracingEvent)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender.append"]},{"name":"open val level: Level","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.level","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/level.html","searchKeys":["level","open val level: Level","io.github.smyrgeorge.log4k.TracingEvent.Span.level"]},{"name":"open val name: String","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.name","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/name.html","searchKeys":["name","open val name: String","io.github.smyrgeorge.log4k.TracingEvent.Span.name"]},{"name":"open val parent: TracingEvent.Span?","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.parent","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/parent.html","searchKeys":["parent","open val parent: TracingEvent.Span?","io.github.smyrgeorge.log4k.TracingEvent.Span.parent"]},{"name":"override val name: String","description":"io.github.smyrgeorge.log4k.Logger.name","location":"log4k/io.github.smyrgeorge.log4k/-logger/name.html","searchKeys":["name","override val name: String","io.github.smyrgeorge.log4k.Logger.name"]},{"name":"override val name: String","description":"io.github.smyrgeorge.log4k.Meter.name","location":"log4k/io.github.smyrgeorge.log4k/-meter/name.html","searchKeys":["name","override val name: String","io.github.smyrgeorge.log4k.Meter.name"]},{"name":"override val name: String","description":"io.github.smyrgeorge.log4k.Tracer.name","location":"log4k/io.github.smyrgeorge.log4k/-tracer/name.html","searchKeys":["name","override val name: String","io.github.smyrgeorge.log4k.Tracer.name"]},{"name":"override val name: String","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.name","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-appender/name.html","searchKeys":["name","override val name: String","io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.name"]},{"name":"override var level: Level","description":"io.github.smyrgeorge.log4k.Logger.level","location":"log4k/io.github.smyrgeorge.log4k/-logger/level.html","searchKeys":["level","override var level: Level","io.github.smyrgeorge.log4k.Logger.level"]},{"name":"override var level: Level","description":"io.github.smyrgeorge.log4k.Meter.level","location":"log4k/io.github.smyrgeorge.log4k/-meter/level.html","searchKeys":["level","override var level: Level","io.github.smyrgeorge.log4k.Meter.level"]},{"name":"override var level: Level","description":"io.github.smyrgeorge.log4k.Tracer.level","location":"log4k/io.github.smyrgeorge.log4k/-tracer/level.html","searchKeys":["level","override var level: Level","io.github.smyrgeorge.log4k.Tracer.level"]},{"name":"sealed class AbstractCounter<T : Number> : Meter.Instrument","description":"io.github.smyrgeorge.log4k.Meter.Instrument.AbstractCounter","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-abstract-counter/index.html","searchKeys":["AbstractCounter","sealed class AbstractCounter<T : Number> : Meter.Instrument","io.github.smyrgeorge.log4k.Meter.Instrument.AbstractCounter"]},{"name":"sealed class AbstractRecorder<T : Number> : Meter.Instrument","description":"io.github.smyrgeorge.log4k.Meter.Instrument.AbstractRecorder","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-abstract-recorder/index.html","searchKeys":["AbstractRecorder","sealed class AbstractRecorder<T : Number> : Meter.Instrument","io.github.smyrgeorge.log4k.Meter.Instrument.AbstractRecorder"]},{"name":"sealed class Instrument","description":"io.github.smyrgeorge.log4k.Meter.Instrument","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/index.html","searchKeys":["Instrument","sealed class Instrument","io.github.smyrgeorge.log4k.Meter.Instrument"]},{"name":"sealed interface Instrument","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/index.html","searchKeys":["Instrument","sealed interface Instrument","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument"]},{"name":"sealed interface MeteringEvent","description":"io.github.smyrgeorge.log4k.MeteringEvent","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/index.html","searchKeys":["MeteringEvent","sealed interface MeteringEvent","io.github.smyrgeorge.log4k.MeteringEvent"]},{"name":"sealed interface TracingEvent","description":"io.github.smyrgeorge.log4k.TracingEvent","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/index.html","searchKeys":["TracingEvent","sealed interface TracingEvent","io.github.smyrgeorge.log4k.TracingEvent"]},{"name":"sealed interface ValueEvent : MeteringEvent","description":"io.github.smyrgeorge.log4k.MeteringEvent.ValueEvent","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-value-event/index.html","searchKeys":["ValueEvent","sealed interface ValueEvent : MeteringEvent","io.github.smyrgeorge.log4k.MeteringEvent.ValueEvent"]},{"name":"suspend override fun append(event: E)","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.append","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-appender/append.html","searchKeys":["append","suspend override fun append(event: E)","io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.append"]},{"name":"typealias MutableTags = MutableMap<String, Any>","description":"io.github.smyrgeorge.log4k.impl.MutableTags","location":"log4k/io.github.smyrgeorge.log4k.impl/-mutable-tags/index.html","searchKeys":["MutableTags","typealias MutableTags = MutableMap<String, Any>","io.github.smyrgeorge.log4k.impl.MutableTags"]},{"name":"typealias Tag = Pair<String, Any>","description":"io.github.smyrgeorge.log4k.impl.Tag","location":"log4k/io.github.smyrgeorge.log4k.impl/-tag/index.html","searchKeys":["Tag","typealias Tag = Pair<String, Any>","io.github.smyrgeorge.log4k.impl.Tag"]},{"name":"typealias Tags = Map<String, Any>","description":"io.github.smyrgeorge.log4k.impl.Tags","location":"log4k/io.github.smyrgeorge.log4k.impl/-tags/index.html","searchKeys":["Tags","typealias Tags = Map<String, Any>","io.github.smyrgeorge.log4k.impl.Tags"]},{"name":"val appenders: AppenderRegistry<LoggingEvent>","description":"io.github.smyrgeorge.log4k.RootLogger.Logging.appenders","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-logging/appenders.html","searchKeys":["appenders","val appenders: AppenderRegistry<LoggingEvent>","io.github.smyrgeorge.log4k.RootLogger.Logging.appenders"]},{"name":"val appenders: AppenderRegistry<MeteringEvent>","description":"io.github.smyrgeorge.log4k.RootLogger.Metering.appenders","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-metering/appenders.html","searchKeys":["appenders","val appenders: AppenderRegistry<MeteringEvent>","io.github.smyrgeorge.log4k.RootLogger.Metering.appenders"]},{"name":"val appenders: AppenderRegistry<TracingEvent>","description":"io.github.smyrgeorge.log4k.RootLogger.Tracing.appenders","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-tracing/appenders.html","searchKeys":["appenders","val appenders: AppenderRegistry<TracingEvent>","io.github.smyrgeorge.log4k.RootLogger.Tracing.appenders"]},{"name":"val arguments: Array<out Any?>","description":"io.github.smyrgeorge.log4k.LoggingEvent.arguments","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/arguments.html","searchKeys":["arguments","val arguments: Array<out Any?>","io.github.smyrgeorge.log4k.LoggingEvent.arguments"]},{"name":"val code: TracingEvent.Span.Status.Code","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.code","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/code.html","searchKeys":["code","val code: TracingEvent.Span.Status.Code","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.code"]},{"name":"val context: TracingEvent.Span.Context","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.context","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/context.html","searchKeys":["context","val context: TracingEvent.Span.Context","io.github.smyrgeorge.log4k.TracingEvent.Span.context"]},{"name":"val description: String?","description":"io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.description","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-create-instrument/description.html","searchKeys":["description","val description: String?","io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.description"]},{"name":"val description: String?","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Info.description","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-info/description.html","searchKeys":["description","val description: String?","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Info.description"]},{"name":"val description: String? = null","description":"io.github.smyrgeorge.log4k.Meter.Instrument.description","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/description.html","searchKeys":["description","val description: String? = null","io.github.smyrgeorge.log4k.Meter.Instrument.description"]},{"name":"val description: String? = null","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.description","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/description.html","searchKeys":["description","val description: String? = null","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.description"]},{"name":"val entries: EnumEntries<Level>","description":"io.github.smyrgeorge.log4k.Level.entries","location":"log4k/io.github.smyrgeorge.log4k/-level/entries.html","searchKeys":["entries","val entries: EnumEntries<Level>","io.github.smyrgeorge.log4k.Level.entries"]},{"name":"val entries: EnumEntries<Meter.Instrument.Kind>","description":"io.github.smyrgeorge.log4k.Meter.Instrument.Kind.entries","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/-kind/entries.html","searchKeys":["entries","val entries: EnumEntries<Meter.Instrument.Kind>","io.github.smyrgeorge.log4k.Meter.Instrument.Kind.entries"]},{"name":"val entries: EnumEntries<TracingEvent.Span.Status.Code>","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.entries","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-code/entries.html","searchKeys":["entries","val entries: EnumEntries<TracingEvent.Span.Status.Code>","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.entries"]},{"name":"val error: Throwable? = null","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.error","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/error.html","searchKeys":["error","val error: Throwable? = null","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.error"]},{"name":"val events: MutableList<TracingEvent.Span.Event>","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.events","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/events.html","searchKeys":["events","val events: MutableList<TracingEvent.Span.Event>","io.github.smyrgeorge.log4k.TracingEvent.Span.events"]},{"name":"val isRemote: Boolean","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context.isRemote","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/is-remote.html","searchKeys":["isRemote","val isRemote: Boolean","io.github.smyrgeorge.log4k.TracingEvent.Span.Context.isRemote"]},{"name":"val kind: Meter.Instrument.Kind","description":"io.github.smyrgeorge.log4k.Meter.Instrument.kind","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/kind.html","searchKeys":["kind","val kind: Meter.Instrument.Kind","io.github.smyrgeorge.log4k.Meter.Instrument.kind"]},{"name":"val kind: Meter.Instrument.Kind","description":"io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.kind","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-create-instrument/kind.html","searchKeys":["kind","val kind: Meter.Instrument.Kind","io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.kind"]},{"name":"val kind: Meter.Instrument.Kind","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Info.kind","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-info/kind.html","searchKeys":["kind","val kind: Meter.Instrument.Kind","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Info.kind"]},{"name":"val level: Level","description":"io.github.smyrgeorge.log4k.LoggingEvent.level","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/level.html","searchKeys":["level","val level: Level","io.github.smyrgeorge.log4k.LoggingEvent.level"]},{"name":"val logger: String","description":"io.github.smyrgeorge.log4k.LoggingEvent.logger","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/logger.html","searchKeys":["logger","val logger: String","io.github.smyrgeorge.log4k.LoggingEvent.logger"]},{"name":"val message: String","description":"io.github.smyrgeorge.log4k.LoggingEvent.message","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/message.html","searchKeys":["message","val message: String","io.github.smyrgeorge.log4k.LoggingEvent.message"]},{"name":"val meter: Meter","description":"io.github.smyrgeorge.log4k.Meter.Instrument.meter","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/meter.html","searchKeys":["meter","val meter: Meter","io.github.smyrgeorge.log4k.Meter.Instrument.meter"]},{"name":"val name: String","description":"io.github.smyrgeorge.log4k.Meter.Instrument.name","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/name.html","searchKeys":["name","val name: String","io.github.smyrgeorge.log4k.Meter.Instrument.name"]},{"name":"val name: String","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Event.name","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-event/name.html","searchKeys":["name","val name: String","io.github.smyrgeorge.log4k.TracingEvent.Span.Event.name"]},{"name":"val name: String","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Info.name","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-info/name.html","searchKeys":["name","val name: String","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Info.name"]},{"name":"val registry: CollectorRegistry<Logger>","description":"io.github.smyrgeorge.log4k.Logger.Companion.registry","location":"log4k/io.github.smyrgeorge.log4k/-logger/-companion/registry.html","searchKeys":["registry","val registry: CollectorRegistry<Logger>","io.github.smyrgeorge.log4k.Logger.Companion.registry"]},{"name":"val registry: CollectorRegistry<Meter>","description":"io.github.smyrgeorge.log4k.Meter.Companion.registry","location":"log4k/io.github.smyrgeorge.log4k/-meter/-companion/registry.html","searchKeys":["registry","val registry: CollectorRegistry<Meter>","io.github.smyrgeorge.log4k.Meter.Companion.registry"]},{"name":"val registry: CollectorRegistry<Tracer>","description":"io.github.smyrgeorge.log4k.Tracer.Companion.registry","location":"log4k/io.github.smyrgeorge.log4k/-tracer/-companion/registry.html","searchKeys":["registry","val registry: CollectorRegistry<Tracer>","io.github.smyrgeorge.log4k.Tracer.Companion.registry"]},{"name":"val span: TracingEvent.Span?","description":"io.github.smyrgeorge.log4k.LoggingEvent.span","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/span.html","searchKeys":["span","val span: TracingEvent.Span?","io.github.smyrgeorge.log4k.LoggingEvent.span"]},{"name":"val spanId: String","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context.spanId","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/span-id.html","searchKeys":["spanId","val spanId: String","io.github.smyrgeorge.log4k.TracingEvent.Span.Context.spanId"]},{"name":"val tags: MutableTags","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.tags","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/tags.html","searchKeys":["tags","val tags: MutableTags","io.github.smyrgeorge.log4k.TracingEvent.Span.tags"]},{"name":"val tags: Tags","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Event.tags","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-event/tags.html","searchKeys":["tags","val tags: Tags","io.github.smyrgeorge.log4k.TracingEvent.Span.Event.tags"]},{"name":"val thread: String","description":"io.github.smyrgeorge.log4k.LoggingEvent.thread","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/thread.html","searchKeys":["thread","val thread: String","io.github.smyrgeorge.log4k.LoggingEvent.thread"]},{"name":"val throwable: Throwable?","description":"io.github.smyrgeorge.log4k.LoggingEvent.throwable","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/throwable.html","searchKeys":["throwable","val throwable: Throwable?","io.github.smyrgeorge.log4k.LoggingEvent.throwable"]},{"name":"val timestamp: Instant","description":"io.github.smyrgeorge.log4k.LoggingEvent.timestamp","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/timestamp.html","searchKeys":["timestamp","val timestamp: Instant","io.github.smyrgeorge.log4k.LoggingEvent.timestamp"]},{"name":"val timestamp: Instant","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Event.timestamp","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-event/timestamp.html","searchKeys":["timestamp","val timestamp: Instant","io.github.smyrgeorge.log4k.TracingEvent.Span.Event.timestamp"]},{"name":"val traceId: String","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context.traceId","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/trace-id.html","searchKeys":["traceId","val traceId: String","io.github.smyrgeorge.log4k.TracingEvent.Span.Context.traceId"]},{"name":"val tracer: Tracer","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context.tracer","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/tracer.html","searchKeys":["tracer","val tracer: Tracer","io.github.smyrgeorge.log4k.TracingEvent.Span.Context.tracer"]},{"name":"val unit: String?","description":"io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.unit","location":"log4k/io.github.smyrgeorge.log4k/-metering-event/-create-instrument/unit.html","searchKeys":["unit","val unit: String?","io.github.smyrgeorge.log4k.MeteringEvent.CreateInstrument.unit"]},{"name":"val unit: String?","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Info.unit","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-metering-collector-appender/-instrument/-info/unit.html","searchKeys":["unit","val unit: String?","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleMeteringCollectorAppender.Instrument.Info.unit"]},{"name":"val unit: String? = null","description":"io.github.smyrgeorge.log4k.Meter.Instrument.unit","location":"log4k/io.github.smyrgeorge.log4k/-meter/-instrument/unit.html","searchKeys":["unit","val unit: String? = null","io.github.smyrgeorge.log4k.Meter.Instrument.unit"]},{"name":"var endAt: Instant?","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.endAt","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/end-at.html","searchKeys":["endAt","var endAt: Instant?","io.github.smyrgeorge.log4k.TracingEvent.Span.endAt"]},{"name":"var factory: LoggerFactory","description":"io.github.smyrgeorge.log4k.Logger.Companion.factory","location":"log4k/io.github.smyrgeorge.log4k/-logger/-companion/factory.html","searchKeys":["factory","var factory: LoggerFactory","io.github.smyrgeorge.log4k.Logger.Companion.factory"]},{"name":"var factory: MeterFactory","description":"io.github.smyrgeorge.log4k.Meter.Companion.factory","location":"log4k/io.github.smyrgeorge.log4k/-meter/-companion/factory.html","searchKeys":["factory","var factory: MeterFactory","io.github.smyrgeorge.log4k.Meter.Companion.factory"]},{"name":"var factory: TracerFactory","description":"io.github.smyrgeorge.log4k.Tracer.Companion.factory","location":"log4k/io.github.smyrgeorge.log4k/-tracer/-companion/factory.html","searchKeys":["factory","var factory: TracerFactory","io.github.smyrgeorge.log4k.Tracer.Companion.factory"]},{"name":"var id: Long","description":"io.github.smyrgeorge.log4k.LoggingEvent.id","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/id.html","searchKeys":["id","var id: Long","io.github.smyrgeorge.log4k.LoggingEvent.id"]},{"name":"var level: Level","description":"io.github.smyrgeorge.log4k.RootLogger.Logging.level","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-logging/level.html","searchKeys":["level","var level: Level","io.github.smyrgeorge.log4k.RootLogger.Logging.level"]},{"name":"var level: Level","description":"io.github.smyrgeorge.log4k.RootLogger.Metering.level","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-metering/level.html","searchKeys":["level","var level: Level","io.github.smyrgeorge.log4k.RootLogger.Metering.level"]},{"name":"var level: Level","description":"io.github.smyrgeorge.log4k.RootLogger.Tracing.level","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-tracing/level.html","searchKeys":["level","var level: Level","io.github.smyrgeorge.log4k.RootLogger.Tracing.level"]},{"name":"var prefix: String","description":"io.github.smyrgeorge.log4k.RootLogger.Tracing.prefix","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-tracing/prefix.html","searchKeys":["prefix","var prefix: String","io.github.smyrgeorge.log4k.RootLogger.Tracing.prefix"]},{"name":"var startAt: Instant?","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.startAt","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/start-at.html","searchKeys":["startAt","var startAt: Instant?","io.github.smyrgeorge.log4k.TracingEvent.Span.startAt"]},{"name":"var status: TracingEvent.Span.Status","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.status","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/status.html","searchKeys":["status","var status: TracingEvent.Span.Status","io.github.smyrgeorge.log4k.TracingEvent.Span.status"]}]