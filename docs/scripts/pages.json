[{"name":"DEBUG","description":"io.github.smyrgeorge.log4k.Level.DEBUG","location":"log4k/io.github.smyrgeorge.log4k/-level/-d-e-b-u-g/index.html","searchKeys":["DEBUG","DEBUG","io.github.smyrgeorge.log4k.Level.DEBUG"]},{"name":"ERROR","description":"io.github.smyrgeorge.log4k.Level.ERROR","location":"log4k/io.github.smyrgeorge.log4k/-level/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","io.github.smyrgeorge.log4k.Level.ERROR"]},{"name":"ERROR","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.ERROR","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-code/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.ERROR"]},{"name":"INFO","description":"io.github.smyrgeorge.log4k.Level.INFO","location":"log4k/io.github.smyrgeorge.log4k/-level/-i-n-f-o/index.html","searchKeys":["INFO","INFO","io.github.smyrgeorge.log4k.Level.INFO"]},{"name":"OFF","description":"io.github.smyrgeorge.log4k.Level.OFF","location":"log4k/io.github.smyrgeorge.log4k/-level/-o-f-f/index.html","searchKeys":["OFF","OFF","io.github.smyrgeorge.log4k.Level.OFF"]},{"name":"OK","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.OK","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-code/-o-k/index.html","searchKeys":["OK","OK","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.OK"]},{"name":"TRACE","description":"io.github.smyrgeorge.log4k.Level.TRACE","location":"log4k/io.github.smyrgeorge.log4k/-level/-t-r-a-c-e/index.html","searchKeys":["TRACE","TRACE","io.github.smyrgeorge.log4k.Level.TRACE"]},{"name":"UNSET","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.UNSET","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-code/-u-n-s-e-t/index.html","searchKeys":["UNSET","UNSET","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.UNSET"]},{"name":"WARN","description":"io.github.smyrgeorge.log4k.Level.WARN","location":"log4k/io.github.smyrgeorge.log4k/-level/-w-a-r-n/index.html","searchKeys":["WARN","WARN","io.github.smyrgeorge.log4k.Level.WARN"]},{"name":"abstract class BatchAppender<T>(size: Int) : FlowAppender<List<T>, T> ","description":"io.github.smyrgeorge.log4k.impl.appenders.BatchAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-batch-appender/index.html","searchKeys":["BatchAppender","abstract class BatchAppender<T>(size: Int) : FlowAppender<List<T>, T> ","io.github.smyrgeorge.log4k.impl.appenders.BatchAppender"]},{"name":"abstract class FlowAppender<T, E> : Appender<E> ","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-appender/index.html","searchKeys":["FlowAppender","abstract class FlowAppender<T, E> : Appender<E> ","io.github.smyrgeorge.log4k.impl.appenders.FlowAppender"]},{"name":"abstract class FlowBufferedAppender<T>(capacity: Int, onBufferOverflow: BufferOverflow = BufferOverflow.DROP_OLDEST) : FlowAppender<T, T> ","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowBufferedAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-buffered-appender/index.html","searchKeys":["FlowBufferedAppender","abstract class FlowBufferedAppender<T>(capacity: Int, onBufferOverflow: BufferOverflow = BufferOverflow.DROP_OLDEST) : FlowAppender<T, T> ","io.github.smyrgeorge.log4k.impl.appenders.FlowBufferedAppender"]},{"name":"abstract class FlowFloodProtectedAppender<T>(requestPerSecond: Int, burstDurationMillis: Int) : FlowAppender<T, T> ","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowFloodProtectedAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-flood-protected-appender/index.html","searchKeys":["FlowFloodProtectedAppender","abstract class FlowFloodProtectedAppender<T>(requestPerSecond: Int, burstDurationMillis: Int) : FlowAppender<T, T> ","io.github.smyrgeorge.log4k.impl.appenders.FlowFloodProtectedAppender"]},{"name":"abstract class Logger(val name: String, var level: Level) : LoggerRegistry.Collector","description":"io.github.smyrgeorge.log4k.Logger","location":"log4k/io.github.smyrgeorge.log4k/-logger/index.html","searchKeys":["Logger","abstract class Logger(val name: String, var level: Level) : LoggerRegistry.Collector","io.github.smyrgeorge.log4k.Logger"]},{"name":"abstract class Tracer(val name: String, var level: Level) : LoggerRegistry.Collector","description":"io.github.smyrgeorge.log4k.Tracer","location":"log4k/io.github.smyrgeorge.log4k/-tracer/index.html","searchKeys":["Tracer","abstract class Tracer(val name: String, var level: Level) : LoggerRegistry.Collector","io.github.smyrgeorge.log4k.Tracer"]},{"name":"abstract fun create(name: String): Logger","description":"io.github.smyrgeorge.log4k.LoggerFactory.create","location":"log4k/io.github.smyrgeorge.log4k/-logger-factory/create.html","searchKeys":["create","abstract fun create(name: String): Logger","io.github.smyrgeorge.log4k.LoggerFactory.create"]},{"name":"abstract fun create(name: String): Tracer","description":"io.github.smyrgeorge.log4k.TracerFactory.create","location":"log4k/io.github.smyrgeorge.log4k/-tracer-factory/create.html","searchKeys":["create","abstract fun create(name: String): Tracer","io.github.smyrgeorge.log4k.TracerFactory.create"]},{"name":"abstract fun mute()","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.Collector.mute","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/-collector/mute.html","searchKeys":["mute","abstract fun mute()","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.Collector.mute"]},{"name":"abstract fun setup(flow: Flow<E>): Flow<T>","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.setup","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-appender/setup.html","searchKeys":["setup","abstract fun setup(flow: Flow<E>): Flow<T>","io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.setup"]},{"name":"abstract fun toLoggingEvent(level: Level, span: TracingEvent.Span?, msg: String, throwable: Throwable?, args: Array<out Any?>): LoggingEvent","description":"io.github.smyrgeorge.log4k.Logger.toLoggingEvent","location":"log4k/io.github.smyrgeorge.log4k/-logger/to-logging-event.html","searchKeys":["toLoggingEvent","abstract fun toLoggingEvent(level: Level, span: TracingEvent.Span?, msg: String, throwable: Throwable?, args: Array<out Any?>): LoggingEvent","io.github.smyrgeorge.log4k.Logger.toLoggingEvent"]},{"name":"abstract fun unmute()","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.Collector.unmute","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/-collector/unmute.html","searchKeys":["unmute","abstract fun unmute()","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.Collector.unmute"]},{"name":"abstract suspend fun append(event: T)","description":"io.github.smyrgeorge.log4k.Appender.append","location":"log4k/io.github.smyrgeorge.log4k/-appender/append.html","searchKeys":["append","abstract suspend fun append(event: T)","io.github.smyrgeorge.log4k.Appender.append"]},{"name":"abstract suspend fun handle(event: T)","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.handle","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-appender/handle.html","searchKeys":["handle","abstract suspend fun handle(event: T)","io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.handle"]},{"name":"abstract val arguments: Array<out Any?>","description":"io.github.smyrgeorge.log4k.LoggingEvent.arguments","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/arguments.html","searchKeys":["arguments","abstract val arguments: Array<out Any?>","io.github.smyrgeorge.log4k.LoggingEvent.arguments"]},{"name":"abstract val level: Level","description":"io.github.smyrgeorge.log4k.LoggingEvent.level","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/level.html","searchKeys":["level","abstract val level: Level","io.github.smyrgeorge.log4k.LoggingEvent.level"]},{"name":"abstract val logger: String","description":"io.github.smyrgeorge.log4k.LoggingEvent.logger","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/logger.html","searchKeys":["logger","abstract val logger: String","io.github.smyrgeorge.log4k.LoggingEvent.logger"]},{"name":"abstract val message: String","description":"io.github.smyrgeorge.log4k.LoggingEvent.message","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/message.html","searchKeys":["message","abstract val message: String","io.github.smyrgeorge.log4k.LoggingEvent.message"]},{"name":"abstract val name: String","description":"io.github.smyrgeorge.log4k.Appender.name","location":"log4k/io.github.smyrgeorge.log4k/-appender/name.html","searchKeys":["name","abstract val name: String","io.github.smyrgeorge.log4k.Appender.name"]},{"name":"abstract val name: String","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.Collector.name","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/-collector/name.html","searchKeys":["name","abstract val name: String","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.Collector.name"]},{"name":"abstract val span: TracingEvent.Span?","description":"io.github.smyrgeorge.log4k.LoggingEvent.span","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/span.html","searchKeys":["span","abstract val span: TracingEvent.Span?","io.github.smyrgeorge.log4k.LoggingEvent.span"]},{"name":"abstract val thread: String","description":"io.github.smyrgeorge.log4k.LoggingEvent.thread","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/thread.html","searchKeys":["thread","abstract val thread: String","io.github.smyrgeorge.log4k.LoggingEvent.thread"]},{"name":"abstract val throwable: Throwable?","description":"io.github.smyrgeorge.log4k.LoggingEvent.throwable","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/throwable.html","searchKeys":["throwable","abstract val throwable: Throwable?","io.github.smyrgeorge.log4k.LoggingEvent.throwable"]},{"name":"abstract val timestamp: Instant","description":"io.github.smyrgeorge.log4k.LoggingEvent.timestamp","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/timestamp.html","searchKeys":["timestamp","abstract val timestamp: Instant","io.github.smyrgeorge.log4k.LoggingEvent.timestamp"]},{"name":"abstract var id: Long","description":"io.github.smyrgeorge.log4k.LoggingEvent.id","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/id.html","searchKeys":["id","abstract var id: Long","io.github.smyrgeorge.log4k.LoggingEvent.id"]},{"name":"abstract var level: Level","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.Collector.level","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/-collector/level.html","searchKeys":["level","abstract var level: Level","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.Collector.level"]},{"name":"class AppenderRegistry<T>","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/index.html","searchKeys":["AppenderRegistry","class AppenderRegistry<T>","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry"]},{"name":"class LoggerRegistry<T : LoggerRegistry.Collector>","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/index.html","searchKeys":["LoggerRegistry","class LoggerRegistry<T : LoggerRegistry.Collector>","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry"]},{"name":"class SimpleConsoleLoggingAppender : Appender<LoggingEvent> ","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-logging-appender/index.html","searchKeys":["SimpleConsoleLoggingAppender","class SimpleConsoleLoggingAppender : Appender<LoggingEvent> ","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender"]},{"name":"class SimpleConsoleTracingAppender : Appender<TracingEvent> ","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-tracing-appender/index.html","searchKeys":["SimpleConsoleTracingAppender","class SimpleConsoleTracingAppender : Appender<TracingEvent> ","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender"]},{"name":"class SimpleLogger(val name: String, var level: Level) : Logger","description":"io.github.smyrgeorge.log4k.impl.SimpleLogger","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logger/index.html","searchKeys":["SimpleLogger","class SimpleLogger(val name: String, var level: Level) : Logger","io.github.smyrgeorge.log4k.impl.SimpleLogger"]},{"name":"class SimpleLoggerFactory : LoggerFactory","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggerFactory","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logger-factory/index.html","searchKeys":["SimpleLoggerFactory","class SimpleLoggerFactory : LoggerFactory","io.github.smyrgeorge.log4k.impl.SimpleLoggerFactory"]},{"name":"class SimpleLoggingEvent(var id: Long = 0, val level: Level, val span: TracingEvent.Span?, val timestamp: Instant, val logger: String, val message: String, val arguments: Array<out Any?>, val thread: String, val throwable: Throwable?) : LoggingEvent","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logging-event/index.html","searchKeys":["SimpleLoggingEvent","class SimpleLoggingEvent(var id: Long = 0, val level: Level, val span: TracingEvent.Span?, val timestamp: Instant, val logger: String, val message: String, val arguments: Array<out Any?>, val thread: String, val throwable: Throwable?) : LoggingEvent","io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent"]},{"name":"class SimpleTracer(val name: String, var level: Level) : Tracer","description":"io.github.smyrgeorge.log4k.impl.SimpleTracer","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-tracer/index.html","searchKeys":["SimpleTracer","class SimpleTracer(val name: String, var level: Level) : Tracer","io.github.smyrgeorge.log4k.impl.SimpleTracer"]},{"name":"class SimpleTracerFactory : TracerFactory","description":"io.github.smyrgeorge.log4k.impl.SimpleTracerFactory","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-tracer-factory/index.html","searchKeys":["SimpleTracerFactory","class SimpleTracerFactory : TracerFactory","io.github.smyrgeorge.log4k.impl.SimpleTracerFactory"]},{"name":"const val DB_CONNECTION_ID: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_CONNECTION_ID","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-c-o-n-n-e-c-t-i-o-n_-i-d.html","searchKeys":["DB_CONNECTION_ID","const val DB_CONNECTION_ID: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_CONNECTION_ID"]},{"name":"const val DB_CONNECTION_STRING: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_CONNECTION_STRING","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-c-o-n-n-e-c-t-i-o-n_-s-t-r-i-n-g.html","searchKeys":["DB_CONNECTION_STRING","const val DB_CONNECTION_STRING: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_CONNECTION_STRING"]},{"name":"const val DB_DRIVER_NAME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_DRIVER_NAME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-d-r-i-v-e-r_-n-a-m-e.html","searchKeys":["DB_DRIVER_NAME","const val DB_DRIVER_NAME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_DRIVER_NAME"]},{"name":"const val DB_DRIVER_VERSION: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_DRIVER_VERSION","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-d-r-i-v-e-r_-v-e-r-s-i-o-n.html","searchKeys":["DB_DRIVER_VERSION","const val DB_DRIVER_VERSION: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_DRIVER_VERSION"]},{"name":"const val DB_NAME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_NAME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-n-a-m-e.html","searchKeys":["DB_NAME","const val DB_NAME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_NAME"]},{"name":"const val DB_OPERATION: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_OPERATION","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-o-p-e-r-a-t-i-o-n.html","searchKeys":["DB_OPERATION","const val DB_OPERATION: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_OPERATION"]},{"name":"const val DB_SQL_ROW_COUNT: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_SQL_ROW_COUNT","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-s-q-l_-r-o-w_-c-o-u-n-t.html","searchKeys":["DB_SQL_ROW_COUNT","const val DB_SQL_ROW_COUNT: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_SQL_ROW_COUNT"]},{"name":"const val DB_SQL_TABLE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_SQL_TABLE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-s-q-l_-t-a-b-l-e.html","searchKeys":["DB_SQL_TABLE","const val DB_SQL_TABLE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_SQL_TABLE"]},{"name":"const val DB_STATEMENT: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_STATEMENT","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-s-t-a-t-e-m-e-n-t.html","searchKeys":["DB_STATEMENT","const val DB_STATEMENT: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_STATEMENT"]},{"name":"const val DB_STATEMENT_ERROR: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_STATEMENT_ERROR","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-s-t-a-t-e-m-e-n-t_-e-r-r-o-r.html","searchKeys":["DB_STATEMENT_ERROR","const val DB_STATEMENT_ERROR: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_STATEMENT_ERROR"]},{"name":"const val DB_SYSTEM: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_SYSTEM","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-s-y-s-t-e-m.html","searchKeys":["DB_SYSTEM","const val DB_SYSTEM: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_SYSTEM"]},{"name":"const val DB_USER: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_USER","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-d-b_-u-s-e-r.html","searchKeys":["DB_USER","const val DB_USER: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.DB_USER"]},{"name":"const val EXCEPTION: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n.html","searchKeys":["EXCEPTION","const val EXCEPTION: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION"]},{"name":"const val EXCEPTION_CAUGHT: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUGHT","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-c-a-u-g-h-t.html","searchKeys":["EXCEPTION_CAUGHT","const val EXCEPTION_CAUGHT: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUGHT"]},{"name":"const val EXCEPTION_CAUSE_MESSAGE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUSE_MESSAGE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-c-a-u-s-e_-m-e-s-s-a-g-e.html","searchKeys":["EXCEPTION_CAUSE_MESSAGE","const val EXCEPTION_CAUSE_MESSAGE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUSE_MESSAGE"]},{"name":"const val EXCEPTION_CAUSE_STACKTRACE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUSE_STACKTRACE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-c-a-u-s-e_-s-t-a-c-k-t-r-a-c-e.html","searchKeys":["EXCEPTION_CAUSE_STACKTRACE","const val EXCEPTION_CAUSE_STACKTRACE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUSE_STACKTRACE"]},{"name":"const val EXCEPTION_CAUSE_TYPE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUSE_TYPE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-c-a-u-s-e_-t-y-p-e.html","searchKeys":["EXCEPTION_CAUSE_TYPE","const val EXCEPTION_CAUSE_TYPE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_CAUSE_TYPE"]},{"name":"const val EXCEPTION_ESCAPED: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_ESCAPED","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-e-s-c-a-p-e-d.html","searchKeys":["EXCEPTION_ESCAPED","const val EXCEPTION_ESCAPED: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_ESCAPED"]},{"name":"const val EXCEPTION_HANDLED_AT: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_HANDLED_AT","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-h-a-n-d-l-e-d_-a-t.html","searchKeys":["EXCEPTION_HANDLED_AT","const val EXCEPTION_HANDLED_AT: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_HANDLED_AT"]},{"name":"const val EXCEPTION_MESSAGE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_MESSAGE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-m-e-s-s-a-g-e.html","searchKeys":["EXCEPTION_MESSAGE","const val EXCEPTION_MESSAGE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_MESSAGE"]},{"name":"const val EXCEPTION_STACKTRACE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_STACKTRACE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-s-t-a-c-k-t-r-a-c-e.html","searchKeys":["EXCEPTION_STACKTRACE","const val EXCEPTION_STACKTRACE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_STACKTRACE"]},{"name":"const val EXCEPTION_TIMESTAMP: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_TIMESTAMP","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-t-i-m-e-s-t-a-m-p.html","searchKeys":["EXCEPTION_TIMESTAMP","const val EXCEPTION_TIMESTAMP: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_TIMESTAMP"]},{"name":"const val EXCEPTION_TYPE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_TYPE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-e-x-c-e-p-t-i-o-n_-t-y-p-e.html","searchKeys":["EXCEPTION_TYPE","const val EXCEPTION_TYPE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.EXCEPTION_TYPE"]},{"name":"const val HTTP_CLIENT_IP: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_CLIENT_IP","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-c-l-i-e-n-t_-i-p.html","searchKeys":["HTTP_CLIENT_IP","const val HTTP_CLIENT_IP: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_CLIENT_IP"]},{"name":"const val HTTP_ERROR_MESSAGE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_ERROR_MESSAGE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-e-r-r-o-r_-m-e-s-s-a-g-e.html","searchKeys":["HTTP_ERROR_MESSAGE","const val HTTP_ERROR_MESSAGE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_ERROR_MESSAGE"]},{"name":"const val HTTP_FLAVOR: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_FLAVOR","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-f-l-a-v-o-r.html","searchKeys":["HTTP_FLAVOR","const val HTTP_FLAVOR: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_FLAVOR"]},{"name":"const val HTTP_HOST: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_HOST","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-h-o-s-t.html","searchKeys":["HTTP_HOST","const val HTTP_HOST: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_HOST"]},{"name":"const val HTTP_METHOD: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_METHOD","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-m-e-t-h-o-d.html","searchKeys":["HTTP_METHOD","const val HTTP_METHOD: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_METHOD"]},{"name":"const val HTTP_REQUEST_CONTENT_LENGTH: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_REQUEST_CONTENT_LENGTH","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-r-e-q-u-e-s-t_-c-o-n-t-e-n-t_-l-e-n-g-t-h.html","searchKeys":["HTTP_REQUEST_CONTENT_LENGTH","const val HTTP_REQUEST_CONTENT_LENGTH: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_REQUEST_CONTENT_LENGTH"]},{"name":"const val HTTP_RESPONSE_CONTENT_LENGTH: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_RESPONSE_CONTENT_LENGTH","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-r-e-s-p-o-n-s-e_-c-o-n-t-e-n-t_-l-e-n-g-t-h.html","searchKeys":["HTTP_RESPONSE_CONTENT_LENGTH","const val HTTP_RESPONSE_CONTENT_LENGTH: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_RESPONSE_CONTENT_LENGTH"]},{"name":"const val HTTP_ROUTE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_ROUTE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-r-o-u-t-e.html","searchKeys":["HTTP_ROUTE","const val HTTP_ROUTE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_ROUTE"]},{"name":"const val HTTP_SCHEME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_SCHEME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-s-c-h-e-m-e.html","searchKeys":["HTTP_SCHEME","const val HTTP_SCHEME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_SCHEME"]},{"name":"const val HTTP_SERVER_NAME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_SERVER_NAME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-s-e-r-v-e-r_-n-a-m-e.html","searchKeys":["HTTP_SERVER_NAME","const val HTTP_SERVER_NAME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_SERVER_NAME"]},{"name":"const val HTTP_STATUS_CODE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_STATUS_CODE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-s-t-a-t-u-s_-c-o-d-e.html","searchKeys":["HTTP_STATUS_CODE","const val HTTP_STATUS_CODE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_STATUS_CODE"]},{"name":"const val HTTP_TARGET: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_TARGET","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-t-a-r-g-e-t.html","searchKeys":["HTTP_TARGET","const val HTTP_TARGET: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_TARGET"]},{"name":"const val HTTP_URL: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_URL","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-u-r-l.html","searchKeys":["HTTP_URL","const val HTTP_URL: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_URL"]},{"name":"const val HTTP_USER_AGENT: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_USER_AGENT","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-h-t-t-p_-u-s-e-r_-a-g-e-n-t.html","searchKeys":["HTTP_USER_AGENT","const val HTTP_USER_AGENT: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.HTTP_USER_AGENT"]},{"name":"const val THREAD_BLOCKED_TIME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_BLOCKED_TIME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-t-h-r-e-a-d_-b-l-o-c-k-e-d_-t-i-m-e.html","searchKeys":["THREAD_BLOCKED_TIME","const val THREAD_BLOCKED_TIME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_BLOCKED_TIME"]},{"name":"const val THREAD_CPU_TIME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_CPU_TIME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-t-h-r-e-a-d_-c-p-u_-t-i-m-e.html","searchKeys":["THREAD_CPU_TIME","const val THREAD_CPU_TIME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_CPU_TIME"]},{"name":"const val THREAD_ID: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_ID","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-t-h-r-e-a-d_-i-d.html","searchKeys":["THREAD_ID","const val THREAD_ID: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_ID"]},{"name":"const val THREAD_NAME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_NAME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-t-h-r-e-a-d_-n-a-m-e.html","searchKeys":["THREAD_NAME","const val THREAD_NAME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_NAME"]},{"name":"const val THREAD_PRIORITY: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_PRIORITY","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-t-h-r-e-a-d_-p-r-i-o-r-i-t-y.html","searchKeys":["THREAD_PRIORITY","const val THREAD_PRIORITY: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_PRIORITY"]},{"name":"const val THREAD_STATE: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_STATE","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-t-h-r-e-a-d_-s-t-a-t-e.html","searchKeys":["THREAD_STATE","const val THREAD_STATE: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_STATE"]},{"name":"const val THREAD_WAITING_TIME: String","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_WAITING_TIME","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/-t-h-r-e-a-d_-w-a-i-t-i-n-g_-t-i-m-e.html","searchKeys":["THREAD_WAITING_TIME","const val THREAD_WAITING_TIME: String","io.github.smyrgeorge.log4k.impl.OpenTelemetry.THREAD_WAITING_TIME"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggerFactory.SimpleLoggerFactory","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logger-factory/-simple-logger-factory.html","searchKeys":["SimpleLoggerFactory","constructor()","io.github.smyrgeorge.log4k.impl.SimpleLoggerFactory.SimpleLoggerFactory"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.SimpleTracerFactory.SimpleTracerFactory","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-tracer-factory/-simple-tracer-factory.html","searchKeys":["SimpleTracerFactory","constructor()","io.github.smyrgeorge.log4k.impl.SimpleTracerFactory.SimpleTracerFactory"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.FlowAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-appender/-flow-appender.html","searchKeys":["FlowAppender","constructor()","io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.FlowAppender"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.SimpleConsoleLoggingAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-logging-appender/-simple-console-logging-appender.html","searchKeys":["SimpleConsoleLoggingAppender","constructor()","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.SimpleConsoleLoggingAppender"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender.SimpleConsoleTracingAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-tracing-appender/-simple-console-tracing-appender.html","searchKeys":["SimpleConsoleTracingAppender","constructor()","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender.SimpleConsoleTracingAppender"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.AppenderRegistry","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/-appender-registry.html","searchKeys":["AppenderRegistry","constructor()","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.AppenderRegistry"]},{"name":"constructor()","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.LoggerRegistry","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/-logger-registry.html","searchKeys":["LoggerRegistry","constructor()","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.LoggerRegistry"]},{"name":"constructor(capacity: Int, onBufferOverflow: BufferOverflow = BufferOverflow.DROP_OLDEST)","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowBufferedAppender.FlowBufferedAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-buffered-appender/-flow-buffered-appender.html","searchKeys":["FlowBufferedAppender","constructor(capacity: Int, onBufferOverflow: BufferOverflow = BufferOverflow.DROP_OLDEST)","io.github.smyrgeorge.log4k.impl.appenders.FlowBufferedAppender.FlowBufferedAppender"]},{"name":"constructor(code: TracingEvent.Span.Status.Code = Code.UNSET, error: Throwable? = null, description: String? = null)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Status","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-status.html","searchKeys":["Status","constructor(code: TracingEvent.Span.Status.Code = Code.UNSET, error: Throwable? = null, description: String? = null)","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Status"]},{"name":"constructor(id: Long = 0, level: Level, span: TracingEvent.Span?, timestamp: Instant, logger: String, message: String, arguments: Array<out Any?>, thread: String, throwable: Throwable?)","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.SimpleLoggingEvent","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logging-event/-simple-logging-event.html","searchKeys":["SimpleLoggingEvent","constructor(id: Long = 0, level: Level, span: TracingEvent.Span?, timestamp: Instant, logger: String, message: String, arguments: Array<out Any?>, thread: String, throwable: Throwable?)","io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.SimpleLoggingEvent"]},{"name":"constructor(name: String, level: Level)","description":"io.github.smyrgeorge.log4k.Logger.Logger","location":"log4k/io.github.smyrgeorge.log4k/-logger/-logger.html","searchKeys":["Logger","constructor(name: String, level: Level)","io.github.smyrgeorge.log4k.Logger.Logger"]},{"name":"constructor(name: String, level: Level)","description":"io.github.smyrgeorge.log4k.Tracer.Tracer","location":"log4k/io.github.smyrgeorge.log4k/-tracer/-tracer.html","searchKeys":["Tracer","constructor(name: String, level: Level)","io.github.smyrgeorge.log4k.Tracer.Tracer"]},{"name":"constructor(name: String, level: Level)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context.Tracer.Tracer","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/-tracer/-tracer.html","searchKeys":["Tracer","constructor(name: String, level: Level)","io.github.smyrgeorge.log4k.TracingEvent.Span.Context.Tracer.Tracer"]},{"name":"constructor(name: String, level: Level)","description":"io.github.smyrgeorge.log4k.impl.SimpleLogger.SimpleLogger","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logger/-simple-logger.html","searchKeys":["SimpleLogger","constructor(name: String, level: Level)","io.github.smyrgeorge.log4k.impl.SimpleLogger.SimpleLogger"]},{"name":"constructor(name: String, level: Level)","description":"io.github.smyrgeorge.log4k.impl.SimpleTracer.SimpleTracer","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-tracer/-simple-tracer.html","searchKeys":["SimpleTracer","constructor(name: String, level: Level)","io.github.smyrgeorge.log4k.impl.SimpleTracer.SimpleTracer"]},{"name":"constructor(name: String, level: Level, context: TracingEvent.Span.Context, parent: TracingEvent.Span?, startAt: Instant?, endAt: Instant?, attributes: MutableMap<String, Any?>, events: MutableList<TracingEvent.Span.Event>, status: TracingEvent.Span.Status)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Span","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-span.html","searchKeys":["Span","constructor(name: String, level: Level, context: TracingEvent.Span.Context, parent: TracingEvent.Span?, startAt: Instant?, endAt: Instant?, attributes: MutableMap<String, Any?>, events: MutableList<TracingEvent.Span.Event>, status: TracingEvent.Span.Status)","io.github.smyrgeorge.log4k.TracingEvent.Span.Span"]},{"name":"constructor(name: String, timestamp: Instant, attributes: Map<String, Any?>)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Event.Event","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-event/-event.html","searchKeys":["Event","constructor(name: String, timestamp: Instant, attributes: Map<String, Any?>)","io.github.smyrgeorge.log4k.TracingEvent.Span.Event.Event"]},{"name":"constructor(requestPerSecond: Int, burstDurationMillis: Int)","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowFloodProtectedAppender.FlowFloodProtectedAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-flood-protected-appender/-flow-flood-protected-appender.html","searchKeys":["FlowFloodProtectedAppender","constructor(requestPerSecond: Int, burstDurationMillis: Int)","io.github.smyrgeorge.log4k.impl.appenders.FlowFloodProtectedAppender.FlowFloodProtectedAppender"]},{"name":"constructor(size: Int)","description":"io.github.smyrgeorge.log4k.impl.appenders.BatchAppender.BatchAppender","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-batch-appender/-batch-appender.html","searchKeys":["BatchAppender","constructor(size: Int)","io.github.smyrgeorge.log4k.impl.appenders.BatchAppender.BatchAppender"]},{"name":"constructor(traceId: String, spanId: String, isRemote: Boolean, tracer: TracingEvent.Span.Context.Tracer)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context.Context","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/-context.html","searchKeys":["Context","constructor(traceId: String, spanId: String, isRemote: Boolean, tracer: TracingEvent.Span.Context.Tracer)","io.github.smyrgeorge.log4k.TracingEvent.Span.Context.Context"]},{"name":"data class Context(val traceId: String, val spanId: String, val isRemote: Boolean, val tracer: TracingEvent.Span.Context.Tracer)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/index.html","searchKeys":["Context","data class Context(val traceId: String, val spanId: String, val isRemote: Boolean, val tracer: TracingEvent.Span.Context.Tracer)","io.github.smyrgeorge.log4k.TracingEvent.Span.Context"]},{"name":"data class Event(val name: String, val timestamp: Instant, val attributes: Map<String, Any?>)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Event","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-event/index.html","searchKeys":["Event","data class Event(val name: String, val timestamp: Instant, val attributes: Map<String, Any?>)","io.github.smyrgeorge.log4k.TracingEvent.Span.Event"]},{"name":"data class Span(val name: String, val level: Level, val context: TracingEvent.Span.Context, val parent: TracingEvent.Span?, var startAt: Instant?, var endAt: Instant?, val attributes: MutableMap<String, Any?>, val events: MutableList<TracingEvent.Span.Event>, var status: TracingEvent.Span.Status) : TracingEvent","description":"io.github.smyrgeorge.log4k.TracingEvent.Span","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/index.html","searchKeys":["Span","data class Span(val name: String, val level: Level, val context: TracingEvent.Span.Context, val parent: TracingEvent.Span?, var startAt: Instant?, var endAt: Instant?, val attributes: MutableMap<String, Any?>, val events: MutableList<TracingEvent.Span.Event>, var status: TracingEvent.Span.Status) : TracingEvent","io.github.smyrgeorge.log4k.TracingEvent.Span"]},{"name":"data class Status(val code: TracingEvent.Span.Status.Code = Code.UNSET, val error: Throwable? = null, val description: String? = null)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/index.html","searchKeys":["Status","data class Status(val code: TracingEvent.Span.Status.Code = Code.UNSET, val error: Throwable? = null, val description: String? = null)","io.github.smyrgeorge.log4k.TracingEvent.Span.Status"]},{"name":"data class Tracer(val name: String, val level: Level)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context.Tracer","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/-tracer/index.html","searchKeys":["Tracer","data class Tracer(val name: String, val level: Level)","io.github.smyrgeorge.log4k.TracingEvent.Span.Context.Tracer"]},{"name":"enum Code : Enum<TracingEvent.Span.Status.Code> ","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-code/index.html","searchKeys":["Code","enum Code : Enum<TracingEvent.Span.Status.Code> ","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code"]},{"name":"enum Level : Enum<Level> ","description":"io.github.smyrgeorge.log4k.Level","location":"log4k/io.github.smyrgeorge.log4k/-level/index.html","searchKeys":["Level","enum Level : Enum<Level> ","io.github.smyrgeorge.log4k.Level"]},{"name":"expect fun KClass<*>.toName(): String","description":"io.github.smyrgeorge.log4k.impl.extensions.toName","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/to-name.html","searchKeys":["toName","expect fun KClass<*>.toName(): String","io.github.smyrgeorge.log4k.impl.extensions.toName"]},{"name":"expect fun dispatcher(): CoroutineDispatcher","description":"io.github.smyrgeorge.log4k.impl.extensions.dispatcher","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/dispatcher.html","searchKeys":["dispatcher","expect fun dispatcher(): CoroutineDispatcher","io.github.smyrgeorge.log4k.impl.extensions.dispatcher"]},{"name":"expect fun thread(): String","description":"io.github.smyrgeorge.log4k.impl.extensions.thread","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/thread.html","searchKeys":["thread","expect fun thread(): String","io.github.smyrgeorge.log4k.impl.extensions.thread"]},{"name":"expect fun threadId(): Int","description":"io.github.smyrgeorge.log4k.impl.extensions.threadId","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/thread-id.html","searchKeys":["threadId","expect fun threadId(): Int","io.github.smyrgeorge.log4k.impl.extensions.threadId"]},{"name":"fun <T> Flow<T>.preventFloodingWithBurst(requestsPerSecond: Int, burstDurationMillis: Int, onDropMessages: (dropped: Int, totalDropped: Long) -> Unit = { dropped, totalDropped -> println(\"Dropped $dropped log messages due to flooding (total: $totalDropped).\") }): Flow<T>","description":"io.github.smyrgeorge.log4k.impl.extensions.preventFloodingWithBurst","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/prevent-flooding-with-burst.html","searchKeys":["preventFloodingWithBurst","fun <T> Flow<T>.preventFloodingWithBurst(requestsPerSecond: Int, burstDurationMillis: Int, onDropMessages: (dropped: Int, totalDropped: Long) -> Unit = { dropped, totalDropped -> println(\"Dropped $dropped log messages due to flooding (total: $totalDropped).\") }): Flow<T>","io.github.smyrgeorge.log4k.impl.extensions.preventFloodingWithBurst"]},{"name":"fun Level.shouldLog(): Boolean","description":"io.github.smyrgeorge.log4k.Logger.shouldLog","location":"log4k/io.github.smyrgeorge.log4k/-logger/should-log.html","searchKeys":["shouldLog","fun Level.shouldLog(): Boolean","io.github.smyrgeorge.log4k.Logger.shouldLog"]},{"name":"fun LoggingEvent.print()","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.Companion.print","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-logging-appender/-companion/print.html","searchKeys":["print","fun LoggingEvent.print()","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.Companion.print"]},{"name":"fun String.format(args: Array<out Any?>): String","description":"io.github.smyrgeorge.log4k.impl.extensions.format","location":"log4k/io.github.smyrgeorge.log4k.impl.extensions/format.html","searchKeys":["format","fun String.format(args: Array<out Any?>): String","io.github.smyrgeorge.log4k.impl.extensions.format"]},{"name":"fun all(): List<Appender<T>>","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.all","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/all.html","searchKeys":["all","fun all(): List<Appender<T>>","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.all"]},{"name":"fun debug(msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","fun debug(msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"fun debug(msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","fun debug(msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"fun debug(name: String, attrs: Map<String, Any?> = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.debug","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/debug.html","searchKeys":["debug","fun debug(name: String, attrs: Map<String, Any?> = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.debug"]},{"name":"fun debug(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","fun debug(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"fun debug(span: TracingEvent.Span, msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","fun debug(span: TracingEvent.Span, msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"fun end(error: Throwable? = null)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.end","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/end.html","searchKeys":["end","fun end(error: Throwable? = null)","io.github.smyrgeorge.log4k.TracingEvent.Span.end"]},{"name":"fun error(msg: String?, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","fun error(msg: String?, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"fun error(msg: String?, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","fun error(msg: String?, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"fun error(name: String, attrs: Map<String, Any?> = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.error","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/error.html","searchKeys":["error","fun error(name: String, attrs: Map<String, Any?> = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.error"]},{"name":"fun error(span: TracingEvent.Span, msg: String?, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","fun error(span: TracingEvent.Span, msg: String?, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"fun error(span: TracingEvent.Span, msg: String?, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","fun error(span: TracingEvent.Span, msg: String?, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"fun event(name: String, attrs: Map<String, Any?> = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.event","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/event.html","searchKeys":["event","fun event(name: String, attrs: Map<String, Any?> = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.event"]},{"name":"fun event(name: String, f: (MutableMap<String, Any?>) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.event","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/event.html","searchKeys":["event","fun event(name: String, f: (MutableMap<String, Any?>) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.event"]},{"name":"fun event(name: String, level: Level, attrs: Map<String, Any?> = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.event","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/event.html","searchKeys":["event","fun event(name: String, level: Level, attrs: Map<String, Any?> = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.event"]},{"name":"fun exception(error: Throwable, escaped: Boolean, attrs: Map<String, Any?> = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.exception","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/exception.html","searchKeys":["exception","fun exception(error: Throwable, escaped: Boolean, attrs: Map<String, Any?> = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.exception"]},{"name":"fun exception(error: Throwable, escaped: Boolean, f: (MutableMap<String, Any?>) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.exception","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/exception.html","searchKeys":["exception","fun exception(error: Throwable, escaped: Boolean, f: (MutableMap<String, Any?>) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.exception"]},{"name":"fun get(clazz: KClass<*>): T?","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.get","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/get.html","searchKeys":["get","fun get(clazz: KClass<*>): T?","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.get"]},{"name":"fun get(name: String): Appender<T>?","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.get","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/get.html","searchKeys":["get","fun get(name: String): Appender<T>?","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.get"]},{"name":"fun get(name: String): T?","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.get","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/get.html","searchKeys":["get","fun get(name: String): T?","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.get"]},{"name":"fun id(): Long","description":"io.github.smyrgeorge.log4k.RootLogger.Logging.id","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-logging/id.html","searchKeys":["id","fun id(): Long","io.github.smyrgeorge.log4k.RootLogger.Logging.id"]},{"name":"fun id(): String","description":"io.github.smyrgeorge.log4k.RootLogger.Tracing.id","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-tracing/id.html","searchKeys":["id","fun id(): String","io.github.smyrgeorge.log4k.RootLogger.Tracing.id"]},{"name":"fun info(msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","fun info(msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"fun info(msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","fun info(msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"fun info(name: String, attrs: Map<String, Any?> = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.info","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/info.html","searchKeys":["info","fun info(name: String, attrs: Map<String, Any?> = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.info"]},{"name":"fun info(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","fun info(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"fun info(span: TracingEvent.Span, msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","fun info(span: TracingEvent.Span, msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"fun isMuted(clazz: KClass<*>): Boolean","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.isMuted","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/is-muted.html","searchKeys":["isMuted","fun isMuted(clazz: KClass<*>): Boolean","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.isMuted"]},{"name":"fun isMuted(name: String): Boolean","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.isMuted","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/is-muted.html","searchKeys":["isMuted","fun isMuted(name: String): Boolean","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.isMuted"]},{"name":"fun log(event: LoggingEvent)","description":"io.github.smyrgeorge.log4k.RootLogger.log","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/log.html","searchKeys":["log","fun log(event: LoggingEvent)","io.github.smyrgeorge.log4k.RootLogger.log"]},{"name":"fun mute(clazz: KClass<*>)","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.mute","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/mute.html","searchKeys":["mute","fun mute(clazz: KClass<*>)","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.mute"]},{"name":"fun mute(name: String)","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.mute","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/mute.html","searchKeys":["mute","fun mute(name: String)","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.mute"]},{"name":"fun of(clazz: KClass<*>): Logger","description":"io.github.smyrgeorge.log4k.Logger.Companion.of","location":"log4k/io.github.smyrgeorge.log4k/-logger/-companion/of.html","searchKeys":["of","fun of(clazz: KClass<*>): Logger","io.github.smyrgeorge.log4k.Logger.Companion.of"]},{"name":"fun of(clazz: KClass<*>): Tracer","description":"io.github.smyrgeorge.log4k.Tracer.Companion.of","location":"log4k/io.github.smyrgeorge.log4k/-tracer/-companion/of.html","searchKeys":["of","fun of(clazz: KClass<*>): Tracer","io.github.smyrgeorge.log4k.Tracer.Companion.of"]},{"name":"fun of(id: String, name: String, level: Level, tracer: Tracer, parent: TracingEvent.Span? = null, isRemote: Boolean = false, traceId: String = parent?.context?.traceId ?: id): TracingEvent.Span","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Companion.of","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-companion/of.html","searchKeys":["of","fun of(id: String, name: String, level: Level, tracer: Tracer, parent: TracingEvent.Span? = null, isRemote: Boolean = false, traceId: String = parent?.context?.traceId ?: id): TracingEvent.Span","io.github.smyrgeorge.log4k.TracingEvent.Span.Companion.of"]},{"name":"fun of(name: String): Logger","description":"io.github.smyrgeorge.log4k.Logger.Companion.of","location":"log4k/io.github.smyrgeorge.log4k/-logger/-companion/of.html","searchKeys":["of","fun of(name: String): Logger","io.github.smyrgeorge.log4k.Logger.Companion.of"]},{"name":"fun of(name: String): Tracer","description":"io.github.smyrgeorge.log4k.Tracer.Companion.of","location":"log4k/io.github.smyrgeorge.log4k/-tracer/-companion/of.html","searchKeys":["of","fun of(name: String): Tracer","io.github.smyrgeorge.log4k.Tracer.Companion.of"]},{"name":"fun register(appender: Appender<LoggingEvent>): Boolean","description":"io.github.smyrgeorge.log4k.RootLogger.Logging.register","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-logging/register.html","searchKeys":["register","fun register(appender: Appender<LoggingEvent>): Boolean","io.github.smyrgeorge.log4k.RootLogger.Logging.register"]},{"name":"fun register(appender: Appender<T>): Boolean","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.register","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/register.html","searchKeys":["register","fun register(appender: Appender<T>): Boolean","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.register"]},{"name":"fun register(appender: Appender<TracingEvent>): Boolean","description":"io.github.smyrgeorge.log4k.RootLogger.Tracing.register","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-tracing/register.html","searchKeys":["register","fun register(appender: Appender<TracingEvent>): Boolean","io.github.smyrgeorge.log4k.RootLogger.Tracing.register"]},{"name":"fun register(logger: T)","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.register","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/register.html","searchKeys":["register","fun register(logger: T)","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.register"]},{"name":"fun setLevel(clazz: KClass<*>, level: Level)","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.setLevel","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/set-level.html","searchKeys":["setLevel","fun setLevel(clazz: KClass<*>, level: Level)","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.setLevel"]},{"name":"fun setLevel(name: String, level: Level)","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.setLevel","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/set-level.html","searchKeys":["setLevel","fun setLevel(name: String, level: Level)","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.setLevel"]},{"name":"fun span(id: String, traceId: String, name: String): TracingEvent.Span","description":"io.github.smyrgeorge.log4k.Tracer.span","location":"log4k/io.github.smyrgeorge.log4k/-tracer/span.html","searchKeys":["span","fun span(id: String, traceId: String, name: String): TracingEvent.Span","io.github.smyrgeorge.log4k.Tracer.span"]},{"name":"fun span(name: String, parent: TracingEvent.Span? = null): TracingEvent.Span","description":"io.github.smyrgeorge.log4k.Tracer.span","location":"log4k/io.github.smyrgeorge.log4k/-tracer/span.html","searchKeys":["span","fun span(name: String, parent: TracingEvent.Span? = null): TracingEvent.Span","io.github.smyrgeorge.log4k.Tracer.span"]},{"name":"fun start(): TracingEvent.Span","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.start","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/start.html","searchKeys":["start","fun start(): TracingEvent.Span","io.github.smyrgeorge.log4k.TracingEvent.Span.start"]},{"name":"fun trace(event: TracingEvent)","description":"io.github.smyrgeorge.log4k.RootLogger.trace","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/trace.html","searchKeys":["trace","fun trace(event: TracingEvent)","io.github.smyrgeorge.log4k.RootLogger.trace"]},{"name":"fun trace(msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","fun trace(msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"fun trace(msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","fun trace(msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"fun trace(name: String, attrs: Map<String, Any?> = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.trace","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/trace.html","searchKeys":["trace","fun trace(name: String, attrs: Map<String, Any?> = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.trace"]},{"name":"fun trace(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","fun trace(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"fun trace(span: TracingEvent.Span, msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","fun trace(span: TracingEvent.Span, msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"fun unmute(clazz: KClass<*>)","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.unmute","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/unmute.html","searchKeys":["unmute","fun unmute(clazz: KClass<*>)","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.unmute"]},{"name":"fun unmute(name: String)","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.unmute","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/unmute.html","searchKeys":["unmute","fun unmute(name: String)","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.unmute"]},{"name":"fun unregister(appender: Appender<*>): Boolean","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregister","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/unregister.html","searchKeys":["unregister","fun unregister(appender: Appender<*>): Boolean","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregister"]},{"name":"fun unregister(appender: KClass<*>): Boolean","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregister","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/unregister.html","searchKeys":["unregister","fun unregister(appender: KClass<*>): Boolean","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregister"]},{"name":"fun unregister(name: String): Boolean","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregister","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/unregister.html","searchKeys":["unregister","fun unregister(name: String): Boolean","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregister"]},{"name":"fun unregisterAll()","description":"io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregisterAll","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-appender-registry/unregister-all.html","searchKeys":["unregisterAll","fun unregisterAll()","io.github.smyrgeorge.log4k.impl.registry.AppenderRegistry.unregisterAll"]},{"name":"fun valueOf(value: String): Level","description":"io.github.smyrgeorge.log4k.Level.valueOf","location":"log4k/io.github.smyrgeorge.log4k/-level/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Level","io.github.smyrgeorge.log4k.Level.valueOf"]},{"name":"fun valueOf(value: String): TracingEvent.Span.Status.Code","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.valueOf","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-code/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TracingEvent.Span.Status.Code","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.valueOf"]},{"name":"fun values(): Array<Level>","description":"io.github.smyrgeorge.log4k.Level.values","location":"log4k/io.github.smyrgeorge.log4k/-level/values.html","searchKeys":["values","fun values(): Array<Level>","io.github.smyrgeorge.log4k.Level.values"]},{"name":"fun values(): Array<TracingEvent.Span.Status.Code>","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.values","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-code/values.html","searchKeys":["values","fun values(): Array<TracingEvent.Span.Status.Code>","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.values"]},{"name":"fun warn(msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","fun warn(msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"fun warn(msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","fun warn(msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"fun warn(name: String, attrs: Map<String, Any?> = emptyMap())","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.warn","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/warn.html","searchKeys":["warn","fun warn(name: String, attrs: Map<String, Any?> = emptyMap())","io.github.smyrgeorge.log4k.TracingEvent.Span.warn"]},{"name":"fun warn(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","fun warn(span: TracingEvent.Span, msg: String, t: Throwable, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"fun warn(span: TracingEvent.Span, msg: String, vararg args: Any?)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","fun warn(span: TracingEvent.Span, msg: String, vararg args: Any?)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"inline fun <T> span(name: String, parent: TracingEvent.Span? = null, f: (TracingEvent.Span) -> T): T","description":"io.github.smyrgeorge.log4k.Tracer.span","location":"log4k/io.github.smyrgeorge.log4k/-tracer/span.html","searchKeys":["span","inline fun <T> span(name: String, parent: TracingEvent.Span? = null, f: (TracingEvent.Span) -> T): T","io.github.smyrgeorge.log4k.Tracer.span"]},{"name":"inline fun debug(f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","inline fun debug(f: () -> String)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"inline fun debug(name: String, f: (MutableMap<String, Any?>) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.debug","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/debug.html","searchKeys":["debug","inline fun debug(name: String, f: (MutableMap<String, Any?>) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.debug"]},{"name":"inline fun debug(span: TracingEvent.Span, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","inline fun debug(span: TracingEvent.Span, f: () -> String)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"inline fun debug(span: TracingEvent.Span, t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","inline fun debug(span: TracingEvent.Span, t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"inline fun debug(t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.debug","location":"log4k/io.github.smyrgeorge.log4k/-logger/debug.html","searchKeys":["debug","inline fun debug(t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.debug"]},{"name":"inline fun error(f: () -> String?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","inline fun error(f: () -> String?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"inline fun error(name: String, f: (MutableMap<String, Any?>) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.error","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/error.html","searchKeys":["error","inline fun error(name: String, f: (MutableMap<String, Any?>) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.error"]},{"name":"inline fun error(span: TracingEvent.Span, f: () -> String?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","inline fun error(span: TracingEvent.Span, f: () -> String?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"inline fun error(span: TracingEvent.Span, t: Throwable, f: () -> String?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","inline fun error(span: TracingEvent.Span, t: Throwable, f: () -> String?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"inline fun error(t: Throwable, f: () -> String?)","description":"io.github.smyrgeorge.log4k.Logger.error","location":"log4k/io.github.smyrgeorge.log4k/-logger/error.html","searchKeys":["error","inline fun error(t: Throwable, f: () -> String?)","io.github.smyrgeorge.log4k.Logger.error"]},{"name":"inline fun event(name: String, level: Level, f: (MutableMap<String, Any?>) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.event","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/event.html","searchKeys":["event","inline fun event(name: String, level: Level, f: (MutableMap<String, Any?>) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.event"]},{"name":"inline fun info(f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","inline fun info(f: () -> String)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"inline fun info(name: String, f: (MutableMap<String, Any?>) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.info","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/info.html","searchKeys":["info","inline fun info(name: String, f: (MutableMap<String, Any?>) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.info"]},{"name":"inline fun info(span: TracingEvent.Span, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","inline fun info(span: TracingEvent.Span, f: () -> String)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"inline fun info(span: TracingEvent.Span, t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","inline fun info(span: TracingEvent.Span, t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"inline fun info(t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.info","location":"log4k/io.github.smyrgeorge.log4k/-logger/info.html","searchKeys":["info","inline fun info(t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.info"]},{"name":"inline fun trace(f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","inline fun trace(f: () -> String)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"inline fun trace(name: String, f: (MutableMap<String, Any?>) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.trace","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/trace.html","searchKeys":["trace","inline fun trace(name: String, f: (MutableMap<String, Any?>) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.trace"]},{"name":"inline fun trace(span: TracingEvent.Span, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","inline fun trace(span: TracingEvent.Span, f: () -> String)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"inline fun trace(span: TracingEvent.Span, t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","inline fun trace(span: TracingEvent.Span, t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"inline fun trace(t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.trace","location":"log4k/io.github.smyrgeorge.log4k/-logger/trace.html","searchKeys":["trace","inline fun trace(t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.trace"]},{"name":"inline fun warn(f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","inline fun warn(f: () -> String)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"inline fun warn(name: String, f: (MutableMap<String, Any?>) -> Unit)","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.warn","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/warn.html","searchKeys":["warn","inline fun warn(name: String, f: (MutableMap<String, Any?>) -> Unit)","io.github.smyrgeorge.log4k.TracingEvent.Span.warn"]},{"name":"inline fun warn(span: TracingEvent.Span, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","inline fun warn(span: TracingEvent.Span, f: () -> String)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"inline fun warn(span: TracingEvent.Span, t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","inline fun warn(span: TracingEvent.Span, t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"inline fun warn(t: Throwable, f: () -> String)","description":"io.github.smyrgeorge.log4k.Logger.warn","location":"log4k/io.github.smyrgeorge.log4k/-logger/warn.html","searchKeys":["warn","inline fun warn(t: Throwable, f: () -> String)","io.github.smyrgeorge.log4k.Logger.warn"]},{"name":"interface Appender<T>","description":"io.github.smyrgeorge.log4k.Appender","location":"log4k/io.github.smyrgeorge.log4k/-appender/index.html","searchKeys":["Appender","interface Appender<T>","io.github.smyrgeorge.log4k.Appender"]},{"name":"interface Collector","description":"io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.Collector","location":"log4k/io.github.smyrgeorge.log4k.impl.registry/-logger-registry/-collector/index.html","searchKeys":["Collector","interface Collector","io.github.smyrgeorge.log4k.impl.registry.LoggerRegistry.Collector"]},{"name":"interface LoggerFactory","description":"io.github.smyrgeorge.log4k.LoggerFactory","location":"log4k/io.github.smyrgeorge.log4k/-logger-factory/index.html","searchKeys":["LoggerFactory","interface LoggerFactory","io.github.smyrgeorge.log4k.LoggerFactory"]},{"name":"interface LoggingEvent","description":"io.github.smyrgeorge.log4k.LoggingEvent","location":"log4k/io.github.smyrgeorge.log4k/-logging-event/index.html","searchKeys":["LoggingEvent","interface LoggingEvent","io.github.smyrgeorge.log4k.LoggingEvent"]},{"name":"interface TracerFactory","description":"io.github.smyrgeorge.log4k.TracerFactory","location":"log4k/io.github.smyrgeorge.log4k/-tracer-factory/index.html","searchKeys":["TracerFactory","interface TracerFactory","io.github.smyrgeorge.log4k.TracerFactory"]},{"name":"interface TracingEvent","description":"io.github.smyrgeorge.log4k.TracingEvent","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/index.html","searchKeys":["TracingEvent","interface TracingEvent","io.github.smyrgeorge.log4k.TracingEvent"]},{"name":"object Companion","description":"io.github.smyrgeorge.log4k.Logger.Companion","location":"log4k/io.github.smyrgeorge.log4k/-logger/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.log4k.Logger.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.log4k.Tracer.Companion","location":"log4k/io.github.smyrgeorge.log4k/-tracer/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.log4k.Tracer.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Companion","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.log4k.TracingEvent.Span.Companion"]},{"name":"object Companion","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.Companion","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-logging-appender/-companion/index.html","searchKeys":["Companion","object Companion","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.Companion"]},{"name":"object Logging","description":"io.github.smyrgeorge.log4k.RootLogger.Logging","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-logging/index.html","searchKeys":["Logging","object Logging","io.github.smyrgeorge.log4k.RootLogger.Logging"]},{"name":"object OpenTelemetry","description":"io.github.smyrgeorge.log4k.impl.OpenTelemetry","location":"log4k/io.github.smyrgeorge.log4k.impl/-open-telemetry/index.html","searchKeys":["OpenTelemetry","object OpenTelemetry","io.github.smyrgeorge.log4k.impl.OpenTelemetry"]},{"name":"object RootLogger","description":"io.github.smyrgeorge.log4k.RootLogger","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/index.html","searchKeys":["RootLogger","object RootLogger","io.github.smyrgeorge.log4k.RootLogger"]},{"name":"object Tracing","description":"io.github.smyrgeorge.log4k.RootLogger.Tracing","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-tracing/index.html","searchKeys":["Tracing","object Tracing","io.github.smyrgeorge.log4k.RootLogger.Tracing"]},{"name":"open fun get(clazz: KClass<*>): Logger","description":"io.github.smyrgeorge.log4k.LoggerFactory.get","location":"log4k/io.github.smyrgeorge.log4k/-logger-factory/get.html","searchKeys":["get","open fun get(clazz: KClass<*>): Logger","io.github.smyrgeorge.log4k.LoggerFactory.get"]},{"name":"open fun get(clazz: KClass<*>): Tracer","description":"io.github.smyrgeorge.log4k.TracerFactory.get","location":"log4k/io.github.smyrgeorge.log4k/-tracer-factory/get.html","searchKeys":["get","open fun get(clazz: KClass<*>): Tracer","io.github.smyrgeorge.log4k.TracerFactory.get"]},{"name":"open fun get(name: String): Logger","description":"io.github.smyrgeorge.log4k.LoggerFactory.get","location":"log4k/io.github.smyrgeorge.log4k/-logger-factory/get.html","searchKeys":["get","open fun get(name: String): Logger","io.github.smyrgeorge.log4k.LoggerFactory.get"]},{"name":"open fun get(name: String): Tracer","description":"io.github.smyrgeorge.log4k.TracerFactory.get","location":"log4k/io.github.smyrgeorge.log4k/-tracer-factory/get.html","searchKeys":["get","open fun get(name: String): Tracer","io.github.smyrgeorge.log4k.TracerFactory.get"]},{"name":"open override fun create(name: String): Logger","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggerFactory.create","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logger-factory/create.html","searchKeys":["create","open override fun create(name: String): Logger","io.github.smyrgeorge.log4k.impl.SimpleLoggerFactory.create"]},{"name":"open override fun create(name: String): Tracer","description":"io.github.smyrgeorge.log4k.impl.SimpleTracerFactory.create","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-tracer-factory/create.html","searchKeys":["create","open override fun create(name: String): Tracer","io.github.smyrgeorge.log4k.impl.SimpleTracerFactory.create"]},{"name":"open override fun mute()","description":"io.github.smyrgeorge.log4k.Logger.mute","location":"log4k/io.github.smyrgeorge.log4k/-logger/mute.html","searchKeys":["mute","open override fun mute()","io.github.smyrgeorge.log4k.Logger.mute"]},{"name":"open override fun mute()","description":"io.github.smyrgeorge.log4k.Tracer.mute","location":"log4k/io.github.smyrgeorge.log4k/-tracer/mute.html","searchKeys":["mute","open override fun mute()","io.github.smyrgeorge.log4k.Tracer.mute"]},{"name":"open override fun setup(flow: Flow<T>): Flow<List<T>>","description":"io.github.smyrgeorge.log4k.impl.appenders.BatchAppender.setup","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-batch-appender/setup.html","searchKeys":["setup","open override fun setup(flow: Flow<T>): Flow<List<T>>","io.github.smyrgeorge.log4k.impl.appenders.BatchAppender.setup"]},{"name":"open override fun setup(flow: Flow<T>): Flow<T>","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowBufferedAppender.setup","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-buffered-appender/setup.html","searchKeys":["setup","open override fun setup(flow: Flow<T>): Flow<T>","io.github.smyrgeorge.log4k.impl.appenders.FlowBufferedAppender.setup"]},{"name":"open override fun setup(flow: Flow<T>): Flow<T>","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowFloodProtectedAppender.setup","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-flood-protected-appender/setup.html","searchKeys":["setup","open override fun setup(flow: Flow<T>): Flow<T>","io.github.smyrgeorge.log4k.impl.appenders.FlowFloodProtectedAppender.setup"]},{"name":"open override fun toLoggingEvent(level: Level, span: TracingEvent.Span?, msg: String, throwable: Throwable?, args: Array<out Any?>): LoggingEvent","description":"io.github.smyrgeorge.log4k.impl.SimpleLogger.toLoggingEvent","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logger/to-logging-event.html","searchKeys":["toLoggingEvent","open override fun toLoggingEvent(level: Level, span: TracingEvent.Span?, msg: String, throwable: Throwable?, args: Array<out Any?>): LoggingEvent","io.github.smyrgeorge.log4k.impl.SimpleLogger.toLoggingEvent"]},{"name":"open override fun unmute()","description":"io.github.smyrgeorge.log4k.Logger.unmute","location":"log4k/io.github.smyrgeorge.log4k/-logger/unmute.html","searchKeys":["unmute","open override fun unmute()","io.github.smyrgeorge.log4k.Logger.unmute"]},{"name":"open override fun unmute()","description":"io.github.smyrgeorge.log4k.Tracer.unmute","location":"log4k/io.github.smyrgeorge.log4k/-tracer/unmute.html","searchKeys":["unmute","open override fun unmute()","io.github.smyrgeorge.log4k.Tracer.unmute"]},{"name":"open override val arguments: Array<out Any?>","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.arguments","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logging-event/arguments.html","searchKeys":["arguments","open override val arguments: Array<out Any?>","io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.arguments"]},{"name":"open override val level: Level","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.level","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logging-event/level.html","searchKeys":["level","open override val level: Level","io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.level"]},{"name":"open override val logger: String","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.logger","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logging-event/logger.html","searchKeys":["logger","open override val logger: String","io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.logger"]},{"name":"open override val message: String","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.message","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logging-event/message.html","searchKeys":["message","open override val message: String","io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.message"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.Tracer.name","location":"log4k/io.github.smyrgeorge.log4k/-tracer/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.Tracer.name"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.name","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-logging-appender/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.name"]},{"name":"open override val name: String","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender.name","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-tracing-appender/name.html","searchKeys":["name","open override val name: String","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender.name"]},{"name":"open override val span: TracingEvent.Span?","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.span","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logging-event/span.html","searchKeys":["span","open override val span: TracingEvent.Span?","io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.span"]},{"name":"open override val thread: String","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.thread","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logging-event/thread.html","searchKeys":["thread","open override val thread: String","io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.thread"]},{"name":"open override val throwable: Throwable?","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.throwable","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logging-event/throwable.html","searchKeys":["throwable","open override val throwable: Throwable?","io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.throwable"]},{"name":"open override val timestamp: Instant","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.timestamp","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logging-event/timestamp.html","searchKeys":["timestamp","open override val timestamp: Instant","io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.timestamp"]},{"name":"open override var id: Long","description":"io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.id","location":"log4k/io.github.smyrgeorge.log4k.impl/-simple-logging-event/id.html","searchKeys":["id","open override var id: Long","io.github.smyrgeorge.log4k.impl.SimpleLoggingEvent.id"]},{"name":"open override var level: Level","description":"io.github.smyrgeorge.log4k.Tracer.level","location":"log4k/io.github.smyrgeorge.log4k/-tracer/level.html","searchKeys":["level","open override var level: Level","io.github.smyrgeorge.log4k.Tracer.level"]},{"name":"open suspend override fun append(event: LoggingEvent)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.append","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-logging-appender/append.html","searchKeys":["append","open suspend override fun append(event: LoggingEvent)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleLoggingAppender.append"]},{"name":"open suspend override fun append(event: TracingEvent)","description":"io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender.append","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders.simple/-simple-console-tracing-appender/append.html","searchKeys":["append","open suspend override fun append(event: TracingEvent)","io.github.smyrgeorge.log4k.impl.appenders.simple.SimpleConsoleTracingAppender.append"]},{"name":"override val name: String","description":"io.github.smyrgeorge.log4k.Logger.name","location":"log4k/io.github.smyrgeorge.log4k/-logger/name.html","searchKeys":["name","override val name: String","io.github.smyrgeorge.log4k.Logger.name"]},{"name":"override val name: String","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.name","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-appender/name.html","searchKeys":["name","override val name: String","io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.name"]},{"name":"override var level: Level","description":"io.github.smyrgeorge.log4k.Logger.level","location":"log4k/io.github.smyrgeorge.log4k/-logger/level.html","searchKeys":["level","override var level: Level","io.github.smyrgeorge.log4k.Logger.level"]},{"name":"suspend override fun append(event: E)","description":"io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.append","location":"log4k/io.github.smyrgeorge.log4k.impl.appenders/-flow-appender/append.html","searchKeys":["append","suspend override fun append(event: E)","io.github.smyrgeorge.log4k.impl.appenders.FlowAppender.append"]},{"name":"val appenders: AppenderRegistry<LoggingEvent>","description":"io.github.smyrgeorge.log4k.RootLogger.Logging.appenders","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-logging/appenders.html","searchKeys":["appenders","val appenders: AppenderRegistry<LoggingEvent>","io.github.smyrgeorge.log4k.RootLogger.Logging.appenders"]},{"name":"val appenders: AppenderRegistry<TracingEvent>","description":"io.github.smyrgeorge.log4k.RootLogger.Tracing.appenders","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-tracing/appenders.html","searchKeys":["appenders","val appenders: AppenderRegistry<TracingEvent>","io.github.smyrgeorge.log4k.RootLogger.Tracing.appenders"]},{"name":"val attributes: Map<String, Any?>","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Event.attributes","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-event/attributes.html","searchKeys":["attributes","val attributes: Map<String, Any?>","io.github.smyrgeorge.log4k.TracingEvent.Span.Event.attributes"]},{"name":"val attributes: MutableMap<String, Any?>","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.attributes","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/attributes.html","searchKeys":["attributes","val attributes: MutableMap<String, Any?>","io.github.smyrgeorge.log4k.TracingEvent.Span.attributes"]},{"name":"val code: TracingEvent.Span.Status.Code","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.code","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/code.html","searchKeys":["code","val code: TracingEvent.Span.Status.Code","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.code"]},{"name":"val context: TracingEvent.Span.Context","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.context","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/context.html","searchKeys":["context","val context: TracingEvent.Span.Context","io.github.smyrgeorge.log4k.TracingEvent.Span.context"]},{"name":"val description: String? = null","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.description","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/description.html","searchKeys":["description","val description: String? = null","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.description"]},{"name":"val entries: EnumEntries<Level>","description":"io.github.smyrgeorge.log4k.Level.entries","location":"log4k/io.github.smyrgeorge.log4k/-level/entries.html","searchKeys":["entries","val entries: EnumEntries<Level>","io.github.smyrgeorge.log4k.Level.entries"]},{"name":"val entries: EnumEntries<TracingEvent.Span.Status.Code>","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.entries","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/-code/entries.html","searchKeys":["entries","val entries: EnumEntries<TracingEvent.Span.Status.Code>","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.Code.entries"]},{"name":"val error: Throwable? = null","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Status.error","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-status/error.html","searchKeys":["error","val error: Throwable? = null","io.github.smyrgeorge.log4k.TracingEvent.Span.Status.error"]},{"name":"val events: MutableList<TracingEvent.Span.Event>","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.events","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/events.html","searchKeys":["events","val events: MutableList<TracingEvent.Span.Event>","io.github.smyrgeorge.log4k.TracingEvent.Span.events"]},{"name":"val factory: SimpleLoggerFactory","description":"io.github.smyrgeorge.log4k.RootLogger.Logging.factory","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-logging/factory.html","searchKeys":["factory","val factory: SimpleLoggerFactory","io.github.smyrgeorge.log4k.RootLogger.Logging.factory"]},{"name":"val factory: SimpleTracerFactory","description":"io.github.smyrgeorge.log4k.RootLogger.Tracing.factory","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-tracing/factory.html","searchKeys":["factory","val factory: SimpleTracerFactory","io.github.smyrgeorge.log4k.RootLogger.Tracing.factory"]},{"name":"val isRemote: Boolean","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context.isRemote","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/is-remote.html","searchKeys":["isRemote","val isRemote: Boolean","io.github.smyrgeorge.log4k.TracingEvent.Span.Context.isRemote"]},{"name":"val level: Level","description":"io.github.smyrgeorge.log4k.RootLogger.level","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/level.html","searchKeys":["level","val level: Level","io.github.smyrgeorge.log4k.RootLogger.level"]},{"name":"val level: Level","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context.Tracer.level","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/-tracer/level.html","searchKeys":["level","val level: Level","io.github.smyrgeorge.log4k.TracingEvent.Span.Context.Tracer.level"]},{"name":"val level: Level","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.level","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/level.html","searchKeys":["level","val level: Level","io.github.smyrgeorge.log4k.TracingEvent.Span.level"]},{"name":"val loggers: LoggerRegistry<Logger>","description":"io.github.smyrgeorge.log4k.RootLogger.Logging.loggers","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-logging/loggers.html","searchKeys":["loggers","val loggers: LoggerRegistry<Logger>","io.github.smyrgeorge.log4k.RootLogger.Logging.loggers"]},{"name":"val name: String","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context.Tracer.name","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/-tracer/name.html","searchKeys":["name","val name: String","io.github.smyrgeorge.log4k.TracingEvent.Span.Context.Tracer.name"]},{"name":"val name: String","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Event.name","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-event/name.html","searchKeys":["name","val name: String","io.github.smyrgeorge.log4k.TracingEvent.Span.Event.name"]},{"name":"val name: String","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.name","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/name.html","searchKeys":["name","val name: String","io.github.smyrgeorge.log4k.TracingEvent.Span.name"]},{"name":"val parent: TracingEvent.Span?","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.parent","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/parent.html","searchKeys":["parent","val parent: TracingEvent.Span?","io.github.smyrgeorge.log4k.TracingEvent.Span.parent"]},{"name":"val spanId: String","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context.spanId","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/span-id.html","searchKeys":["spanId","val spanId: String","io.github.smyrgeorge.log4k.TracingEvent.Span.Context.spanId"]},{"name":"val timestamp: Instant","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Event.timestamp","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-event/timestamp.html","searchKeys":["timestamp","val timestamp: Instant","io.github.smyrgeorge.log4k.TracingEvent.Span.Event.timestamp"]},{"name":"val traceId: String","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context.traceId","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/trace-id.html","searchKeys":["traceId","val traceId: String","io.github.smyrgeorge.log4k.TracingEvent.Span.Context.traceId"]},{"name":"val tracer: TracingEvent.Span.Context.Tracer","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.Context.tracer","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/-context/tracer.html","searchKeys":["tracer","val tracer: TracingEvent.Span.Context.Tracer","io.github.smyrgeorge.log4k.TracingEvent.Span.Context.tracer"]},{"name":"val tracers: LoggerRegistry<Tracer>","description":"io.github.smyrgeorge.log4k.RootLogger.Tracing.tracers","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-tracing/tracers.html","searchKeys":["tracers","val tracers: LoggerRegistry<Tracer>","io.github.smyrgeorge.log4k.RootLogger.Tracing.tracers"]},{"name":"var endAt: Instant?","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.endAt","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/end-at.html","searchKeys":["endAt","var endAt: Instant?","io.github.smyrgeorge.log4k.TracingEvent.Span.endAt"]},{"name":"var prefix: String","description":"io.github.smyrgeorge.log4k.RootLogger.Tracing.prefix","location":"log4k/io.github.smyrgeorge.log4k/-root-logger/-tracing/prefix.html","searchKeys":["prefix","var prefix: String","io.github.smyrgeorge.log4k.RootLogger.Tracing.prefix"]},{"name":"var startAt: Instant?","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.startAt","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/start-at.html","searchKeys":["startAt","var startAt: Instant?","io.github.smyrgeorge.log4k.TracingEvent.Span.startAt"]},{"name":"var status: TracingEvent.Span.Status","description":"io.github.smyrgeorge.log4k.TracingEvent.Span.status","location":"log4k/io.github.smyrgeorge.log4k/-tracing-event/-span/status.html","searchKeys":["status","var status: TracingEvent.Span.Status","io.github.smyrgeorge.log4k.TracingEvent.Span.status"]}]